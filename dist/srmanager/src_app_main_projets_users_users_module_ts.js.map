{"version":3,"sources":["./node_modules/ng2-file-upload/__ivy_ngcc__/fesm2015/ng2-file-upload.js","./src/app/main/authentication/models/create-userDTO.ts","./src/app/main/authentication/models/type-role.ts","./src/app/main/authentication/models/update-infos-userDTO.ts","./src/app/main/authentication/models/update-pwd-user-requestDTO.ts","./src/app/main/projets/users/account-settings/account-settings.component.ts","./src/app/main/projets/users/account-settings/account-settings.component.html","./src/app/main/projets/users/account-settings/account-settings.service.ts","./src/app/main/projets/users/role-list.service.ts","./src/app/main/projets/users/user-add/user-add.component.ts","./src/app/main/projets/users/user-add/user-add.component.html","./src/app/main/projets/users/user-add/user-add.service.ts","./src/app/main/projets/users/user-edit/user-edit.component.ts","./src/app/main/projets/users/user-edit/user-edit.component.html","./src/app/main/projets/users/user-edit/user-edit.service.ts","./src/app/main/projets/users/users-list/users-list.component.ts","./src/app/main/projets/users/users-list/users-list.component.html","./src/app/main/projets/users/users-list/users-list.service.ts","./src/app/main/projets/users/users.module.ts"],"names":["isElement","node","nodeName","prop","attr","find","FileLikeObject","fileOrInput","rawFile","isInput","fakePathOrObject","value","postfix","method","path","lastModifiedDate","size","type","slice","lastIndexOf","toLowerCase","name","object","FileItem","uploader","some","options","url","headers","withCredentials","formData","isReady","isUploading","isUploaded","isSuccess","isCancel","isError","progress","index","file","_file","alias","itemAlias","uploadItem","e","_onCompleteItem","_onErrorItem","cancelItem","removeFromQueue","form","response","status","onBeforeUpload","onBuildForm","onProgress","onSuccess","onError","onCancel","onComplete","removeAfterUpload","remove","_nextIndex","FileType","mimeClass","mime_psd","indexOf","match","mime_compress","mime_doc","mime_xsl","mime_ppt","fileTypeDetection","inputFilename","types","chunks","split","length","extension","undefined","isFile","File","Headers","FileUploaderOptions","FileUploader","queue","autoUpload","isHTML5","filters","disableMultipart","formatDataFunction","item","formatDataFunctionIsAsync","setOptions","EventEmitter","Object","assign","authToken","authTokenHeader","unshift","fn","_queueLimitFilter","maxFileSize","_fileSizeFilter","allowedFileType","_fileTypeFilter","allowedMimeType","_mimeTypeFilter","i","files","list","push","arrayOfFilters","_getFilters","count","addedFileItems","map","temp","_isValidFile","fileItem","_onAfterAddingFile","filter","_failFilterIndex","_onWhenAddingFileFailed","_onAfterAddingAll","_getTotalProgress","_render","uploadAll","getIndexOfItem","cancel","splice","transport","_prepareToUploading","_xhr","_form","abort","items","getNotUploadedItems","upload","sort","item1","item2","fileItems","getMimeClass","_onError","onErrorItem","_onComplete","onCompleteItem","nextItem","getReadyItems","onCompleteAll","parsedHeaders","that","xhr","XMLHttpRequest","sendable","_onBeforeUploadItem","TypeError","FormData","_onBuildItemForm","appendFile","append","parametersBeforeFiles","additionalParameter","keys","forEach","key","paramVal","replace","onprogress","event","Math","round","lengthComputable","loaded","total","_onProgressItem","onload","_parseHeaders","getAllResponseHeaders","_transformResponse","gist","_isSuccessCode","onerror","onabort","_onCancelItem","open","header","setRequestHeader","onreadystatechange","readyState","DONE","emit","responseText","then","result","send","JSON","stringify","notUploaded","uploaded","ratio","current","Array","isArray","names","queueLimit","every","call","parsed","val","line","trim","onWhenAddingFileFailed","onAfterAddingFile","onAfterAddingAll","_onBeforeUpload","onBeforeUploadItem","_onBuildForm","onBuildItemForm","_onProgress","onProgressItem","onProgressAll","_onSuccess","onSuccessItem","_onCancel","onCancelItem","FileSelectDirective","element","onFileSelected","nativeElement","attributes","multiple","getOptions","getFilters","addToQueue","isEmptyAfterSelection","ɵfac","FileSelectDirective_Factory","t","ɵngcc0","ɵdir","selectors","hostBindings","FileSelectDirective_HostBindings","rf","ctx","FileSelectDirective_change_HostBindingHandler","onChange","inputs","outputs","ctorParameters","ElementRef","propDecorators","Input","Output","HostListener","args","ngDevMode","Directive","selector","FileDropDirective","fileOver","onFileDrop","transfer","_getTransfer","_preventAndStop","_haveFiles","dropEffect","currentTarget","dataTransfer","originalEvent","preventDefault","stopPropagation","contains","FileDropDirective_Factory","FileDropDirective_HostBindings","FileDropDirective_drop_HostBindingHandler","$event","onDrop","FileDropDirective_dragover_HostBindingHandler","onDragOver","FileDropDirective_dragleave_HostBindingHandler","onDragLeave","FileUploadModule","FileUploadModule_Factory","ɵmod","ɵinj","imports","CommonModule","NgModule","declarations","exports","ngJitMode"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;;AACA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AACrB,SAAO,CAAC,EAAEA,IAAI,KAAKA,IAAI,CAACC,QAAL,IAAiBD,IAAI,CAACE,IAAL,IAAaF,IAAI,CAACG,IAAlB,IAA0BH,IAAI,CAACI,IAArD,CAAN,CAAR;AACH;;IACKC,c;AACF;AACJ;AACA;AACI,0BAAYC,WAAZ,EAAyB;AAAA;;AACrB,SAAKC,OAAL,GAAeD,WAAf;AACA;;AACA,QAAIE,OAAO,GAAGT,SAAS,CAACO,WAAD,CAAvB;AACA;;AACA,QAAIG,gBAAgB,GAAGD,OAAO,GAAGF,WAAW,CAACI,KAAf,GAAuBJ,WAArD;AACA;;AACA,QAAIK,OAAO,GAAG,OAAOF,gBAAP,KAA4B,QAA5B,GAAuC,UAAvC,GAAoD,QAAlE;AACA;;AACA,QAAIG,MAAM,GAAG,gBAAgBD,OAA7B;AACoB,QAApB,CAA4BC,MAA5B,EAAoCH,gBAApC;AACH;AACD;AACJ;AACA;AACA;;;;;WACI,6BAAoBI,IAApB,EAA0B;AACtB,WAAKC,gBAAL,GAAwB,KAAK,CAA7B;AACA,WAAKC,IAAL,GAAY,KAAK,CAAjB;AACA,WAAKC,IAAL,GAAY,UAAUH,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,WAAL,CAAiB,GAAjB,IAAwB,CAAnC,EAAsCC,WAAtC,EAAtB;AACA,WAAKC,IAAL,GAAYP,IAAI,CAACI,KAAL,CAAWJ,IAAI,CAACK,WAAL,CAAiB,GAAjB,IAAwBL,IAAI,CAACK,WAAL,CAAiB,IAAjB,CAAxB,GAAiD,CAA5D,CAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,2BAAkBG,MAAlB,EAA0B;AACtB,WAAKN,IAAL,GAAYM,MAAM,CAACN,IAAnB;AACA,WAAKC,IAAL,GAAYK,MAAM,CAACL,IAAnB;AACA,WAAKI,IAAL,GAAYC,MAAM,CAACD,IAAnB;AACH;;;;;;AAEL,IAAI,KAAJ,EAAW,EAWV;AAED;AACA;AACA;AACA;;;IACME,Q;AACF;AACJ;AACA;AACA;AACA;AACI,oBAAYC,QAAZ,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqC;AAAA;;AACjC,SAAKC,GAAL,GAAW,GAAX;AACA,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,WAAL,GAAmB,KAAnB;AACA,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKC,SAAL,GAAiB,KAAjB;AACA,SAAKC,QAAL,GAAgB,KAAhB;AACA,SAAKC,OAAL,GAAe,KAAf;AACA,SAAKC,QAAL,GAAgB,CAAhB;AACA,SAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,SAAKd,QAAL,GAAgBA,QAAhB;AACA,SAAKC,IAAL,GAAYA,IAAZ;AACA,SAAKC,OAAL,GAAeA,OAAf;AACA,SAAKa,IAAL,GAAY,IAAIjC,cAAJ,CAAmBmB,IAAnB,CAAZ;AACA,SAAKe,KAAL,GAAaf,IAAb;;AACA,QAAID,QAAQ,CAACE,OAAb,EAAsB;AAClB,WAAKb,MAAL,GAAcW,QAAQ,CAACE,OAAT,CAAiBb,MAAjB,IAA2B,MAAzC;AACA,WAAK4B,KAAL,GAAajB,QAAQ,CAACE,OAAT,CAAiBgB,SAAjB,IAA8B,MAA3C;AACH;;AACD,SAAKf,GAAL,GAAWH,QAAQ,CAACE,OAAT,CAAiBC,GAA5B;AACH;AACD;AACJ;AACA;;;;;WACI,kBAAS;AACL,UAAI;AACA,aAAKH,QAAL,CAAcmB,UAAd,CAAyB,IAAzB;AACH,OAFD,CAGA,OAAOC,CAAP,EAAU;AACN,aAAKpB,QAAL,CAAcqB,eAAd,CAA8B,IAA9B,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,EAA3C;;AACA,aAAKrB,QAAL,CAAcsB,YAAd,CAA2B,IAA3B,EAAiC,EAAjC,EAAqC,CAArC,EAAwC,EAAxC;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,kBAAS;AACL,WAAKtB,QAAL,CAAcuB,UAAd,CAAyB,IAAzB;AACH;AACD;AACJ;AACA;;;;WACI,kBAAS;AACL,WAAKvB,QAAL,CAAcwB,eAAd,CAA8B,IAA9B;AACH;AACD;AACJ;AACA;;;;WACI,0BAAiB;AACb,aAAO,KAAK,CAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,qBAAYC,IAAZ,EAAkB;AACd,aAAO;AAAEA,YAAI,EAAJA;AAAF,OAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,oBAAWZ,QAAX,EAAqB;AACjB,aAAO;AAAEA,gBAAQ,EAARA;AAAF,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,mBAAUa,QAAV,EAAoBC,MAApB,EAA4BvB,OAA5B,EAAqC;AACjC,aAAO;AAAEsB,gBAAQ,EAARA,QAAF;AAAYC,cAAM,EAANA,MAAZ;AAAoBvB,eAAO,EAAPA;AAApB,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,iBAAQsB,QAAR,EAAkBC,MAAlB,EAA0BvB,OAA1B,EAAmC;AAC/B,aAAO;AAAEsB,gBAAQ,EAARA,QAAF;AAAYC,cAAM,EAANA,MAAZ;AAAoBvB,eAAO,EAAPA;AAApB,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,kBAASsB,QAAT,EAAmBC,MAAnB,EAA2BvB,OAA3B,EAAoC;AAChC,aAAO;AAAEsB,gBAAQ,EAARA,QAAF;AAAYC,cAAM,EAANA,MAAZ;AAAoBvB,eAAO,EAAPA;AAApB,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAWsB,QAAX,EAAqBC,MAArB,EAA6BvB,OAA7B,EAAsC;AAClC,aAAO;AAAEsB,gBAAQ,EAARA,QAAF;AAAYC,cAAM,EAANA,MAAZ;AAAoBvB,eAAO,EAAPA;AAApB,OAAP;AACH;AACD;AACJ;AACA;;;;WACI,2BAAkB;AACd,WAAKG,OAAL,GAAe,IAAf;AACA,WAAKC,WAAL,GAAmB,IAAnB;AACA,WAAKC,UAAL,GAAkB,KAAlB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACA,WAAKC,OAAL,GAAe,KAAf;AACA,WAAKC,QAAL,GAAgB,CAAhB;AACA,WAAKe,cAAL;AACH;AACD;AACJ;AACA;AACA;;;;WACI,sBAAaH,IAAb,EAAmB;AACf,WAAKI,WAAL,CAAiBJ,IAAjB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,qBAAYZ,QAAZ,EAAsB;AAClB,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAKiB,UAAL,CAAgBjB,QAAhB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAWa,QAAX,EAAqBC,MAArB,EAA6BvB,OAA7B,EAAsC;AAClC,WAAKG,OAAL,GAAe,KAAf;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACA,WAAKC,SAAL,GAAiB,IAAjB;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACA,WAAKC,OAAL,GAAe,KAAf;AACA,WAAKC,QAAL,GAAgB,GAAhB;AACA,WAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,WAAKiB,SAAL,CAAeL,QAAf,EAAyBC,MAAzB,EAAiCvB,OAAjC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,kBAASsB,QAAT,EAAmBC,MAAnB,EAA2BvB,OAA3B,EAAoC;AAChC,WAAKG,OAAL,GAAe,KAAf;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,UAAL,GAAkB,IAAlB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACA,WAAKC,QAAL,GAAgB,KAAhB;AACA,WAAKC,OAAL,GAAe,IAAf;AACA,WAAKC,QAAL,GAAgB,CAAhB;AACA,WAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,WAAKkB,OAAL,CAAaN,QAAb,EAAuBC,MAAvB,EAA+BvB,OAA/B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,mBAAUsB,QAAV,EAAoBC,MAApB,EAA4BvB,OAA5B,EAAqC;AACjC,WAAKG,OAAL,GAAe,KAAf;AACA,WAAKC,WAAL,GAAmB,KAAnB;AACA,WAAKC,UAAL,GAAkB,KAAlB;AACA,WAAKC,SAAL,GAAiB,KAAjB;AACA,WAAKC,QAAL,GAAgB,IAAhB;AACA,WAAKC,OAAL,GAAe,KAAf;AACA,WAAKC,QAAL,GAAgB,CAAhB;AACA,WAAKC,KAAL,GAAa,KAAK,CAAlB;AACA,WAAKmB,QAAL,CAAcP,QAAd,EAAwBC,MAAxB,EAAgCvB,OAAhC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,qBAAYsB,QAAZ,EAAsBC,MAAtB,EAA8BvB,OAA9B,EAAuC;AACnC,WAAK8B,UAAL,CAAgBR,QAAhB,EAA0BC,MAA1B,EAAkCvB,OAAlC;;AACA,UAAI,KAAKJ,QAAL,CAAcE,OAAd,CAAsBiC,iBAA1B,EAA6C;AACzC,aAAKC,MAAL;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,+BAAsB;AAClB,WAAKtB,KAAL,GAAa,KAAKA,KAAL,IAAc,EAAE,KAAKd,QAAL,CAAcqC,UAA3C;AACA,WAAK9B,OAAL,GAAe,IAAf;AACH;;;;;;AAEL,IAAI,KAAJ,EAAW,EAoDV;AAED;AACA;AACA;AACA;;;IACM+B,Q;;;;;;;;AACF;AACJ;AACA;AACA;AACI,0BAAoBvB,IAApB,EAA0B;AACtB;AACA,UAAIwB,SAAS,GAAG,aAAhB;;AACA,UAAI,KAAKC,QAAL,CAAcC,OAAd,CAAsB1B,IAAI,CAACtB,IAA3B,MAAqC,CAAC,CAA1C,EAA6C;AACzC8C,iBAAS,GAAG,OAAZ;AACH,OAFD,MAGK,IAAIxB,IAAI,CAACtB,IAAL,CAAUiD,KAAV,CAAgB,SAAhB,CAAJ,EAAgC;AACjCH,iBAAS,GAAG,OAAZ;AACH,OAFI,MAGA,IAAIxB,IAAI,CAACtB,IAAL,CAAUiD,KAAV,CAAgB,SAAhB,CAAJ,EAAgC;AACjCH,iBAAS,GAAG,OAAZ;AACH,OAFI,MAGA,IAAIxB,IAAI,CAACtB,IAAL,CAAUiD,KAAV,CAAgB,SAAhB,CAAJ,EAAgC;AACjCH,iBAAS,GAAG,OAAZ;AACH,OAFI,MAGA,IAAIxB,IAAI,CAACtB,IAAL,KAAc,iBAAlB,EAAqC;AACtC8C,iBAAS,GAAG,KAAZ;AACH,OAFI,MAGA,IAAI,KAAKI,aAAL,CAAmBF,OAAnB,CAA2B1B,IAAI,CAACtB,IAAhC,MAA0C,CAAC,CAA/C,EAAkD;AACnD8C,iBAAS,GAAG,UAAZ;AACH,OAFI,MAGA,IAAI,KAAKK,QAAL,CAAcH,OAAd,CAAsB1B,IAAI,CAACtB,IAA3B,MAAqC,CAAC,CAA1C,EAA6C;AAC9C8C,iBAAS,GAAG,KAAZ;AACH,OAFI,MAGA,IAAI,KAAKM,QAAL,CAAcJ,OAAd,CAAsB1B,IAAI,CAACtB,IAA3B,MAAqC,CAAC,CAA1C,EAA6C;AAC9C8C,iBAAS,GAAG,KAAZ;AACH,OAFI,MAGA,IAAI,KAAKO,QAAL,CAAcL,OAAd,CAAsB1B,IAAI,CAACtB,IAA3B,MAAqC,CAAC,CAA1C,EAA6C;AAC9C8C,iBAAS,GAAG,KAAZ;AACH;;AACD,UAAIA,SAAS,KAAK,aAAlB,EAAiC;AAC7BA,iBAAS,GAAG,KAAKQ,iBAAL,CAAuBhC,IAAI,CAAClB,IAA5B,CAAZ;AACH;;AACD,aAAO0C,SAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,2BAAyBS,aAAzB,EAAwC;AACpC;AACA,UAAIC,KAAK,GAAG;AACR,eAAO,OADC;AAER,gBAAQ,OAFA;AAGR,eAAO,OAHC;AAIR,eAAO,OAJC;AAKR,eAAO,OALC;AAMR,eAAO,OANC;AAOR,eAAO,OAPC;AAQR,gBAAQ,OARA;AASR,eAAO,OATC;AAUR,eAAO,OAVC;AAWR,eAAO,OAXC;AAYR,cAAM,OAZE;AAaR,gBAAQ,OAbA;AAcR,eAAO,OAdC;AAeR,eAAO,OAfC;AAgBR,eAAO,OAhBC;AAiBR,eAAO,OAjBC;AAkBR,eAAO,OAlBC;AAmBR,eAAO,OAnBC;AAoBR,eAAO,OApBC;AAqBR,eAAO,OArBC;AAsBR,eAAO,OAtBC;AAuBR,eAAO,OAvBC;AAwBR,oBAAY,UAxBJ;AAyBR,eAAO,UAzBC;AA0BR,eAAO,UA1BC;AA2BR,cAAM,UA3BE;AA4BR,cAAM,UA5BE;AA6BR,eAAO,UA7BC;AA8BR,eAAO,UA9BC;AA+BR,cAAM,UA/BE;AAgCR,eAAO,KAhCC;AAiCR,eAAO,KAjCC;AAkCR,gBAAQ,KAlCA;AAmCR,eAAO,KAnCC;AAoCR,eAAO,OApCC;AAqCR,eAAO,OArCC;AAsCR,eAAO,OAtCC;AAuCR,eAAO,OAvCC;AAwCR,eAAO,OAxCC;AAyCR,eAAO,OAzCC;AA0CR,eAAO,OA1CC;AA2CR,eAAO,OA3CC;AA4CR,eAAO,OA5CC;AA6CR,gBAAQ,OA7CA;AA8CR,gBAAQ,OA9CA;AA+CR,eAAO,OA/CC;AAgDR,eAAO,KAhDC;AAiDR,gBAAQ,KAjDA;AAkDR,eAAO,KAlDC;AAmDR,eAAO,KAnDC;AAoDR,eAAO,KApDC;AAqDR,eAAO,KArDC;AAsDR,eAAO,KAtDC;AAuDR,gBAAQ,KAvDA;AAwDR,eAAO,KAxDC;AAyDR,gBAAQ,KAzDA;AA0DR,eAAO;AA1DC,OAAZ;AA4DA;;AACA,UAAIC,MAAM,GAAGF,aAAa,CAACG,KAAd,CAAoB,GAApB,CAAb;;AACA,UAAID,MAAM,CAACE,MAAP,GAAgB,CAApB,EAAuB;AACnB,eAAO,aAAP;AACH;AACD;;;AACA,UAAIC,SAAS,GAAGH,MAAM,CAACA,MAAM,CAACE,MAAP,GAAgB,CAAjB,CAAN,CAA0BxD,WAA1B,EAAhB;;AACA,UAAIqD,KAAK,CAACI,SAAD,CAAL,KAAqBC,SAAzB,EAAoC;AAChC,eAAO,aAAP;AACH,OAFD,MAGK;AACD,eAAOL,KAAK,CAACI,SAAD,CAAZ;AACH;AACJ;;;;;AAEL;;;AACAf,QAAQ,CAACM,QAAT,GAAoB,CAChB,oBADgB,EAEhB,oBAFgB,EAGhB,yEAHgB,EAIhB,yEAJgB,EAKhB,kDALgB,EAMhB,kDANgB,CAApB;AAQAN,QAAQ,CAACO,QAAT,GAAoB,CAChB,0BADgB,EAEhB,0BAFgB,EAGhB,0BAHgB,EAIhB,mEAJgB,EAKhB,sEALgB,EAMhB,gDANgB,EAOhB,mDAPgB,EAQhB,gDARgB,EAShB,uDATgB,CAApB;AAWAP,QAAQ,CAACQ,QAAT,GAAoB,CAChB,+BADgB,EAEhB,+BAFgB,EAGhB,+BAHgB,EAIhB,+BAJgB,EAKhB,2EALgB,EAMhB,uEANgB,EAOhB,wEAPgB,EAQhB,qDARgB,EAShB,4DATgB,EAUhB,4DAVgB,EAWhB,yDAXgB,CAApB;AAaA;;AACAR,QAAQ,CAACE,QAAT,GAAoB,CAChB,iBADgB,EAEhB,mBAFgB,EAGhB,WAHgB,EAIhB,uBAJgB,EAKhB,iBALgB,EAMhB,gCANgB,CAApB;AAQA;;AACAF,QAAQ,CAACK,aAAT,GAAyB,CACrB,oBADqB,EAErB,yBAFqB,EAGrB,sBAHqB,EAIrB,mBAJqB,EAKrB,8BALqB,EAMrB,0BANqB,EAOrB,8BAPqB,EAQrB,4BARqB,EASrB,6BATqB,EAUrB,kBAVqB,EAWrB,qBAXqB,CAAzB;;AAaA,IAAI,KAAJ,EAAW,EAWV;AAED;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA,SAASY,OAAT,CAAgBpE,KAAhB,EAAuB;AACnB,SAAQqE,IAAI,IAAIrE,KAAK,YAAYqE,IAAjC;AACH;AACD;AACA;AACA;;;AACA,SAASC,OAAT,GAAmB,CAAG;;AACtB,IAAI,KAAJ,EAAW,EAKV;AACD;AACA;AACA;;;AACA,SAASC,mBAAT,GAA+B,CAAG;;AAClC,IAAI,KAAJ,EAAW,EAuCV;;IACKC,Y;AACF;AACJ;AACA;AACI,wBAAYzD,OAAZ,EAAqB;AAAA;;AACjB,SAAKM,WAAL,GAAmB,KAAnB;AACA,SAAKoD,KAAL,GAAa,EAAb;AACA,SAAK/C,QAAL,GAAgB,CAAhB;AACA,SAAKwB,UAAL,GAAkB,CAAlB;AACA,SAAKnC,OAAL,GAAe;AACX2D,gBAAU,EAAE,KADD;AAEXC,aAAO,EAAE,IAFE;AAGXC,aAAO,EAAE,EAHE;AAIX5B,uBAAiB,EAAE,KAJR;AAKX6B,sBAAgB,EAAE,KALP;AAMXC,wBAAkB;AAAG;AACjC;AACA;AACA;AACY,kCAACC,IAAD;AAAA,eAAUA,IAAI,CAAClD,KAAf;AAAA,OAVW;AAWXmD,+BAAyB,EAAE;AAXhB,KAAf;AAaA,SAAKC,UAAL,CAAgBlE,OAAhB;AACA,SAAKwB,QAAL,GAAgB,IAAI2C,uDAAJ,EAAhB;AACH;AACD;AACJ;AACA;AACA;;;;;WACI,oBAAWnE,OAAX,EAAoB;AAChB,WAAKA,OAAL,GAAeoE,MAAM,CAACC,MAAP,CAAc,KAAKrE,OAAnB,EAA4BA,OAA5B,CAAf;AACA,WAAKsE,SAAL,GAAiB,KAAKtE,OAAL,CAAasE,SAA9B;AACA,WAAKC,eAAL,GAAuB,KAAKvE,OAAL,CAAauE,eAAb,IAAgC,eAAvD;AACA,WAAKZ,UAAL,GAAkB,KAAK3D,OAAL,CAAa2D,UAA/B;AACA,WAAK3D,OAAL,CAAa6D,OAAb,CAAqBW,OAArB,CAA6B;AAAE7E,YAAI,EAAE,YAAR;AAAsB8E,UAAE,EAAE,KAAKC;AAA/B,OAA7B;;AACA,UAAI,KAAK1E,OAAL,CAAa2E,WAAjB,EAA8B;AAC1B,aAAK3E,OAAL,CAAa6D,OAAb,CAAqBW,OAArB,CAA6B;AAAE7E,cAAI,EAAE,UAAR;AAAoB8E,YAAE,EAAE,KAAKG;AAA7B,SAA7B;AACH;;AACD,UAAI,KAAK5E,OAAL,CAAa6E,eAAjB,EAAkC;AAC9B,aAAK7E,OAAL,CAAa6D,OAAb,CAAqBW,OAArB,CAA6B;AAAE7E,cAAI,EAAE,UAAR;AAAoB8E,YAAE,EAAE,KAAKK;AAA7B,SAA7B;AACH;;AACD,UAAI,KAAK9E,OAAL,CAAa+E,eAAjB,EAAkC;AAC9B,aAAK/E,OAAL,CAAa6D,OAAb,CAAqBW,OAArB,CAA6B;AAAE7E,cAAI,EAAE,UAAR;AAAoB8E,YAAE,EAAE,KAAKO;AAA7B,SAA7B;AACH;;AACD,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKvB,KAAL,CAAWR,MAA/B,EAAuC+B,CAAC,EAAxC,EAA4C;AACxC,aAAKvB,KAAL,CAAWuB,CAAX,EAAchF,GAAd,GAAoB,KAAKD,OAAL,CAAaC,GAAjC;AACH;AACJ;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,oBAAWiF,KAAX,EAAkBlF,OAAlB,EAA2B6D,OAA3B,EAAoC;AAAA;;AAChC;AACA,UAAIsB,IAAI,GAAG,EAAX;;AAFgC,8JAGfD,KAHe;AAAA;;AAAA;AAGhC,4DAAwB;AAAA,cAAfrE,IAAe;AACpBsE,cAAI,CAACC,IAAL,CAAUvE,IAAV;AACH;AACD;;AANgC;AAAA;AAAA;AAAA;AAAA;;AAOhC,UAAIwE,cAAc,GAAG,KAAKC,WAAL,CAAiBzB,OAAjB,CAArB;AACA;;;AACA,UAAI0B,KAAK,GAAG,KAAK7B,KAAL,CAAWR,MAAvB;AACA;;AACA,UAAIsC,cAAc,GAAG,EAArB;AACAL,UAAI,CAACM,GAAL;AAAU;AAClB;AACA;AACA;AACQ,gBAAC1F,IAAD,EAAU;AACN,YAAI,CAACC,OAAL,EAAc;AACVA,iBAAO,GAAG,KAAI,CAACA,OAAf;AACH;AACD;;;AACA,YAAI0F,IAAI,GAAG,IAAI9G,cAAJ,CAAmBmB,IAAnB,CAAX;;AACA,YAAI,KAAI,CAAC4F,YAAL,CAAkBD,IAAlB,EAAwBL,cAAxB,EAAwCrF,OAAxC,CAAJ,EAAsD;AAClD;AACA,cAAI4F,QAAQ,GAAG,IAAI/F,QAAJ,CAAa,KAAb,EAAmBE,IAAnB,EAAyBC,OAAzB,CAAf;AACAwF,wBAAc,CAACJ,IAAf,CAAoBQ,QAApB;;AACA,eAAI,CAAClC,KAAL,CAAW0B,IAAX,CAAgBQ,QAAhB;;AACA,eAAI,CAACC,kBAAL,CAAwBD,QAAxB;AACH,SAND,MAOK;AACD;AACA,cAAIE,MAAM,GAAGT,cAAc,CAAC,KAAI,CAACU,gBAAN,CAA3B;;AACA,eAAI,CAACC,uBAAL,CAA6BN,IAA7B,EAAmCI,MAAnC,EAA2C9F,OAA3C;AACH;AACJ,OAtBD;;AAuBA,UAAI,KAAK0D,KAAL,CAAWR,MAAX,KAAsBqC,KAA1B,EAAiC;AAC7B,aAAKU,iBAAL,CAAuBT,cAAvB;;AACA,aAAK7E,QAAL,GAAgB,KAAKuF,iBAAL,EAAhB;AACH;;AACD,WAAKC,OAAL;;AACA,UAAI,KAAKnG,OAAL,CAAa2D,UAAjB,EAA6B;AACzB,aAAKyC,SAAL;AACH;AACJ;AACD;AACJ;AACA;AACA;;;;WACI,yBAAgBnH,KAAhB,EAAuB;AACnB;AACA,UAAI2B,KAAK,GAAG,KAAKyF,cAAL,CAAoBpH,KAApB,CAAZ;AACA;;AACA,UAAI+E,IAAI,GAAG,KAAKN,KAAL,CAAW9C,KAAX,CAAX;;AACA,UAAIoD,IAAI,CAAC1D,WAAT,EAAsB;AAClB0D,YAAI,CAACsC,MAAL;AACH;;AACD,WAAK5C,KAAL,CAAW6C,MAAX,CAAkB3F,KAAlB,EAAyB,CAAzB;AACA,WAAKD,QAAL,GAAgB,KAAKuF,iBAAL,EAAhB;AACH;AACD;AACJ;AACA;;;;WACI,sBAAa;AACT,aAAO,KAAKxC,KAAL,CAAWR,MAAlB,EAA0B;AACtB,aAAKQ,KAAL,CAAW,CAAX,EAAcxB,MAAd;AACH;;AACD,WAAKvB,QAAL,GAAgB,CAAhB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,oBAAW1B,KAAX,EAAkB;AACd;AACA,UAAI2B,KAAK,GAAG,KAAKyF,cAAL,CAAoBpH,KAApB,CAAZ;AACA;;AACA,UAAI+E,IAAI,GAAG,KAAKN,KAAL,CAAW9C,KAAX,CAAX;AACA;;AACA,UAAI4F,SAAS,GAAG,KAAKxG,OAAL,CAAa4D,OAAb,GAAuB,eAAvB,GAAyC,kBAAzD;;AACAI,UAAI,CAACyC,mBAAL;;AACA,UAAI,KAAKnG,WAAT,EAAsB;AAClB;AACH;;AACD,WAAKA,WAAL,GAAmB,IAAnB;AACoB,UAApB,CAA4BkG,SAA5B,EAAuCxC,IAAvC;AACH;AACD;AACJ;AACA;AACA;;;;WACI,oBAAW/E,KAAX,EAAkB;AACd;AACA,UAAI2B,KAAK,GAAG,KAAKyF,cAAL,CAAoBpH,KAApB,CAAZ;AACA;;AACA,UAAI+E,IAAI,GAAG,KAAKN,KAAL,CAAW9C,KAAX,CAAX;AACA;;AACA,UAAInC,IAAI,GAAG,KAAKuB,OAAL,CAAa4D,OAAb,GAAuBI,IAAI,CAAC0C,IAA5B,GAAmC1C,IAAI,CAAC2C,KAAnD;;AACA,UAAI3C,IAAI,IAAIA,IAAI,CAAC1D,WAAjB,EAA8B;AAC1B7B,YAAI,CAACmI,KAAL;AACH;AACJ;AACD;AACJ;AACA;;;;WACI,qBAAY;AACR;AACA,UAAIC,KAAK,GAAG,KAAKC,mBAAL,GAA2BhB,MAA3B;AAAmC;AACvD;AACA;AACA;AACQ,gBAAC9B,IAAD;AAAA,eAAU,CAACA,IAAI,CAAC1D,WAAhB;AAAA,OAJY,CAAZ;;AAKA,UAAI,CAACuG,KAAK,CAAC3D,MAAX,EAAmB;AACf;AACH;;AACD2D,WAAK,CAACpB,GAAN;AAAW;AACnB;AACA;AACA;AACQ,gBAACzB,IAAD;AAAA,eAAUA,IAAI,CAACyC,mBAAL,EAAV;AAAA,OAJA;AAKAI,WAAK,CAAC,CAAD,CAAL,CAASE,MAAT;AACH;AACD;AACJ;AACA;;;;WACI,qBAAY;AACR;AACA,UAAIF,KAAK,GAAG,KAAKC,mBAAL,EAAZ;AACAD,WAAK,CAACpB,GAAN;AAAW;AACnB;AACA;AACA;AACQ,gBAACzB,IAAD;AAAA,eAAUA,IAAI,CAACsC,MAAL,EAAV;AAAA,OAJA;AAKH;AACD;AACJ;AACA;AACA;;;;WACI,gBAAOrH,KAAP,EAAc;AACV,aAAOoE,OAAM,CAACpE,KAAD,CAAb;AACH;AACD;AACJ;AACA;AACA;;;;WACI,0BAAiBA,KAAjB,EAAwB;AACpB,aAAOA,KAAK,YAAYL,cAAxB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,wBAAeK,KAAf,EAAsB;AAClB,aAAO,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,KAAKyE,KAAL,CAAWnB,OAAX,CAAmBtD,KAAnB,CAA3C;AACH;AACD;AACJ;AACA;;;;WACI,+BAAsB;AAClB,aAAO,KAAKyE,KAAL,CAAWoC,MAAX;AAAmB;AAClC;AACA;AACA;AACQ,gBAAC9B,IAAD;AAAA,eAAU,CAACA,IAAI,CAACzD,UAAhB;AAAA,OAJO,CAAP;AAKH;AACD;AACJ;AACA;;;;WACI,yBAAgB;AACZ,aAAO,KAAKmD,KAAL,CACFoC,MADE;AACM;AACrB;AACA;AACA;AACQ,gBAAC9B,IAAD;AAAA,eAAWA,IAAI,CAAC3D,OAAL,IAAgB,CAAC2D,IAAI,CAAC1D,WAAjC;AAAA,OALO,EAMF0G,IANE;AAMI;AACnB;AACA;AACA;AACA;AACQ,gBAACC,KAAD,EAAQC,KAAR;AAAA,eAAkBD,KAAK,CAACrG,KAAN,GAAcsG,KAAK,CAACtG,KAAtC;AAAA,OAXO,CAAP;AAYH;AACD;AACJ;AACA;;;;WACI,mBAAU;AACN,aAAO,KAAK,CAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,0BAAiBuG,SAAjB,EAA4B;AACxB,aAAO;AAAEA,iBAAS,EAATA;AAAF,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,yBAAgBvB,QAAhB,EAA0BrE,IAA1B,EAAgC;AAC5B,aAAO;AAAEqE,gBAAQ,EAARA,QAAF;AAAYrE,YAAI,EAAJA;AAAZ,OAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,2BAAkBqE,QAAlB,EAA4B;AACxB,aAAO;AAAEA,gBAAQ,EAARA;AAAF,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,gCAAuB5B,IAAvB,EAA6B8B,MAA7B,EAAqC9F,OAArC,EAA8C;AAC1C,aAAO;AAAEgE,YAAI,EAAJA,IAAF;AAAQ8B,cAAM,EAANA,MAAR;AAAgB9F,eAAO,EAAPA;AAAhB,OAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,4BAAmB4F,QAAnB,EAA6B;AACzB,aAAO;AAAEA,gBAAQ,EAARA;AAAF,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeA,QAAf,EAAyBjF,QAAzB,EAAmC;AAC/B,aAAO;AAAEiF,gBAAQ,EAARA,QAAF;AAAYjF,gBAAQ,EAARA;AAAZ,OAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,uBAAcA,QAAd,EAAwB;AACpB,aAAO;AAAEA,gBAAQ,EAARA;AAAF,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,uBAAcqD,IAAd,EAAoBxC,QAApB,EAA8BC,MAA9B,EAAsCvB,OAAtC,EAA+C;AAC3C,aAAO;AAAE8D,YAAI,EAAJA,IAAF;AAAQxC,gBAAQ,EAARA,QAAR;AAAkBC,cAAM,EAANA,MAAlB;AAA0BvB,eAAO,EAAPA;AAA1B,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,qBAAY8D,IAAZ,EAAkBxC,QAAlB,EAA4BC,MAA5B,EAAoCvB,OAApC,EAA6C;AACzC,aAAO;AAAE8D,YAAI,EAAJA,IAAF;AAAQxC,gBAAQ,EAARA,QAAR;AAAkBC,cAAM,EAANA,MAAlB;AAA0BvB,eAAO,EAAPA;AAA1B,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,sBAAa8D,IAAb,EAAmBxC,QAAnB,EAA6BC,MAA7B,EAAqCvB,OAArC,EAA8C;AAC1C,aAAO;AAAE8D,YAAI,EAAJA,IAAF;AAAQxC,gBAAQ,EAARA,QAAR;AAAkBC,cAAM,EAANA,MAAlB;AAA0BvB,eAAO,EAAPA;AAA1B,OAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAe8D,IAAf,EAAqBxC,QAArB,EAA+BC,MAA/B,EAAuCvB,OAAvC,EAAgD;AAC5C,aAAO;AAAE8D,YAAI,EAAJA,IAAF;AAAQxC,gBAAQ,EAARA,QAAR;AAAkBC,cAAM,EAANA,MAAlB;AAA0BvB,eAAO,EAAPA;AAA1B,OAAP;AACH;AACD;AACJ;AACA;;;;WACI,yBAAgB;AACZ,aAAO,KAAK,CAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,yBAAgB8D,IAAhB,EAAsB;AAClB,aAAO,EAAE,KAAKhE,OAAL,CAAa+E,eAAb,IAAgC,KAAK/E,OAAL,CAAa+E,eAAb,CAA6BxC,OAA7B,CAAqCyB,IAAI,CAACzE,IAA1C,MAAoD,CAAC,CAAvF,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,yBAAgByE,IAAhB,EAAsB;AAClB,aAAO,EAAE,KAAKhE,OAAL,CAAa2E,WAAb,IAA4BX,IAAI,CAAC1E,IAAL,GAAY,KAAKU,OAAL,CAAa2E,WAAvD,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,yBAAgBX,IAAhB,EAAsB;AAClB,aAAO,EAAE,KAAKhE,OAAL,CAAa6E,eAAb,IACL,KAAK7E,OAAL,CAAa6E,eAAb,CAA6BtC,OAA7B,CAAqCH,QAAQ,CAACgF,YAAT,CAAsBpD,IAAtB,CAArC,MAAsE,CAAC,CADpE,CAAP;AAEH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,sBAAaA,IAAb,EAAmBxC,QAAnB,EAA6BC,MAA7B,EAAqCvB,OAArC,EAA8C;AAC1C8D,UAAI,CAACqD,QAAL,CAAc7F,QAAd,EAAwBC,MAAxB,EAAgCvB,OAAhC;;AACA,WAAKoH,WAAL,CAAiBtD,IAAjB,EAAuBxC,QAAvB,EAAiCC,MAAjC,EAAyCvB,OAAzC;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,yBAAgB8D,IAAhB,EAAsBxC,QAAtB,EAAgCC,MAAhC,EAAwCvB,OAAxC,EAAiD;AAC7C8D,UAAI,CAACuD,WAAL,CAAiB/F,QAAjB,EAA2BC,MAA3B,EAAmCvB,OAAnC;;AACA,WAAKsH,cAAL,CAAoBxD,IAApB,EAA0BxC,QAA1B,EAAoCC,MAApC,EAA4CvB,OAA5C;AACA;;AACA,UAAIuH,QAAQ,GAAG,KAAKC,aAAL,GAAqB,CAArB,CAAf;AACA,WAAKpH,WAAL,GAAmB,KAAnB;;AACA,UAAImH,QAAJ,EAAc;AACVA,gBAAQ,CAACV,MAAT;AACA;AACH;;AACD,WAAKY,aAAL;AACA,WAAKhH,QAAL,GAAgB,KAAKuF,iBAAL,EAAhB;;AACA,WAAKC,OAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeyB,aAAf,EAA8B;AAC1B;AAAQ;AAChB;AACA;AACA;AACQ,kBAACjI,IAAD,EAAU;AACN,cAAIA,IAAJ,EAAU;AACN,mBAAOiI,aAAa,CAACjI,IAAI,CAACD,WAAL,EAAD,CAAb,IAAqC,KAAK,CAAjD;AACH;;AACD,iBAAOkI,aAAP;AACH;AATD;AAUH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,uBAAc5D,IAAd,EAAoB;AAAA;;AAChB;AACA,UAAI6D,IAAI,GAAG,IAAX;AACA;;AACA,UAAIC,GAAG,GAAG9D,IAAI,CAAC0C,IAAL,GAAY,IAAIqB,cAAJ,EAAtB;AACA;;AACA,UAAIC,QAAJ;;AACA,WAAKC,mBAAL,CAAyBjE,IAAzB;;AACA,UAAI,OAAOA,IAAI,CAAClD,KAAL,CAAWxB,IAAlB,KAA2B,QAA/B,EAAyC;AACrC,cAAM,IAAI4I,SAAJ,CAAc,uCAAd,CAAN;AACH;;AACD,UAAI,CAAC,KAAKlI,OAAL,CAAa8D,gBAAlB,EAAoC;AAChCkE,gBAAQ,GAAG,IAAIG,QAAJ,EAAX;;AACA,aAAKC,gBAAL,CAAsBpE,IAAtB,EAA4BgE,QAA5B;AACA;;;AACA,YAAMK,UAAU;AAAI;AAChC;AACA;AACY,iBAHMA,UAGN;AAAA,iBAAML,QAAQ,CAACM,MAAT,CAAgBtE,IAAI,CAACjD,KAArB,EAA4BiD,IAAI,CAAClD,KAAjC,EAAwCkD,IAAI,CAACnD,IAAL,CAAUlB,IAAlD,CAAN;AAAA,SAHA;;AAIA,YAAI,CAAC,KAAKK,OAAL,CAAauI,qBAAlB,EAAyC;AACrCF,oBAAU;AACb,SAV+B,CAWhC;;;AACA,YAAI,KAAKrI,OAAL,CAAawI,mBAAb,KAAqCpF,SAAzC,EAAoD;AAChDgB,gBAAM,CAACqE,IAAP,CAAY,KAAKzI,OAAL,CAAawI,mBAAzB,EAA8CE,OAA9C;AAAuD;AACvE;AACA;AACA;AACgB,oBAACC,GAAD,EAAS;AACL;AACA,gBAAIC,QAAQ,GAAG,MAAI,CAAC5I,OAAL,CAAawI,mBAAb,CAAiCG,GAAjC,CAAf,CAFK,CAGL;;AACA,gBAAI,OAAOC,QAAP,KAAoB,QAApB,IAAgCA,QAAQ,CAACrG,OAAT,CAAiB,eAAjB,KAAqC,CAAzE,EAA4E;AACxEqG,sBAAQ,GAAGA,QAAQ,CAACC,OAAT,CAAiB,eAAjB,EAAkC7E,IAAI,CAACnD,IAAL,CAAUlB,IAA5C,CAAX;AACH;;AACDqI,oBAAQ,CAACM,MAAT,CAAgBK,GAAhB,EAAqBC,QAArB;AACH,WAZD;AAaH;;AACD,YAAI,KAAK5I,OAAL,CAAauI,qBAAjB,EAAwC;AACpCF,oBAAU;AACb;AACJ,OA9BD,MA+BK;AACDL,gBAAQ,GAAG,KAAKhI,OAAL,CAAa+D,kBAAb,CAAgCC,IAAhC,CAAX;AACH;;AACD8D,SAAG,CAACf,MAAJ,CAAW+B,UAAX;AAAyB;AACjC;AACA;AACA;AACQ,gBAACC,KAAD,EAAW;AACP;AACA,YAAIpI,QAAQ,GAAGqI,IAAI,CAACC,KAAL,CAAWF,KAAK,CAACG,gBAAN,GAAyBH,KAAK,CAACI,MAAN,GAAe,GAAf,GAAqBJ,KAAK,CAACK,KAApD,GAA4D,CAAvE,CAAf;;AACA,cAAI,CAACC,eAAL,CAAqBrF,IAArB,EAA2BrD,QAA3B;AACH,OARD;;AASAmH,SAAG,CAACwB,MAAJ;AAAc;AACtB;AACA;AACQ,kBAAM;AACF;AACA,YAAIpJ,OAAO,GAAG,MAAI,CAACqJ,aAAL,CAAmBzB,GAAG,CAAC0B,qBAAJ,EAAnB,CAAd;AACA;;;AACA,YAAIhI,QAAQ,GAAG,MAAI,CAACiI,kBAAL,CAAwB3B,GAAG,CAACtG,QAA5B,EAAsCtB,OAAtC,CAAf;AACA;;;AACA,YAAIwJ,IAAI,GAAG,MAAI,CAACC,cAAL,CAAoB7B,GAAG,CAACrG,MAAxB,IAAkC,SAAlC,GAA8C,OAAzD;AACA;;AACA,YAAItC,MAAM,GAAG,QAAQuK,IAAR,GAAe,MAA5B;;AACoB,cAApB,CAA4BvK,MAA5B,EAAoC6E,IAApC,EAA0CxC,QAA1C,EAAoDsG,GAAG,CAACrG,MAAxD,EAAgEvB,OAAhE;;AACA,cAAI,CAACiB,eAAL,CAAqB6C,IAArB,EAA2BxC,QAA3B,EAAqCsG,GAAG,CAACrG,MAAzC,EAAiDvB,OAAjD;AACH,OAdD;;AAeA4H,SAAG,CAAC8B,OAAJ;AAAe;AACvB;AACA;AACQ,kBAAM;AACF;AACA,YAAI1J,OAAO,GAAG,MAAI,CAACqJ,aAAL,CAAmBzB,GAAG,CAAC0B,qBAAJ,EAAnB,CAAd;AACA;;;AACA,YAAIhI,QAAQ,GAAG,MAAI,CAACiI,kBAAL,CAAwB3B,GAAG,CAACtG,QAA5B,EAAsCtB,OAAtC,CAAf;;AACA,cAAI,CAACkB,YAAL,CAAkB4C,IAAlB,EAAwBxC,QAAxB,EAAkCsG,GAAG,CAACrG,MAAtC,EAA8CvB,OAA9C;;AACA,cAAI,CAACiB,eAAL,CAAqB6C,IAArB,EAA2BxC,QAA3B,EAAqCsG,GAAG,CAACrG,MAAzC,EAAiDvB,OAAjD;AACH,OAVD;;AAWA4H,SAAG,CAAC+B,OAAJ;AAAe;AACvB;AACA;AACQ,kBAAM;AACF;AACA,YAAI3J,OAAO,GAAG,MAAI,CAACqJ,aAAL,CAAmBzB,GAAG,CAAC0B,qBAAJ,EAAnB,CAAd;AACA;;;AACA,YAAIhI,QAAQ,GAAG,MAAI,CAACiI,kBAAL,CAAwB3B,GAAG,CAACtG,QAA5B,EAAsCtB,OAAtC,CAAf;;AACA,cAAI,CAAC4J,aAAL,CAAmB9F,IAAnB,EAAyBxC,QAAzB,EAAmCsG,GAAG,CAACrG,MAAvC,EAA+CvB,OAA/C;;AACA,cAAI,CAACiB,eAAL,CAAqB6C,IAArB,EAA2BxC,QAA3B,EAAqCsG,GAAG,CAACrG,MAAzC,EAAiDvB,OAAjD;AACH,OAVD;;AAWA4H,SAAG,CAACiC,IAAJ,CAAS/F,IAAI,CAAC7E,MAAd,EAAsB6E,IAAI,CAAC/D,GAA3B,EAAgC,IAAhC;AACA6H,SAAG,CAAC3H,eAAJ,GAAsB6D,IAAI,CAAC7D,eAA3B;;AACA,UAAI,KAAKH,OAAL,CAAaE,OAAjB,EAA0B;AAAA,iKACH,KAAKF,OAAL,CAAaE,OADV;AAAA;;AAAA;AACtB,iEAAyC;AAAA,gBAAhC8J,MAAgC;AACrClC,eAAG,CAACmC,gBAAJ,CAAqBD,MAAM,CAACrK,IAA5B,EAAkCqK,MAAM,CAAC/K,KAAzC;AACH;AAHqB;AAAA;AAAA;AAAA;AAAA;AAIzB;;AACD,UAAI+E,IAAI,CAAC9D,OAAL,CAAagD,MAAjB,EAAyB;AAAA,iKACFc,IAAI,CAAC9D,OADH;AAAA;;AAAA;AACrB,iEAAiC;AAAA,gBAAxB8J,OAAwB;AAC7BlC,eAAG,CAACmC,gBAAJ,CAAqBD,OAAM,CAACrK,IAA5B,EAAkCqK,OAAM,CAAC/K,KAAzC;AACH;AAHoB;AAAA;AAAA;AAAA;AAAA;AAIxB;;AACD,UAAI,KAAKqF,SAAT,EAAoB;AAChBwD,WAAG,CAACmC,gBAAJ,CAAqB,KAAK1F,eAA1B,EAA2C,KAAKD,SAAhD;AACH;;AACDwD,SAAG,CAACoC,kBAAJ;AAA0B;AAClC;AACA;AACQ,kBAAY;AACR,YAAIpC,GAAG,CAACqC,UAAJ,IAAkBpC,cAAc,CAACqC,IAArC,EAA2C;AACvCvC,cAAI,CAACrG,QAAL,CAAc6I,IAAd,CAAmBvC,GAAG,CAACwC,YAAvB;AACH;AACJ,OAPD;;AAQA,UAAI,KAAKtK,OAAL,CAAaiE,yBAAjB,EAA4C;AACxC+D,gBAAQ,CAACuC,IAAT;AAAe;AAC3B;AACA;AACA;AACY,kBAACC,MAAD;AAAA,iBAAY1C,GAAG,CAAC2C,IAAJ,CAASC,IAAI,CAACC,SAAL,CAAeH,MAAf,CAAT,CAAZ;AAAA,SAJA;AAKH,OAND,MAOK;AACD1C,WAAG,CAAC2C,IAAJ,CAASzC,QAAT;AACH;;AACD,WAAK7B,OAAL;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,6BAA6B;AAAA,UAAXlH,KAAW,uEAAH,CAAG;;AACzB,UAAI,KAAKe,OAAL,CAAaiC,iBAAjB,EAAoC;AAChC,eAAOhD,KAAP;AACH;AACD;;;AACA,UAAI2L,WAAW,GAAG,KAAK9D,mBAAL,GAA2B5D,MAA7C;AACA;;AACA,UAAI2H,QAAQ,GAAGD,WAAW,GAAG,KAAKlH,KAAL,CAAWR,MAAX,GAAoB0H,WAAvB,GAAqC,KAAKlH,KAAL,CAAWR,MAA1E;AACA;;AACA,UAAI4H,KAAK,GAAG,MAAM,KAAKpH,KAAL,CAAWR,MAA7B;AACA;;AACA,UAAI6H,OAAO,GAAG9L,KAAK,GAAG6L,KAAR,GAAgB,GAA9B;AACA,aAAO9B,IAAI,CAACC,KAAL,CAAW4B,QAAQ,GAAGC,KAAX,GAAmBC,OAA9B,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,qBAAYlH,OAAZ,EAAqB;AACjB,UAAI,CAACA,OAAL,EAAc;AACV,eAAO,KAAK7D,OAAL,CAAa6D,OAApB;AACH;;AACD,UAAImH,KAAK,CAACC,OAAN,CAAcpH,OAAd,CAAJ,EAA4B;AACxB,eAAOA,OAAP;AACH;;AACD,UAAI,OAAOA,OAAP,KAAmB,QAAvB,EAAiC;AAC7B;AACA,YAAIqH,KAAK,GAAGrH,OAAO,CAACrB,KAAR,CAAc,UAAd,CAAZ;AACA,eAAO,KAAKxC,OAAL,CAAa6D,OAAb,CACFiC,MADE;AACM;AACzB;AACA;AACA;AACY,kBAACA,MAAD;AAAA,iBAAYoF,KAAK,CAAC3I,OAAN,CAAcuD,MAAM,CAACnG,IAArB,MAA+B,CAAC,CAA5C;AAAA,SALO,CAAP;AAMH;;AACD,aAAO,KAAKK,OAAL,CAAa6D,OAApB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,mBAAU;AACN,aAAO,KAAK,CAAZ;AACH;AACD;AACJ;AACA;AACA;;;;WACI,6BAAoB;AAChB,aAAO,KAAK7D,OAAL,CAAamL,UAAb,KAA4B/H,SAA5B,IAAyC,KAAKM,KAAL,CAAWR,MAAX,GAAoB,KAAKlD,OAAL,CAAamL,UAAjF;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,sBAAatK,IAAb,EAAmBgD,OAAnB,EAA4B7D,OAA5B,EAAqC;AAAA;;AACjC,WAAK+F,gBAAL,GAAwB,CAAC,CAAzB;AACA,aAAO,CAAClC,OAAO,CAACX,MAAT,GAAkB,IAAlB,GAAyBW,OAAO,CAACuH,KAAR;AAAe;AACvD;AACA;AACA;AACQ,gBAACtF,MAAD,EAAY;AACR,cAAI,CAACC,gBAAL;AACA,eAAOD,MAAM,CAACrB,EAAP,CAAU4G,IAAV,CAAe,MAAf,EAAqBxK,IAArB,EAA2Bb,OAA3B,CAAP;AACH,OAP+B,CAAhC;AAQH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeyB,MAAf,EAAuB;AACnB,aAAQA,MAAM,IAAI,GAAV,IAAiBA,MAAM,GAAG,GAA3B,IAAmCA,MAAM,KAAK,GAArD;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,4BAAmBD,QAAnB,EAA6BtB,OAA7B,EAAsC;AAClC,aAAOsB,QAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,uBAActB,OAAd,EAAuB;AACnB;AACA,UAAIoL,MAAM,GAAG,EAAb;AACA;;AACA,UAAI3C,GAAJ;AACA;;AACA,UAAI4C,GAAJ;AACA;;AACA,UAAItG,CAAJ;;AACA,UAAI,CAAC/E,OAAL,EAAc;AACV,eAAOoL,MAAP;AACH;;AACDpL,aAAO,CAAC+C,KAAR,CAAc,IAAd,EAAoBwC,GAApB;AAAyB;AACjC;AACA;AACA;AACQ,gBAAC+F,IAAD,EAAU;AACNvG,SAAC,GAAGuG,IAAI,CAACjJ,OAAL,CAAa,GAAb,CAAJ;AACAoG,WAAG,GAAG6C,IAAI,CAAChM,KAAL,CAAW,CAAX,EAAcyF,CAAd,EAAiBwG,IAAjB,GAAwB/L,WAAxB,EAAN;AACA6L,WAAG,GAAGC,IAAI,CAAChM,KAAL,CAAWyF,CAAC,GAAG,CAAf,EAAkBwG,IAAlB,EAAN;;AACA,YAAI9C,GAAJ,EAAS;AACL2C,gBAAM,CAAC3C,GAAD,CAAN,GAAc2C,MAAM,CAAC3C,GAAD,CAAN,GAAc2C,MAAM,CAAC3C,GAAD,CAAN,GAAc,IAAd,GAAqB4C,GAAnC,GAAyCA,GAAvD;AACH;AACJ,OAXD;AAYA,aAAOD,MAAP;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,iCAAwBtH,IAAxB,EAA8B8B,MAA9B,EAAsC9F,OAAtC,EAA+C;AAC3C,WAAK0L,sBAAL,CAA4B1H,IAA5B,EAAkC8B,MAAlC,EAA0C9F,OAA1C;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,4BAAmBgE,IAAnB,EAAyB;AACrB,WAAK2H,iBAAL,CAAuB3H,IAAvB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,2BAAkB6C,KAAlB,EAAyB;AACrB,WAAK+E,gBAAL,CAAsB/E,KAAtB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,6BAAoB7C,IAApB,EAA0B;AACtBA,UAAI,CAAC6H,eAAL;;AACA,WAAKC,kBAAL,CAAwB9H,IAAxB;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,0BAAiBA,IAAjB,EAAuBzC,IAAvB,EAA6B;AACzByC,UAAI,CAAC+H,YAAL,CAAkBxK,IAAlB;;AACA,WAAKyK,eAAL,CAAqBhI,IAArB,EAA2BzC,IAA3B;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;;;;WACI,yBAAgByC,IAAhB,EAAsBrD,QAAtB,EAAgC;AAC5B;AACA,UAAIyI,KAAK,GAAG,KAAKlD,iBAAL,CAAuBvF,QAAvB,CAAZ;;AACA,WAAKA,QAAL,GAAgByI,KAAhB;;AACApF,UAAI,CAACiI,WAAL,CAAiBtL,QAAjB;;AACA,WAAKuL,cAAL,CAAoBlI,IAApB,EAA0BrD,QAA1B;AACA,WAAKwL,aAAL,CAAmB/C,KAAnB;;AACA,WAAKjD,OAAL;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,wBAAenC,IAAf,EAAqBxC,QAArB,EAA+BC,MAA/B,EAAuCvB,OAAvC,EAAgD;AAC5C8D,UAAI,CAACoI,UAAL,CAAgB5K,QAAhB,EAA0BC,MAA1B,EAAkCvB,OAAlC;;AACA,WAAKmM,aAAL,CAAmBrI,IAAnB,EAAyBxC,QAAzB,EAAmCC,MAAnC,EAA2CvB,OAA3C;AACH;AACD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,uBAAc8D,IAAd,EAAoBxC,QAApB,EAA8BC,MAA9B,EAAsCvB,OAAtC,EAA+C;AAC3C8D,UAAI,CAACsI,SAAL,CAAe9K,QAAf,EAAyBC,MAAzB,EAAiCvB,OAAjC;;AACA,WAAKqM,YAAL,CAAkBvI,IAAlB,EAAwBxC,QAAxB,EAAkCC,MAAlC,EAA0CvB,OAA1C;AACH;;;;;;AAEL,IAAI,KAAJ,EAAW,EAwBV;AAED;AACA;AACA;AACA;;;IACMsM,mB;AACF;AACJ;AACA;AACI,+BAAYC,OAAZ,EAAqB;AAAA;;AACjB,SAAKC,cAAL,GAAsB,IAAIvI,uDAAJ,EAAtB;AACA,SAAKsI,OAAL,GAAeA,OAAf;AACH;AACD;AACJ;AACA;;;;;WACI,sBAAa;AACT,aAAO,KAAK3M,QAAL,CAAcE,OAArB;AACH;AACD;AACJ;AACA;;;;WACI,sBAAa;AACT,aAAO,EAAP;AACH;AACD;AACJ;AACA;;;;WACI,iCAAwB;AACpB,aAAO,CAAC,CAAC,KAAKyM,OAAL,CAAaE,aAAb,CAA2BC,UAA3B,CAAsCC,QAA/C;AACH;AACD;AACJ;AACA;;;;WACI,oBAAW;AACP;AACA,UAAI3H,KAAK,GAAG,KAAKuH,OAAL,CAAaE,aAAb,CAA2BzH,KAAvC;AACA;;AACA,UAAIlF,OAAO,GAAG,KAAK8M,UAAL,EAAd;AACA;;AACA,UAAIjJ,OAAO,GAAG,KAAKkJ,UAAL,EAAd;AACA,WAAKjN,QAAL,CAAckN,UAAd,CAAyB9H,KAAzB,EAAgClF,OAAhC,EAAyC6D,OAAzC;AACA,WAAK6I,cAAL,CAAoBrC,IAApB,CAAyBnF,KAAzB;;AACA,UAAI,KAAK+H,qBAAL,EAAJ,EAAkC;AAC9B,aAAKR,OAAL,CAAaE,aAAb,CAA2B1N,KAA3B,GAAmC,EAAnC;AACH;AACJ;;;;;;AAELuN,mBAAmB,CAACU,IAApB,GAA2B,SAASC,2BAAT,CAAqCC,CAArC,EAAwC;AAAE,SAAO,KAAKA,CAAC,IAAIZ,mBAAV,EAA+Ba,+DAAA,CAAyBA,qDAAzB,CAA/B,CAAP;AAAqF,CAA1J;;AACAb,mBAAmB,CAACc,IAApB,GAA2B,aAAcD,+DAAA,CAAyB;AAAE9N,MAAI,EAAEiN,mBAAR;AAA6Be,WAAS,EAAE,CAAC,CAAC,EAAD,EAAK,eAAL,EAAsB,EAAtB,CAAD,CAAxC;AAAqEC,cAAY,EAAE,SAASC,gCAAT,CAA0CC,EAA1C,EAA8CC,GAA9C,EAAmD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AAC9ML,8DAAA,CAAkB,QAAlB,EAA4B,SAASO,6CAAT,GAAyD;AAAE,eAAOD,GAAG,CAACE,QAAJ,EAAP;AAAwB,OAA/G;AACH;AAAE,GAF2D;AAEzDC,QAAM,EAAE;AAAEhO,YAAQ,EAAE;AAAZ,GAFiD;AAEvBiO,SAAO,EAAE;AAAErB,kBAAc,EAAE;AAAlB;AAFc,CAAzB,CAAzC;AAGA;;AACAF,mBAAmB,CAACwB,cAApB,GAAqC;AAAA,SAAM,CACvC;AAAEzO,QAAI,EAAE0O,qDAAUA;AAAlB,GADuC,CAAN;AAAA,CAArC;;AAGAzB,mBAAmB,CAAC0B,cAApB,GAAqC;AACjCpO,UAAQ,EAAE,CAAC;AAAEP,QAAI,EAAE4O,gDAAKA;AAAb,GAAD,CADuB;AAEjCzB,gBAAc,EAAE,CAAC;AAAEnN,QAAI,EAAE6O,iDAAMA;AAAd,GAAD,CAFiB;AAGjCP,UAAQ,EAAE,CAAC;AAAEtO,QAAI,EAAE8O,uDAAR;AAAsBC,QAAI,EAAE,CAAC,QAAD;AAA5B,GAAD;AAHuB,CAArC;;AAKA,CAAC,YAAY;AAAE,GAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlB,+DAAA,CAAyBb,mBAAzB,EAA8C,CAAC;AACzGjN,QAAI,EAAEiP,oDADmG;AAEzGF,QAAI,EAAE,CAAC;AAAEG,cAAQ,EAAE;AAAZ,KAAD;AAFmG,GAAD,CAA9C,EAG1D,YAAY;AAAE,WAAO,CAAC;AAAElP,UAAI,EAAE8N,qDAAiBY;AAAzB,KAAD,CAAP;AAAuC,GAHK,EAGH;AAAEvB,kBAAc,EAAE,CAAC;AACtEnN,UAAI,EAAE6O,iDAAMA;AAD0D,KAAD,CAAlB;;AAG3D;AACJ;AACA;AACIP,YAAQ,EAAE,CAAC;AACHtO,UAAI,EAAE8O,uDADH;AAEHC,UAAI,EAAE,CAAC,QAAD;AAFH,KAAD,CANiD;AASnDxO,YAAQ,EAAE,CAAC;AACXP,UAAI,EAAE4O,gDAAKA;AADA,KAAD;AATyC,GAHG,CAAnD;AAcC,CAdhB;;AAeA,IAAI,KAAJ,EAAW,EAUV;AAED;AACA;AACA;AACA;;;IACMO,iB;AACF;AACJ;AACA;AACI,6BAAYjC,OAAZ,EAAqB;AAAA;;AACjB,SAAKkC,QAAL,GAAgB,IAAIxK,uDAAJ,EAAhB;AACA,SAAKyK,UAAL,GAAkB,IAAIzK,uDAAJ,EAAlB;AACA,SAAKsI,OAAL,GAAeA,OAAf;AACH;AACD;AACJ;AACA;;;;;WACI,sBAAa;AACT,aAAO,KAAK3M,QAAL,CAAcE,OAArB;AACH;AACD;AACJ;AACA;;;;WACI,sBAAa;AACT,aAAO,EAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,gBAAO+I,KAAP,EAAc;AACV;AACA,UAAI8F,QAAQ,GAAG,KAAKC,YAAL,CAAkB/F,KAAlB,CAAf;;AACA,UAAI,CAAC8F,QAAL,EAAe;AACX;AACH;AACD;;;AACA,UAAI7O,OAAO,GAAG,KAAK8M,UAAL,EAAd;AACA;;AACA,UAAIjJ,OAAO,GAAG,KAAKkJ,UAAL,EAAd;;AACA,WAAKgC,eAAL,CAAqBhG,KAArB;;AACA,WAAKjJ,QAAL,CAAckN,UAAd,CAAyB6B,QAAQ,CAAC3J,KAAlC,EAAyClF,OAAzC,EAAkD6D,OAAlD;AACA,WAAK8K,QAAL,CAActE,IAAd,CAAmB,KAAnB;AACA,WAAKuE,UAAL,CAAgBvE,IAAhB,CAAqBwE,QAAQ,CAAC3J,KAA9B;AACH;AACD;AACJ;AACA;AACA;;;;WACI,oBAAW6D,KAAX,EAAkB;AACd;AACA,UAAI8F,QAAQ,GAAG,KAAKC,YAAL,CAAkB/F,KAAlB,CAAf;;AACA,UAAI,CAAC,KAAKiG,UAAL,CAAgBH,QAAQ,CAAC9L,KAAzB,CAAL,EAAsC;AAClC;AACH;;AACD8L,cAAQ,CAACI,UAAT,GAAsB,MAAtB;;AACA,WAAKF,eAAL,CAAqBhG,KAArB;;AACA,WAAK4F,QAAL,CAActE,IAAd,CAAmB,IAAnB;AACH;AACD;AACJ;AACA;AACA;;;;WACI,qBAAYtB,KAAZ,EAAmB;AACf,UAAwB,IAApB,CAA4B0D,OAAhC,EAAyC;AACrC,YAAI1D,KAAK,CAACmG,aAAN,KAA4C,IAApB,CAA4BzC,OAA5B,CAAoC,CAApC,CAA5B,EAAoE;AAChE;AACH;AACJ;;AACD,WAAKsC,eAAL,CAAqBhG,KAArB;;AACA,WAAK4F,QAAL,CAActE,IAAd,CAAmB,KAAnB;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,sBAAatB,KAAb,EAAoB;AAChB,aAAOA,KAAK,CAACoG,YAAN,GAAqBpG,KAAK,CAACoG,YAA3B,GAA0CpG,KAAK,CAACqG,aAAN,CAAoBD,YAArE,CADgB,CACmE;AACtF;AACD;AACJ;AACA;AACA;AACA;;;;WACI,yBAAgBpG,KAAhB,EAAuB;AACnBA,WAAK,CAACsG,cAAN;AACAtG,WAAK,CAACuG,eAAN;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,oBAAWvM,KAAX,EAAkB;AACd,UAAI,CAACA,KAAL,EAAY;AACR,eAAO,KAAP;AACH;;AACD,UAAIA,KAAK,CAACR,OAAV,EAAmB;AACf,eAAOQ,KAAK,CAACR,OAAN,CAAc,OAAd,MAA2B,CAAC,CAAnC;AACH,OAFD,MAGK,IAAIQ,KAAK,CAACwM,QAAV,EAAoB;AACrB,eAAOxM,KAAK,CAACwM,QAAN,CAAe,OAAf,CAAP;AACH,OAFI,MAGA;AACD,eAAO,KAAP;AACH;AACJ;;;;;;AAELb,iBAAiB,CAACxB,IAAlB,GAAyB,SAASsC,yBAAT,CAAmCpC,CAAnC,EAAsC;AAAE,SAAO,KAAKA,CAAC,IAAIsB,iBAAV,EAA6BrB,+DAAA,CAAyBA,qDAAzB,CAA7B,CAAP;AAAmF,CAApJ;;AACAqB,iBAAiB,CAACpB,IAAlB,GAAyB,aAAcD,+DAAA,CAAyB;AAAE9N,MAAI,EAAEmP,iBAAR;AAA2BnB,WAAS,EAAE,CAAC,CAAC,EAAD,EAAK,aAAL,EAAoB,EAApB,CAAD,CAAtC;AAAiEC,cAAY,EAAE,SAASiC,8BAAT,CAAwC/B,EAAxC,EAA4CC,GAA5C,EAAiD;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACtML,8DAAA,CAAkB,MAAlB,EAA0B,SAASqC,yCAAT,CAAmDC,MAAnD,EAA2D;AAAE,eAAOhC,GAAG,CAACiC,MAAJ,CAAWD,MAAX,CAAP;AAA4B,OAAnH,EAAqH,UAArH,EAAiI,SAASE,6CAAT,CAAuDF,MAAvD,EAA+D;AAAE,eAAOhC,GAAG,CAACmC,UAAJ,CAAeH,MAAf,CAAP;AAAgC,OAAlO,EAAoO,WAApO,EAAiP,SAASI,8CAAT,CAAwDJ,MAAxD,EAAgE;AAAE,eAAOhC,GAAG,CAACqC,WAAJ,CAAgBL,MAAhB,CAAP;AAAiC,OAApV;AACH;AAAE,GAFyD;AAEvD7B,QAAM,EAAE;AAAEhO,YAAQ,EAAE;AAAZ,GAF+C;AAErBiO,SAAO,EAAE;AAAEY,YAAQ,EAAE,UAAZ;AAAwBC,cAAU,EAAE;AAApC;AAFY,CAAzB,CAAvC;AAGA;;AACAF,iBAAiB,CAACV,cAAlB,GAAmC;AAAA,SAAM,CACrC;AAAEzO,QAAI,EAAE0O,qDAAUA;AAAlB,GADqC,CAAN;AAAA,CAAnC;;AAGAS,iBAAiB,CAACR,cAAlB,GAAmC;AAC/BpO,UAAQ,EAAE,CAAC;AAAEP,QAAI,EAAE4O,gDAAKA;AAAb,GAAD,CADqB;AAE/BQ,UAAQ,EAAE,CAAC;AAAEpP,QAAI,EAAE6O,iDAAMA;AAAd,GAAD,CAFqB;AAG/BQ,YAAU,EAAE,CAAC;AAAErP,QAAI,EAAE6O,iDAAMA;AAAd,GAAD,CAHmB;AAI/BwB,QAAM,EAAE,CAAC;AAAErQ,QAAI,EAAE8O,uDAAR;AAAsBC,QAAI,EAAE,CAAC,MAAD,EAAS,CAAC,QAAD,CAAT;AAA5B,GAAD,CAJuB;AAK/BwB,YAAU,EAAE,CAAC;AAAEvQ,QAAI,EAAE8O,uDAAR;AAAsBC,QAAI,EAAE,CAAC,UAAD,EAAa,CAAC,QAAD,CAAb;AAA5B,GAAD,CALmB;AAM/B0B,aAAW,EAAE,CAAC;AAAEzQ,QAAI,EAAE8O,uDAAR;AAAsBC,QAAI,EAAE,CAAC,WAAD,EAAc,CAAC,QAAD,CAAd;AAA5B,GAAD;AANkB,CAAnC;;AAQA,CAAC,YAAY;AAAE,GAAC,OAAOC,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlB,+DAAA,CAAyBqB,iBAAzB,EAA4C,CAAC;AACvGnP,QAAI,EAAEiP,oDADiG;AAEvGF,QAAI,EAAE,CAAC;AAAEG,cAAQ,EAAE;AAAZ,KAAD;AAFiG,GAAD,CAA5C,EAG1D,YAAY;AAAE,WAAO,CAAC;AAAElP,UAAI,EAAE8N,qDAAiBY;AAAzB,KAAD,CAAP;AAAuC,GAHK,EAGH;AAAEU,YAAQ,EAAE,CAAC;AAChEpP,UAAI,EAAE6O,iDAAMA;AADoD,KAAD,CAAZ;AAEnDQ,cAAU,EAAE,CAAC;AACbrP,UAAI,EAAE6O,iDAAMA;AADC,KAAD,CAFuC;;AAK3D;AACJ;AACA;AACA;AACIwB,UAAM,EAAE,CAAC;AACDrQ,UAAI,EAAE8O,uDADL;AAEDC,UAAI,EAAE,CAAC,MAAD,EAAS,CAAC,QAAD,CAAT;AAFL,KAAD,CATmD;;AAa3D;AACJ;AACA;AACA;AACIwB,cAAU,EAAE,CAAC;AACLvQ,UAAI,EAAE8O,uDADD;AAELC,UAAI,EAAE,CAAC,UAAD,EAAa,CAAC,QAAD,CAAb;AAFD,KAAD,CAjB+C;;AAqB3D;AACJ;AACA;AACA;AACI0B,eAAW,EAAE,CAAC;AACNzQ,UAAI,EAAE8O,uDADA;AAENC,UAAI,EAAE,CAAC,WAAD,EAAc,CAAC,QAAD,CAAd;AAFA,KAAD,CAzB8C;AA4BnDxO,YAAQ,EAAE,CAAC;AACXP,UAAI,EAAE4O,gDAAKA;AADA,KAAD;AA5ByC,GAHG,CAAnD;AAiCC,CAjChB;;AAkCA,IAAI,KAAJ,EAAW,EAYV;AAED;AACA;AACA;AACA;;;IACM8B,gB;;;;AAENA,gBAAgB,CAAC/C,IAAjB,GAAwB,SAASgD,wBAAT,CAAkC9C,CAAlC,EAAqC;AAAE,SAAO,KAAKA,CAAC,IAAI6C,gBAAV,GAAP;AAAuC,CAAtG;;AACAA,gBAAgB,CAACE,IAAjB,GAAwB,aAAc9C,8DAAA,CAAwB;AAAE9N,MAAI,EAAE0Q;AAAR,CAAxB,CAAtC;AACAA,gBAAgB,CAACG,IAAjB,GAAwB,aAAc/C,8DAAA,CAAwB;AAAEgD,SAAO,EAAE,CAAC,CAACC,yDAAD,CAAD;AAAX,CAAxB,CAAtC;;AACA,CAAC,YAAY;AAAE,GAAC,OAAO/B,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDlB,+DAAA,CAAyB4C,gBAAzB,EAA2C,CAAC;AACtG1Q,QAAI,EAAEgR,mDADgG;AAEtGjC,QAAI,EAAE,CAAC;AACC+B,aAAO,EAAE,CAACC,yDAAD,CADV;AAECE,kBAAY,EAAE,CAAC9B,iBAAD,EAAoBlC,mBAApB,CAFf;AAGCiE,aAAO,EAAE,CAAC/B,iBAAD,EAAoBlC,mBAApB;AAHV,KAAD;AAFgG,GAAD,CAA3C,EAO1D,IAP0D,EAOpD,IAPoD,CAAnD;AAOO,CAPtB;;AAQA,CAAC,YAAY;AAAE,GAAC,OAAOkE,SAAP,KAAqB,WAArB,IAAoCA,SAArC,KAAmDrD,gEAAA,CAA0B4C,gBAA1B,EAA4C;AAAEO,gBAAY,EAAE,wBAAY;AAAE,aAAO,CAAC9B,iBAAD,EAAoBlC,mBAApB,CAAP;AAAkD,KAAhF;AAAkF6D,WAAO,EAAE,mBAAY;AAAE,aAAO,CAACC,yDAAD,CAAP;AAAwB,KAAjI;AAAmIG,WAAO,EAAE,mBAAY;AAAE,aAAO,CAAC/B,iBAAD,EAAoBlC,mBAApB,CAAP;AAAkD;AAA5M,GAA5C,CAAnD;AAAiT,CAAhU;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;;CAIA,2C;;;;;;;;;;;;;;;ACxnDA;IASI,uBAAY,QAAgB,EAChB,QAAgB,EAChB,SAAiB,EACjB,QAAgB,EAChB,KAAa,EACb,MAAc,EACd,KAAe;QARpB,UAAK,GAAc,EAAE;QASxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACvB,CAAC;IACL,oBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;ACxBD,IAAY,QAGX;AAHD,WAAY,QAAQ;IAChB,6CAA+B;IAC/B,iCAAmB;AACvB,CAAC,EAHW,QAAQ,KAAR,QAAQ,QAGnB;;;;;;;;;;;;;;;;ACFD;IAYI,4BAAY,QAAgB,EAChB,MAAc,EACd,SAAiB,EACjB,QAAgB,EAChB,KAAa,EACb,KAAe,EAAE,gBAAyB,EAC1C,iBAA0B,EAAE,qBAA8B;QAZ/D,UAAK,GAAc,EAAE;QAaxB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,SAAS,GAAG,SAAS,CAAC;QAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,gBAAgB,GAAG,gBAAgB,CAAC;QACzC,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;QAC3C,IAAI,CAAC,qBAAqB,GAAG,qBAAqB,CAAC;IACvD,CAAC;IACL,yBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;AC9BD;IAMI,iCAAY,QAAgB,EAAE,WAAmB,EAAE,WAAmB;QAClE,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IACL,8BAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV4C;AAEF;AAEqB;AAKvB;AACyB;AAEqB;AAEW;AACnE;;;;;;;;;;;;;;;ICkE8B,6EAC8C;IAC1C,6FACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,iJAGQ;IACb,6DAAO;;;;IAHM,2DAAoC;IAApC,sFAAoC;;;IAuB5C,6EAC6C;IACzC,qFACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,iJAGQ;IACb,6DAAO;;;;IAHM,2DAAmC;IAAnC,sFAAmC;;;IAuB3C,6EAC6C;IACzC,mGACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,iJAGQ;IACb,6DAAO;;;;IAHM,2DAAmC;IAAnC,uFAAmC;;;IAsBhD,4EAA6F;IACzF,6EAAqC;IAClC,uFACH;IAAA,6DAAQ;IACZ,6DAAO;;;;IAwBC,8EACyE;IAAjE,6iBAAkC,WAAa,SAAE,YAAc,IAAC;IACpE,oEAA2B;IAC3B,4EAAiC;IAAA,2EAAe;IAAA,6DAAO;IAC3D,6DAAS;;;IAOb,6EACsE;IAClE,kGACJ;IAAA,6DAAQ;;;IALZ,4EAC2B;IACvB,uJAGQ;IACZ,6DAAO;;;IAHK,2DAA4D;IAA5D,2IAA4D;;;;;IA9BpF,2EAAgC;IAC5B,2EAA4B;IAExB,gFAA6B;IACzB,yEAAO;IAAA,qEAAS;IAAA,6DAAQ;IACxB,qFAU2G;IAFvG,4XAAkC;IAIlC,4JAMc;IAElB,6DAAY;IAEZ,8IAMO;IAEX,6DAAW;IAEf,6DAAM;IAEV,6DAAM;;;;;IAxBU,2DAAsG;IAAtG,8JAAsG;IARtG,iFAAe;IAoBZ,2DAA4F;IAA5F,4JAA4F;;;;;;;IAxK3H,2EAAkB;IACd,2EAAuB;IAEnB,2EAAmB;IACf,yEAA4C;IACxC,sEAC6B;IACjC,6DAAI;IAGJ,2EAAmC;IAC/B,8EAQqB;IAPb,6SAAS,WAAY,IAAC;IAQ1B,oEACJ;IAAA,6DAAS;IACT,iFAKuC;IAAhC,wVAA8B;IALrC,6DAKuC;IACvC,+EACoE;IAChE,oEACJ;IAAA,6DAAS;IACT,sEAAG;IAAA,sGAAyC;IAAA,6DAAI;IACpD,6DAAM;IAGV,6DAAM;IAKN,iFAAwG;IAA1E,qUAA4C;IAEtE,4EAAiB;IAEb,4EAAsB;IAClB,4EAAwB;IACpB,8EAAoD;IAAA,wEAAM;IAAA,6DAAQ;IAClE,kFAQ6B;IANtB,kXAAmC;IAF1C,6DAQ6B;IAE7B,yIAMO;IAEX,6DAAM;IACV,6DAAM;IAEN,4EAAsB;IAClB,4EAAwB;IACpB,8EAAmD;IAAA,gEAAG;IAAA,6DAAQ;IAC9D,kFAQ6B;IANtB,iXAAkC;IAFzC,6DAQ6B;IAE7B,yIAMO;IAEX,6DAAM;IACV,6DAAM;IAEN,4EAAsB;IAClB,4EAAwB;IACpB,8EAAmD;IAAA,8EAAiB;IAAA,6DAAQ;IAC5E,kFAQwC;IANjC,iXAAkC;IAFzC,6DAQwC;IAExC,yIAMO;IAEX,6DAAM;IACV,6DAAM;IAEN,4EAAsB;IAClB,4EAAwB;IACpB,8EAAyD;IAAA,kEAAK;IAAA,6DAAQ;IACtE,kFAUmC;IAP3B,8WAA+B;IAHvC,6DAUmC;IACnC,yIAIO;IACX,6DAAM;IACV,6DAAM;IAEV,6DAAM;IAEN,yIAuCM;IAGN,+EAIqB;IADb,qVAAgC;IAEpC,0EACJ;IAAA,6DAAS;IAET,+EACyC;IACrC,qEACJ;IAAA,6DAAS;IAEb,6DAAO;IAGX,6DAAM;IACV,6DAAM;;;;;;;;IAnMe,2DAAmB;IAAnB,kJAAmB;IAMhB,2DAA+B;IAA/B,gGAA+B;IAsCxB,4DAA+D;IAA/D,8FAA+D;IAC/D,kGAAmC;IAQnC,2DAAqD;IAArD,4FAAqD;IAerD,2DAA6D;IAA7D,8FAA6D;IAC7D,iGAAkC;IAQlC,2DAAmD;IAAnD,4FAAmD;IAenD,2DAA6D;IAA7D,gGAA6D;IAC7D,iGAAkC;IAQlC,2DAAmD;IAAnD,8FAAmD;IAgBlD,2DAAyE;IAAzE,gGAAyE;IACzE,8FAA+B;IAQhC,2DAA+D;IAA/D,8FAA+D;IAUhE,2DAAW;IAAX,wEAAW;IA2CrB,2DAA2C;IAA3C,sFAA2C;IAQ3C,2DAAmB;IAAnB,gJAAmB;;;IA6DV,6EAC4C;IACxC,oGACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,iJAGQ;IACb,6DAAO;;;;IAHM,2DAAkC;IAAlC,uFAAkC;;;IA2C3C,yEAA4C;IACxC,uFAA0B;IAAA,6DAAQ;;;IACtC,yEAA2C;IACvC,4KAEJ;IAAA,6DAAQ;;;IAPZ,2EACmC;IAC/B,gJACsC;IACtC,gJAGQ;IACZ,6DAAM;;;;IANM,2DAAkC;IAAlC,uFAAkC;IAElC,2DAAiC;IAAjC,sFAAiC;;;IAyCzC,yEAA6C;IACzC,mGACJ;IAAA,6DAAQ;;;IACR,yEAA4C;IACxC,sIAEJ;IAAA,6DAAQ;;;IATZ,2EAEsC;IAClC,gJAEQ;IACR,gJAGQ;IACZ,6DAAM;;;;IAPM,2DAAmC;IAAnC,uFAAmC;IAGnC,2DAAkC;IAAlC,sFAAkC;;;;;IAhItE,2EAAkB;IACd,2EAAuB;IAGnB,gFAAgG;IAAlE,qUAAwC;IAElE,2EAAiB;IACb,2EAA6B;IACzB,2EAAwB;IACpB,6EAAuB;IAAA,+EAAmB;IAAA,6DAAQ;IAClD,2EAAgE;IAE5D,6EAQ0C;IAG1C,4EAAgC;IAC5B,6EAA8C;IAC1C,0EAGyC;IAAtC,qVAAqC;IAExC,6DAAI;IACR,6DAAO;IACX,6DAAM;IAEV,6DAAM;IAEN,yIAMO;IAEX,6DAAM;IACV,6DAAM;IACV,6DAAM;IAEN,4EAAiB;IAEb,4EAAsB;IAClB,4EAAwB;IACpB,8EAAkD;IAAA,iFAAoB;IAAA,6DAAQ;IAC9E,4EAAgE;IAE5D,6EAUuB;IAEvB,4EAAgC;IAC3B,6EAA8C;IAC1C,0EAGyC;IAAtC,qVAAqC;IAExC,6DAAI;IACR,6DAAO;IACZ,6DAAM;IAEV,6DAAM;IAEN,uIAQM;IAEV,6DAAM;IACV,6DAAM;IAEN,4EAAsB;IAClB,4EAAwB;IACpB,8EAAmD;IAAA,6FAAgC;IAAA,6DAAQ;IAC3F,4EAAgE;IAE5D,6EAUyB;IAEzB,4EAAgC;IAC3B,6EAA8C;IAC1C,0EAGyC;IAAtC,qVAAqC;IAExC,6DAAI;IACR,6DAAO;IACZ,6DAAM;IAEV,6DAAM;IACN,uIAUM;IACV,6DAAM;IACV,6DAAM;IACV,6DAAM;IAGN,+EAIqB;IADb,wZAAmC;IAEvC,0EACJ;IAAA,6DAAS;IAET,+EACyC;IACrC,qEACJ;IAAA,6DAAS;IAEb,6DAAO;IAIX,6DAAM;IACV,6DAAM;;;;;;;IA9I6B,4DAA2D;IAA3D,gGAA2D;IAF3D,mHAAkD;IAc9C,2DACyC;IADzC,sMACyC;IASjD,2DAAiD;IAAjD,8FAAiD;IAsB7C,2DAA4D;IAA5D,iGAA4D;IAH5D,mHAAkD;IAe7C,2DACmD;IADnD,sMACmD;IAS7D,2DAAkD;IAAlD,+FAAkD;IAoB5C,2DAA8D;IAA9D,iGAA8D;IAO9D,2FAAkC;IATlC,mHAAkD;IAe9C,2DACmD;IADnD,sMACmD;IAS1D,2DAAoD;IAApD,+FAAoD;IAgBjE,2DAAuC;IAAvC,uFAAuC;IAQvC,2DAAmB;IAAnB,gJAAmB;;;IAkD/C,6EACoE;IAC5D,6FACR;IAAA,6DAAQ;;;IALhB,4EAC2B;IACnB,iJAGQ;IAChB,6DAAO;;;;IAHS,2DAA0D;IAA1D,sGAA0D;;;;IAzBtF,2EAA0B;IACtB,0EACwB;IACpB,yFACJ;IAAA,6DAAK;IAET,6DAAM;IACN,2EAAkD;IAC9C,0EAAmC;IAC/B,gFACJ;IAAA,6DAAK;IACL,gFAAkE;IAAtC,qUAAqC;IAC7D,2EAAwB;IAEpB,iFAMmE;IAL5D,oWAAsB;IAD7B,6DAMmE;IAEnE,yIAMO;IACX,6DAAM;IACV,6DAAO;IACX,6DAAM;IACN,4EAA0B;IAEtB,+EAC4D;IAApD,gMAAS,kBAAc,aAAa,CAAC,IAAC;IAC1C,sEACJ;IAAA,6DAAS;IAET,+EAEoD;IAA5C,gZAA8B;IAClC,0EACJ;IAAA,6DAAS;IAEb,6DAAM;;;;;IAzBa,2DAA2D;IAA3D,kGAA2D;IAL3D,qFAAsB;IAOtB,2DAAiD;IAAjD,gGAAiD;IAkBxD,2DAA0D;IAA1D,oIAA0D;IAD5C,uFAAsB;;AD9apD,IAAM,GAAG,GAAG,sBAAsB,CAAC;AAEnC;IA4BI,uCAAuC;IAEvC;;;;;;;;OAQG;IACH,kCAAoB,eAAgC,EAChC,uBAA+C,EAC/C,OAAe,EACf,YAAsB,EACtB,WAAwB;QAJ5C,iBAgBC;QAhBmB,oBAAe,GAAf,eAAe,CAAiB;QAChC,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAU;QACtB,gBAAW,GAAX,WAAW,CAAa;QAjCrC,aAAQ,GAAiB,IAAI,0DAAY,CAAC;YAC7C,GAAG,EAAE,GAAG;YACR,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC;QAEI,qBAAgB,GAAqB;YACxC,QAAQ,EAAE,IAAI;SACjB,CAAC;QACK,wBAAmB,GAAG,KAAK,CAAC;QAC5B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,2BAAsB,GAAG,KAAK,CAAC;QAC/B,gBAAW,GAAW,sEAAsE,CAAC;QA8HpG,uBAAkB,GAAY,IAAI,CAAC;QAtG/B,IAAI,CAAC,eAAe,GAAG,IAAI,0CAAO,EAAE,CAAC;QACrC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CACxE,UAAC,IAAa;YACV,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACzB,6IAA6I;QAChJ,CAAC,CACJ,CAAC;QACF,WAAW,CAAC,eAAe,EAAE,CAAC;IAGlC,CAAC;IAED,iBAAiB;IACjB,wGAAwG;IAExG;;OAEG;IACH,4DAAyB,GAAzB;QACI,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACzD,CAAC;IAED;;OAEG;IACH,4DAAyB,GAAzB;QACI,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACzD,CAAC;IAED;;OAEG;IACH,+DAA4B,GAA5B;QACI,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;IAC/D,CAAC;IAED;;;;OAIG;IACH,8CAAW,GAAX,UAAY,KAAU;QAAtB,iBAcC;QAZG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAE7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAElC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAG9B,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;gBACvB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3C,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,kBAAkB;IAClB,wGAAwG;IAGxG;;OAEG;IACH,2CAAQ,GAAR;QAAA,iBA0BC;QAxBG,IAAI,CAAC,eAAe,CAAC,eAAe,CAAC,IAAI,CAAC,0DAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACzF,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,CAAC,CAAC,CAAC;QAEH,iBAAiB;QACjB,IAAI,CAAC,aAAa,GAAG;YACjB,WAAW,EAAE,kCAAkC;YAC/C,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE;gBACR,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACH;wBACI,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,IAAI;wBACZ,IAAI,EAAE,GAAG;qBACZ;oBAED;wBACI,IAAI,EAAE,sBAAsB;wBAC5B,MAAM,EAAE,KAAK;qBAChB;iBACJ;aACJ;SACJ,CAAC;IACN,CAAC;IAED;;OAEG;IACH,8CAAW,GAAX;QACI,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAKD,4CAAS,GAAT,UAAU,KAAU;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE;YAC1B,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,IAAI;SACb,CAAC,CAAC;IACP,CAAC;IAED,gDAAa,GAAb,UAAc,KAAU;QAAxB,iBAWC;QAVG,IAAI,OAAO,GAAY,IAAI,oEAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,qFAAuB,CAAC,CAAC;QAE3E,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAC9C,UAAC,IAAW;YACR,KAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC;YACnC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAEhC,CAAC,CACJ,CAAC;IAEN,CAAC;IAED,uDAAoB,GAApB;QAAA,iBAsBC;QArBG,IAAI,KAAK,GAAU,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACrC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAChC,CAAC,CAAC;QACF,IAAI,iBAAiB,GAAoB,IAAI,2FAAkB,CAC3D,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,MAAM,EACvB,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,KAAK,EACtB,KAAK,EACL,IAAI,CAAC,WAAW,CAAC,gBAAgB,EACjC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAClC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CACzC,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,SAAS,CACpE,UAAC,IAAW;YACR,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAC,SAAS,EAAC,WAAW,EAAC,yCAAyC,EAAC,iBAAiB,CAAC,CAAC;QAC7G,CAAC,CACJ,CAAC;IACN,CAAC;IAID,4CAAS,GAAT,UAAU,cAAsB;QAAhC,iBAmBC;QAlBG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC;QACjC,IAAI,uBAAuB,GAA4B,IAAI,sGAAuB,CAC9E,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,cAAc,CAAC,KAAK,CAAC,SAAS,EAC9B,cAAc,CAAC,KAAK,CAAC,SAAS,CACjC,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,SAAS,CACzE,cAAI;YACA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAChB,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBACnF,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aAC7B;iBAAM;gBACH,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,CAAC,CAAC;aACjF;YACD,4DAA4D;QAChE,CAAC,CACJ,CAAC;IACN,CAAC;IAED,2CAAQ,GAAR,UAAS,IAAI,EAAE,KAAK,EAAE,KAAa,EAAE,OAAe,EAAE,GAAG;QACrD,uDAAS,CAAC;YACN,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,OAAO;YAClB,WAAW,EAAE;gBACT,aAAa,EAAE,GAAG;aACrB;SACJ,CAAC,CAAC;IACP,CAAC;oGA7NQ,wBAAwB;2HAAxB,wBAAwB;YC3BrC,0EAAiC;YAC7B,0EAA0B;YAEtB,oFAAyE;YAGzE,8EAAoC;YAChC,0EAAuD;YACnD,0EAAmC;YAE/B,4EAA4E;YAExE,yEAAgC;YAC5B,wEAIwB;YACpB,qEAAsD;YACtD,6EAA+B;YAAA,8EAAO;YAAA,6DAAO;YACjD,6DAAI;YACJ,0IA0Mc;YAClB,6DAAK;YAEL,0EAAgC;YAC5B,0EAKyB;YACrB,qEAAsD;YACtD,6EAA+B;YAAA,oFAAuB;YAAA,6DAAO;YACjE,6DAAI;YACJ,0IA8Jc;YAClB,6DAAK;YAGT,6DAAK;YAET,6DAAM;YACN,uEAAgE;YACpE,6DAAM;YACV,6DAAU;YAEd,6DAAM;YACV,6DAAM;YAGN,sNA+Cc;;;YArcc,2DAA+B;YAA/B,6FAA+B;YA8YtC,4DAA4B;YAA5B,8EAA4B;;mCDjZjD;CA2PC;AAhOoC;;;;;;;;;;;;;;;;;;;AEzB+B;;;AAIpE;IAKE,gCAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;IAAI,CAAC;IAG3D,+CAAc,GAAd,UAAe,iBAAqC;QAClD,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,8EAAuB,GAAC,kBAAkB,EAAC,iBAAiB,CAAC,CAAC;IAC3G,CAAC;IAGD,8CAAa,GAAb,UAAc,uBAAgD;QAC5D,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,8EAAuB,GAAC,gBAAgB,EAAC,uBAAuB,CAAC,CAAC;IAC/G,CAAC;gGAZU,sBAAsB;2HAAtB,sBAAsB,WAAtB,sBAAsB,mBAFrB,MAAM;iCAPpB;CAsBC;AAbkC;;;;;;;;;;;;;;;;;;;;ACLc;AAEgB;;;AAGjE;IASI;;;;OAIG;IACH,yBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClD,mBAAmB;QACnB,IAAI,CAAC,iBAAiB,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;QACjD,IAAI,CAAC,eAAe,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;IACnD,CAAC;IAED;;;;;;OAMG;IACH,iCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAAjE,iBAMC;QALG,OAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;YACrC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBACnC,OAAO,EAAE,CAAC;YACd,CAAC,EAAE,MAAM,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH;;;;;;;;OAQG;IAEH,qCAAW,GAAX;QAAA,iBAQC;QAPG,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YAC/B,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,gFAAyB,GAAG,WAAW,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;gBAChG,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,KAAI,CAAC,eAAe,CAAC,IAAI,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;gBACzC,OAAO,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC;YAC3B,CAAC,EAAE,MAAM,CAAC,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAU,GAAV,UAAW,OAAgB;QACvB,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,8EAAuB,GAAC,aAAa,EAAC,OAAO,CAAC,CAAC;IAE9F,CAAC;kFA1DQ,eAAe;oHAAf,eAAe,WAAf,eAAe,mBAFZ,MAAM;0BAVtB;CAwEC;AA5D2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACqB;AACA;AAKvB;AACyB;AAEnC;AAC6C;;;;;;;;;;;;;;;ICqEf,6EAC8C;IAC1C,6FACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,yIAGQ;IACb,6DAAO;;;;IAHM,2DAAoC;IAApC,sFAAoC;;;IAsB5C,6EAC6C;IACzC,qFACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,yIAGQ;IACb,6DAAO;;;;IAHM,2DAAmC;IAAnC,sFAAmC;;;IAuB3C,6EAC6C;IACzC,mGACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,yIAGQ;IACb,6DAAO;;;;IAHM,2DAAmC;IAAnC,uFAAmC;;;IAqBhD,4EAA6F;IACzF,6EAAqC;IAClC,uFACH;IAAA,6DAAQ;IACZ,6DAAO;;;;IAoBC,8EACyE;IAAjE,qiBAAkC,WAAa,SAAE,YAAc,IAAC;IACpE,oEAA2B;IAC3B,4EAAiC;IAAA,2EAAe;IAAA,6DAAO;IAC3D,6DAAS;;;IAOb,6EACsE;IAClE,kGACJ;IAAA,6DAAQ;;;IALZ,4EAC2B;IACvB,+IAGQ;IACZ,6DAAO;;;IAHK,2DAA4D;IAA5D,2IAA4D;;;;;IA5BhF,2EAA0E;IACtE,gFAA6B;IACzB,yEAAO;IAAA,qEAAS;IAAA,6DAAQ;IACxB,qFAU2G;IAFvG,oXAAkC;IAIlC,oJAMc;IAElB,6DAAY;IAEZ,sIAMO;IAGX,6DAAW;IAEf,6DAAM;;;;;IAvBM,2DAAsG;IAAtG,8JAAsG;IARtG,iFAAe;IAoBZ,2DAA4F;IAA5F,4JAA4F;;;;;;;IAjK3H,2EAAkB;IACd,2EAAuB;IAEnB,2EAAmB;IACf,yEAA4C;IACxC,sEAC6B;IACjC,6DAAI;IAGJ,2EAAmC;IAC/B,8EAQqB;IAPb,qSAAS,WAAY,IAAC;IAQ1B,oEACJ;IAAA,6DAAS;IACT,iFAIuC;IAAhC,gVAA8B;IAJrC,6DAIuC;IACvC,+EACoE;IAChE,oEACJ;IAAA,6DAAS;IACT,sEAAG;IAAA,sGAAyC;IAAA,6DAAI;IACpD,6DAAM;IAGV,6DAAM;IAKN,iFAAwG;IAA1E,6TAA4C;IAEtE,4EAAiB;IAEb,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAoD;IAAA,wEAAM;IAAA,6DAAQ;IAClE,kFAQ6B;IANtB,0WAAmC;IAF1C,6DAQ6B;IAE7B,iIAMO;IAEX,6DAAM;IACV,6DAAM;IACN,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAmD;IAAA,gEAAG;IAAA,6DAAQ;IAC9D,kFAQ6B;IANtB,yWAAkC;IAFzC,6DAQ6B;IAE7B,iIAMO;IAEX,6DAAM;IACV,6DAAM;IAEN,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAmD;IAAA,8EAAiB;IAAA,6DAAQ;IAC5E,kFAQwC;IANjC,yWAAkC;IAFzC,6DAQwC;IAExC,iIAMO;IAEX,6DAAM;IACV,6DAAM;IACN,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAyD;IAAA,kEAAK;IAAA,6DAAQ;IACtE,kFAUmC;IAP3B,sWAA+B;IAHvC,6DAUmC;IACnC,iIAIO;IACX,6DAAM;IACV,6DAAM;IAEN,gIAoCM;IAEV,6DAAM;IAEN,+EAIqB;IADb,mUAAsB;IAE1B,0EACJ;IAAA,6DAAS;IAET,+EAC+C;IAC3C,qEACJ;IAAA,6DAAS;IAGb,6DAAO;IAGX,6DAAM;IACV,6DAAM;;;;;;;;IA7Le,2DAAmB;IAAnB,kJAAmB;IAMhB,2DAA+B;IAA/B,gGAA+B;IAqCxB,4DAA+D;IAA/D,8FAA+D;IAC/D,kGAAmC;IAQnC,2DAAqD;IAArD,4FAAqD;IAcrD,2DAA6D;IAA7D,8FAA6D;IAC7D,iGAAkC;IAQlC,2DAAmD;IAAnD,4FAAmD;IAenD,2DAA6D;IAA7D,gGAA6D;IAC7D,iGAAkC;IAQlC,2DAAmD;IAAnD,8FAAmD;IAelD,2DAAyE;IAAzE,gGAAyE;IACzE,8FAA+B;IAQhC,2DAA+D;IAA/D,8FAA+D;IAQxE,2DAAuC;IAAvC,kHAAuC;IAyCzC,2DAA2C;IAA3C,sFAA2C;IAQ3C,2DAAsC;IAAtC,gJAAsC;;;IAkDlE,6EACoE;IAC5D,6FACR;IAAA,6DAAQ;;;IALhB,4EAC2B;IACnB,yIAGQ;IAChB,6DAAO;;;;IAHS,2DAA0D;IAA1D,sGAA0D;;;;IAzBtF,2EAA0B;IACtB,0EACwB;IACpB,yFACJ;IAAA,6DAAK;IAET,6DAAM;IACN,2EAAkD;IAC9C,0EAAmC;IAC/B,gFACJ;IAAA,6DAAK;IACL,gFAAkE;IAAtC,6TAAqC;IAC7D,2EAAwB;IAEpB,iFAMmE;IAL5D,4VAAsB;IAD7B,6DAMmE;IAEnE,iIAMO;IACX,6DAAM;IACV,6DAAO;IACX,6DAAM;IACN,4EAA0B;IAEtB,+EAC4D;IAApD,wLAAS,kBAAc,aAAa,CAAC,IAAC;IAC1C,sEACJ;IAAA,6DAAS;IAET,+EAEoD;IAA5C,wYAA8B;IAClC,0EACJ;IAAA,6DAAS;IAEb,6DAAM;;;;;IAzBa,2DAA2D;IAA3D,kGAA2D;IAL3D,qFAAsB;IAOtB,2DAAiD;IAAjD,gGAAiD;IAkBxD,2DAA0D;IAA1D,oIAA0D;IAD5C,uFAAsB;;ADjQpD;IAyBE;;;;;;;;;OASG;IACH,0BAAoB,gBAAiC,EACjC,cAA8B,EAC9B,OAAe,EACf,YAAsB,EACtB,WAAwB;QAJ5C,iBAcC;QAdmB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,mBAAc,GAAd,cAAc,CAAgB;QAC9B,YAAO,GAAP,OAAO,CAAQ;QACf,iBAAY,GAAZ,YAAY,CAAU;QACtB,gBAAW,GAAX,WAAW,CAAa;QAtB5C,uCAAuC;QAEhC,gBAAW,GAAS,0CAA0C,CAAC;QAGtE,uBAAkB,GAAY,IAAI,CAAC;QAkBjC,IAAI,CAAC,eAAe,GAAG,IAAI,0CAAO,EAAE,CAAC;QACrC,IAAI,CAAC,WAAW,GAAC,IAAI,oEAAO,EAAE,CAAC;QAE/B,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CACxE,UAAC,IAAa;YACZ,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC1B,CAAC,CACJ,CAAC;QACF,WAAW,CAAC,eAAe,EAAE,CAAC;IAChC,CAAC;IAGD;;OAEG;IACH,mCAAQ,GAAR;QAAA,iBA4BC;QA1BC,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,0DAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC5F,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACxB,CAAC,CAAC,CAAC;QAIH,iBAAiB;QACjB,IAAI,CAAC,aAAa,GAAG;YACnB,WAAW,EAAE,kCAAkC;YAC/C,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE;gBACV,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACL;wBACE,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,IAAI;wBACZ,IAAI,EAAE,GAAG;qBACV;oBAED;wBACE,IAAI,EAAE,sBAAsB;wBAC5B,MAAM,EAAE,KAAK;qBACd;iBACF;aACF;SACF,CAAC;IACJ,CAAC;IAED;;OAEG;IACH,sCAAW,GAAX;QACE,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IAClC,CAAC;IAED;;;;OAIG;IACH,sCAAW,GAAX,UAAY,KAAU;QAAtB,iBAcC;QAZC,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAE/C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAElC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAG9B,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;gBACzB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YACzC,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC7C;IACH,CAAC;IAID,oCAAS,GAAT,UAAU,KAAU;QAClB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE;YAC5B,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,IAAI;SACX,CAAC,CAAC;IACL,CAAC;IAED,wCAAa,GAAb,UAAc,KAAU;QAAxB,iBAWC;QAVC,IAAI,OAAO,GAAY,IAAI,oEAAO,CAAC,IAAI,CAAC,QAAQ,EAAC,qFAAuB,CAAC,CAAC;QAE1E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAC/C,UAAC,IAAW;YACV,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YACpC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAE9B,CAAC,CACJ,CAAC;IAEJ,CAAC;IAED,qCAAU,GAAV;QAAA,iBA6BC;QA5BC,IAAI,KAAK,GAAU,EAAE,CAAC;QACtB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACvC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAC9B,CAAC,CAAC;QACF;;;;;;;;WAQG;QACH,IAAI,aAAa,GAAe,IAAI,gFAAa,CAC7C,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,QAAQ,GAAC,YAAY,EACtC,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,KAAK,EACtB,aAAa,EACb,KAAK,CACR,CAAC;QAEF,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,SAAS,CACnD,UAAC,IAAW;YACV,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAC,SAAS,EAAC,WAAW,EAAC,8BAA8B,EAAC,iBAAiB,CAAC,CAAC;QAChG,CAAC,CACJ,CAAC;IACJ,CAAC;IAGD,mCAAQ,GAAR,UAAS,IAAI,EAAE,KAAK,EAAC,KAAY,EAAC,OAAe,EAAC,GAAG;QACnD,uDAAS,CAAC;YACR,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,OAAO;YAClB,WAAW,EAAE;gBACX,aAAa,EAAE,GAAG;aACnB;SACF,CAAC,CAAC;IACL,CAAC;oFA9KU,gBAAgB;mHAAhB,gBAAgB;YCrB7B,0EAAiC;YAC7B,0EAA0B;YAEtB,oFAAyE;YAGzE,8EAAoC;YAChC,0EAAuD;YACnD,0EAAmC;YAE/B,4EAA4E;YAExE,yEAAgC;YAC5B,wEAIwB;YACpB,qEAAsD;YACtD,6EAA+B;YAAA,8EAAO;YAAA,6DAAO;YACjD,6DAAI;YACJ,kIAoMc;YAClB,6DAAK;YAGT,6DAAK;YAET,6DAAM;YACN,uEAAgE;YACpE,6DAAM;YACV,6DAAU;YAEd,6DAAM;YACV,6DAAM;YAGN,8MA+Cc;;;YApRc,2DAA+B;YAA/B,6FAA+B;YA6NtC,4DAA4B;YAA5B,8EAA4B;;2BDhOjD;CAqMC;AAhL4B;;;;;;;;;;;;;;;;;;;;AEpBQ;AAE+B;;;AAGpE;IAME,wBAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QACnD,IAAI,CAAC,aAAa,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;IAE/C,CAAC;IAED,mCAAU,GAAV,UAAW,aAA4B;QACrC,OAAO,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,8EAAuB,GAAC,aAAa,EAAC,aAAa,CAAC,CAAC;IAClG,CAAC;gFAVU,cAAc;mHAAd,cAAc,WAAd,cAAc,mBAFb,MAAM;yBAPpB;CAqBC;AAZ0B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPgB;AAKF;AACuB;AAInB;AAC0C;AACW;AACnE;AAEmC;AAIK;;;;;;;;;;;;;;;;;IC6DV,6EAC8C;IAC1C,6FACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,0IAGQ;IACb,6DAAO;;;;IAHM,2DAAoC;IAApC,sFAAoC;;;IAsB5C,6EAC6C;IACzC,qFACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,0IAGQ;IACb,6DAAO;;;;IAHM,2DAAmC;IAAnC,sFAAmC;;;IAuB3C,6EAC6C;IACzC,mGACJ;IAAA,6DAAQ;;;IALb,4EAC2B;IACtB,0IAGQ;IACb,6DAAO;;;;IAHM,2DAAmC;IAAnC,uFAAmC;;;IAqBhD,4EAA6F;IACzF,6EAAqC;IAClC,uFACH;IAAA,6DAAQ;IACZ,6DAAO;;;;IAoBC,8EACyE;IAAjE,siBAAkC,WAAa,SAAE,YAAc,IAAC;IACpE,oEAA2B;IAC3B,4EAAiC;IAAA,2EAAe;IAAA,6DAAO;IAC3D,6DAAS;;;IAOb,6EACsE;IAClE,kGACJ;IAAA,6DAAQ;;;IALZ,4EAC2B;IACvB,gJAGQ;IACZ,6DAAO;;;IAHK,2DAA4D;IAA5D,2IAA4D;;;;;IA5BhF,2EAA0E;IACtE,gFAA6B;IACzB,yEAAO;IAAA,qEAAS;IAAA,6DAAQ;IACxB,qFAU2G;IAFvG,qXAAkC;IAIlC,qJAMc;IAElB,6DAAY;IAEZ,uIAMO;IAGX,6DAAW;IAEf,6DAAM;;;;;IAvBM,2DAAsG;IAAtG,8JAAsG;IARtG,iFAAe;IAoBZ,2DAA4F;IAA5F,4JAA4F;;;;IAY3G,2EAA0E;IACtE,2EAAwB;IACpB,6EAA4B;IAAA,mEAAO;IAAA,6DAAQ;IAC3C,2EAAkE;IAC9D,6EAEmD;IAA5C,yXAA0C;IAFjD,6DAEmD;IACnD,6EAAmD;IAAA,8EAAa;IAAA,6DAAQ;IAC5E,6DAAM;IACN,2EAAkE;IAC9D,6EAEoD;IAA7C,0XAA2C;IAFlD,6DAEoD;IACpD,8EAAkD;IAAA,mFAAiB;IAAA,6DAAQ;IAC/E,6DAAM;IACN,4EAAkE;IAC9D,8EAEwD;IAAjD,+XAA+C;IAFtD,6DAEwD;IACxD,8EAAgD;IAAA,yFAAuB;IAAA,6DAAQ;IACnF,6DAAM;IACV,6DAAM;IACV,6DAAM;;;IAjBa,2DAAqC;IAArC,mJAAqC;IAMrC,2DAAqC;IAArC,mJAAqC;IAMrC,2DAAqC;IAArC,mJAAqC;;;;;;;IA/LxE,2EAAkB;IACd,2EAAuB;IAEnB,2EAAmB;IACf,yEAA4C;IACxC,sEAC6B;IACjC,6DAAI;IAGJ,2EAAmC;IAC/B,8EAQqB;IAPb,sSAAS,WAAY,IAAC;IAQ1B,oEACJ;IAAA,6DAAS;IACT,iFAKuC;IAAhC,iVAA8B;IALrC,6DAKuC;IACvC,+EACoE;IAChE,oEACJ;IAAA,6DAAS;IACT,sEAAG;IAAA,sGAAyC;IAAA,6DAAI;IACpD,6DAAM;IAGV,6DAAM;IAKN,iFAAwG;IAA1E,8TAA4C;IAEtE,4EAAiB;IAEb,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAoD;IAAA,wEAAM;IAAA,6DAAQ;IAClE,kFAQ6B;IANtB,2WAAmC;IAF1C,6DAQ6B;IAE7B,kIAMO;IAEX,6DAAM;IACV,6DAAM;IACN,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAmD;IAAA,gEAAG;IAAA,6DAAQ;IAC9D,kFAQ6B;IANtB,0WAAkC;IAFzC,6DAQ6B;IAE7B,kIAMO;IAEX,6DAAM;IACV,6DAAM;IAEN,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAmD;IAAA,8EAAiB;IAAA,6DAAQ;IAC5E,kFAQwC;IANjC,0WAAkC;IAFzC,6DAQwC;IAExC,kIAMO;IAEX,6DAAM;IACV,6DAAM;IACN,4EAA+B;IAC3B,4EAAwB;IACpB,8EAAyD;IAAA,kEAAK;IAAA,6DAAQ;IACtE,kFAUmC;IAP3B,uWAA+B;IAHvC,6DAUmC;IACnC,kIAIO;IACX,6DAAM;IACV,6DAAM;IAEN,iIAoCM;IACN,iIAsBM;IAEV,6DAAM;IAEN,+EAIqB;IADb,8UAAgC;IAEpC,0EACJ;IAAA,6DAAS;IAET,+EAC+C;IAC3C,qEACJ;IAAA,6DAAS;IACT,+EAC8B;IAAtB,mUAAqB;IACzB,0FACJ;IAAA,6DAAS;IAEb,6DAAO;IAGX,6DAAM;IACV,6DAAM;;;;;;;;IAxNe,2DAAmB;IAAnB,kJAAmB;IAMhB,2DAA+B;IAA/B,gGAA+B;IAsCxB,4DAA+D;IAA/D,8FAA+D;IAC/D,kGAAmC;IAQnC,2DAAqD;IAArD,4FAAqD;IAcrD,2DAA6D;IAA7D,8FAA6D;IAC7D,iGAAkC;IAQlC,2DAAmD;IAAnD,4FAAmD;IAenD,2DAA6D;IAA7D,gGAA6D;IAC7D,iGAAkC;IAQlC,2DAAmD;IAAnD,8FAAmD;IAelD,2DAAyE;IAAzE,gGAAyE;IACzE,8FAA+B;IAQhC,2DAA+D;IAA/D,8FAA+D;IAQxE,2DAAuC;IAAvC,kHAAuC;IAqCtC,2DAAuC;IAAvC,kHAAuC;IA2B1C,2DAA2C;IAA3C,sFAA2C;IAQ3C,2DAAsC;IAAtC,gJAAsC;;;;IA0B1D,2EAAkB;IACd,2EAAuB;IACnB,2EAAiB;IACb,2EAA6B;IACzB,2EAAmE;IAC/D,6EAAyC;IAAA,qEACrC;IAAA,8EACqC;IAA7B,0WAA4B;IAChC,8EAAmB;IAAA,8DAAE;IAAA,6DAAS;IAC9B,+EAAmB;IAAA,+DAAE;IAAA,6DAAS;IAC9B,+EAAmB;IAAA,+DAAE;IAAA,6DAAS;IAC9B,+EAAoB;IAAA,gEAAG;IAAA,6DAAS;IACpC,6DAAS;IACT,oEAAM;IAAA,6DAAQ;IACtB,6DAAM;IACV,6DAAM;IAEN,4EAAiF;IAC7E,4EAA6E;IACzE,8EAAsD;IAClD,yEACA;IAAA,8EAGuC;IAHhC,uWAAyB;IAAhC,6DAGuC;IAC3C,6DAAQ;IAEZ,6DAAM;IACV,6DAAM;IACV,6DAAM;IAGN,sFAG2E;IAGvE,wFAA6E;IAC7E,wFAA8E;IAC9E,wFAA6E;IAC7E,wFAA2E;IAC3E,wFAA6E;IAC7E,wFAA8E;IAElF,6DAAgB;IACpB,6DAAM;IACV,6DAAM;;;IAxC0B,2DAA4B;IAA5B,4FAA4B;IAc7B,4DAAyB;IAAzB,yFAAyB;IAWjC,2DAAe;IAAf,iFAAe;;;IA1C9C,yEAAyE;IACrE,yEAIwB;IACpB,oEAAsD;IACtD,4EAA+B;IAAA,mEAAO;IAAA,6DAAO;IACjD,6DAAI;IACJ,sIAiDc;IAClB,6DAAK;;;IAuCL,6EACoE;IAC5D,6FACR;IAAA,6DAAQ;;;IALhB,4EAC2B;IACnB,0IAGQ;IAChB,6DAAO;;;;IAHS,2DAA0D;IAA1D,sGAA0D;;;;IAzBtF,2EAA0B;IACtB,0EACwB;IACpB,yFACJ;IAAA,6DAAK;IAET,6DAAM;IACN,2EAAkD;IAC9C,0EAAmC;IAC/B,gFACJ;IAAA,6DAAK;IACL,gFAAkE;IAAtC,8TAAqC;IAC7D,2EAAwB;IAEpB,iFAMmE;IAL5D,6VAAsB;IAD7B,6DAMmE;IAEnE,kIAMO;IACX,6DAAM;IACV,6DAAO;IACX,6DAAM;IACN,4EAA0B;IAEtB,+EAC4D;IAApD,yLAAS,kBAAc,aAAa,CAAC,IAAC;IAC1C,sEACJ;IAAA,6DAAS;IAET,+EAEoD;IAA5C,yYAA8B;IAClC,0EACJ;IAAA,6DAAS;IAEb,6DAAM;;;;;IAzBa,2DAA2D;IAA3D,kGAA2D;IAL3D,qFAAsB;IAOtB,2DAAiD;IAAjD,gGAAiD;IAkBxD,2DAA0D;IAA1D,oIAA0D;IAD5C,uFAAsB;;ADhVpD,IAAM,GAAG,GAAG,sBAAsB,CAAC;AAEnC;IA8BI,uCAAuC;IAEvC;;;;;;;;;OASG;IACH,2BAAoB,uBAA+C,EAC/C,gBAAiC,EACjC,eAAgC,EAChC,YAAsB,EACvB,WAAwB;QAJ3C,iBAiBC;QAjBmB,4BAAuB,GAAvB,uBAAuB,CAAwB;QAC/C,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,oBAAe,GAAf,eAAe,CAAiB;QAChC,iBAAY,GAAZ,YAAY,CAAU;QACvB,gBAAW,GAAX,WAAW,CAAa;QApCpC,aAAQ,GAAiB,IAAI,0DAAY,CAAC;YAC7C,GAAG,EAAE,GAAG;YACR,OAAO,EAAE,IAAI;SAChB,CAAC,CAAC;QAEI,qBAAgB,GAAqB;YACxC,QAAQ,EAAE,IAAI;SACjB,CAAC;QACK,wBAAmB,GAAG,KAAK,CAAC;QAC5B,wBAAmB,GAAG,KAAK,CAAC;QAC5B,2BAAsB,GAAG,KAAK,CAAC;QA+ItC,uBAAkB,GAAY,IAAI,CAAC;QAC5B,mBAAc,GAAG,EAAE,CAAC;QACpB,gBAAW,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,EAAE,CAAC;QACf,eAAU,GAAG,gEAAU,CAAC;QAxH3B,IAAI,CAAC,eAAe,GAAG,IAAI,0CAAO,EAAE,CAAC;QAErC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CACxE,UAAC,IAAa;YACV,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;YACxB;;;iBAGK;QACT,CAAC,CACJ,CAAC;QACF,WAAW,CAAC,eAAe,EAAE,CAAC;IAClC,CAAC;IAED,iBAAiB;IACjB,wGAAwG;IAExG;;OAEG;IACH,qDAAyB,GAAzB;QACI,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACzD,CAAC;IAED;;OAEG;IACH,qDAAyB,GAAzB;QACI,IAAI,CAAC,mBAAmB,GAAG,CAAC,IAAI,CAAC,mBAAmB,CAAC;IACzD,CAAC;IAED;;OAEG;IACH,wDAA4B,GAA5B;QACI,IAAI,CAAC,sBAAsB,GAAG,CAAC,IAAI,CAAC,sBAAsB,CAAC;IAC/D,CAAC;IAED;;;;OAIG;IACH,uCAAW,GAAX,UAAY,KAAU;QAAtB,iBAcC;QAZG,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;YAE7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAElC,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;YAG9B,MAAM,CAAC,MAAM,GAAG,UAAC,KAAU;gBACvB,KAAI,CAAC,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC;YAC3C,CAAC,CAAC;YACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,kBAAkB;IAClB,wGAAwG;IAGxG;;OAEG;IACH,oCAAQ,GAAR;QAAA,iBAsCC;QApCE;;;;;;GAML;QACM,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,0DAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC1F,KAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,eAAe,CAAC,aAAa,CAAC,IAAI,CAAC,0DAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,kBAAQ;;YACvF,KAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;YAC5B,KAAI,CAAC,WAAW,GAAG,+BAA+B,IAAG,WAAI,CAAC,WAAW,0CAAE,MAAM,EAAC;QAElF,CAAC,CAAC,CAAC;QAEH,iBAAiB;QACjB,IAAI,CAAC,aAAa,GAAG;YACjB,WAAW,EAAE,kCAAkC;YAC/C,YAAY,EAAE,KAAK;YACnB,UAAU,EAAE;gBACR,IAAI,EAAE,EAAE;gBACR,KAAK,EAAE;oBACH;wBACI,IAAI,EAAE,MAAM;wBACZ,MAAM,EAAE,IAAI;wBACZ,IAAI,EAAE,GAAG;qBACZ;oBAED;wBACI,IAAI,EAAE,sBAAsB;wBAC5B,MAAM,EAAE,KAAK;qBAChB;iBACJ;aACJ;SACJ,CAAC;IACN,CAAC;IAED;;OAEG;IACH,uCAAW,GAAX;QACI,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAYD;;;;OAIG;IACH,wCAAY,GAAZ,UAAa,KAAK;QAEd,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAE7C,kBAAkB;QAClB,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC;;YACzC,OAAO,QAAC,CAAC,SAAS,0CAAE,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC;mBAC9C,QAAC,CAAC,QAAQ,0CAAE,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC,IAAI,CAAC,GAAG;mBACrD,QAAC,CAAC,QAAQ,0CAAE,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,kBAAkB;QAClB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;QACnB,gEAAgE;QAChE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED,qCAAS,GAAT,UAAU,KAAU;QAChB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE;YAC1B,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;YACf,IAAI,EAAE,IAAI;SACb,CAAC,CAAC;IACP,CAAC;IAED,yCAAa,GAAb,UAAc,KAAU;QAAxB,iBAWC;QAVG,IAAI,OAAO,GAAY,IAAI,oEAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,qFAAuB,CAAC,CAAC;QAE3E,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,CAC/C,UAAC,IAAW;YACR,KAAI,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC;YACpC,KAAK,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;QAEhC,CAAC,CACJ,CAAC;IAEN,CAAC;IAED,gDAAoB,GAApB;QAAA,iBAsBC;QArBG,IAAI,KAAK,GAAa,EAAE,CAAC;QACzB,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,iBAAO;YACrC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;QAChC,CAAC,CAAC;QACF,IAAI,iBAAiB,GAAuB,IAAI,2FAAkB,CAC9D,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,MAAM,EACvB,IAAI,CAAC,WAAW,CAAC,SAAS,EAC1B,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,IAAI,CAAC,WAAW,CAAC,KAAK,EACtB,KAAK,EACL,IAAI,CAAC,WAAW,CAAC,gBAAgB,EACjC,IAAI,CAAC,WAAW,CAAC,iBAAiB,EAClC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CACzC,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,SAAS,CACpE,UAAC,IAAW;YACR,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,yCAAyC,EAAE,iBAAiB,CAAC,CAAC;QACjH,CAAC,CACJ,CAAC;IACN,CAAC;IAGD,qCAAS,GAAT,UAAU,cAAsB;QAAhC,iBAmBC;QAlBG,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,KAAK,CAAC;QACjC,IAAI,uBAAuB,GAA4B,IAAI,sGAAuB,CAC9E,IAAI,CAAC,WAAW,CAAC,QAAQ,EACzB,cAAc,CAAC,KAAK,CAAC,SAAS,EAC9B,cAAc,CAAC,KAAK,CAAC,SAAS,CACjC,CAAC;QAEF,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,uBAAuB,CAAC,CAAC,SAAS,CACzE,cAAI;YACA,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE;gBAChB,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,SAAS,EAAE,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,iBAAiB,CAAC,CAAC;gBACnF,KAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;aAC7B;iBAAM;gBACH,KAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,EAAE,gBAAgB,CAAC,CAAC;aACjF;YACD,4DAA4D;QAChE,CAAC,CACJ,CAAC;IACN,CAAC;IAED,oCAAQ,GAAR,UAAS,IAAI,EAAE,KAAK,EAAE,KAAa,EAAE,OAAe,EAAE,GAAG;QACrD,uDAAS,CAAC;YACN,IAAI,EAAE,KAAK;YACX,KAAK,EAAE,KAAK;YACZ,SAAS,EAAE,OAAO;YAClB,WAAW,EAAE;gBACT,aAAa,EAAE,GAAG;aACrB;SACJ,CAAC,CAAC;IACP,CAAC;IAED,qCAAS,GAAT;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IAClE,CAAC;IAED,mCAAO,GAAP,UAAQ,QAAgB,EAAE,eAAgC;QACtD,uDAAS,CAAC;YACN,KAAK,EAAE,gBAAgB;YACvB,IAAI,EAAE,yCAAyC;YAC/C,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,SAAS;YAC7B,iBAAiB,EAAE,SAAS;YAC5B,iBAAiB,EAAE,0BAA0B;YAC7C,WAAW,EAAE;gBACT,aAAa,EAAE,iBAAiB;gBAChC,YAAY,EAAE,qBAAqB;aACtC;SACJ,CAAC,CAAC,IAAI,CAAC,UAAU,MAAM;YACpB,IAAI,MAAM,CAAC,KAAK,EAAE;gBAEf,IAAI,MAAa,CAAC;gBACjB,eAAe,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,SAAS,CACvC,UAAC,IAAsB;oBACnB,MAAM,GAAC,IAAI,CAAC,OAAO,CAAC;oBACpB,OAAO,CAAC,GAAG,CAAC,4BAA4B,GAAE,MAAM,CAAC;gBACrD,CAAC,CACJ,CAAC;gBAEF,uDAAS,CAAC;oBACN,IAAI,EAAE,SAAS;oBACf,KAAK,EAAE,0BAA0B;oBACjC,IAAI,EAAE,6DAA6D;oBACnE,WAAW,EAAE;wBACT,aAAa,EAAE,iBAAiB;qBACnC;iBACJ,CAAC,CAAC;aACN;QACL,CAAC,CAAC,CAAC;IACP,CAAC;sFAjTQ,iBAAiB;oHAAjB,iBAAiB;uEAoKf,wEAAkB;;;;;YCpMjC,0EAAiC;YAC7B,0EAA0B;YAEtB,oFAAyE;YAGzE,8EAAoC;YAChC,0EAAuD;YACnD,0EAAmC;YAE/B,4EAA4E;YAExE,yEAAgC;YAC5B,wEAIwB;YACpB,qEAAsD;YACtD,6EAA+B;YAAA,8EAAO;YAAA,6DAAO;YACjD,6DAAI;YACJ,mIA+Nc;YAClB,6DAAK;YAEL,+GA2DK;YAGT,6DAAK;YAET,6DAAM;YACN,uEAAiE;YACrE,6DAAM;YACV,6DAAU;YAEd,6DAAM;YACV,6DAAM;YAGN,+MA+Cc;;;YA5Wc,2DAA+B;YAA/B,6FAA+B;YAoP9B,4DAAsC;YAAtC,2GAAsC;YAiE9C,2DAA4B;YAA5B,8EAA4B;;4BDxTjD;CAmVC;AAnT6B;;;;;;;;;;;;;;;;;;;;AE/BmB;AAImB;;;AAEpE;IAUE;;;OAGG;IACH,yBAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACpD,mBAAmB;QACnB,IAAI,CAAC,aAAa,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;IAC/C,CAAC;IAED;;;;;;OAMG;IACH,iCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAAjE,iBAQC;QAPC,IAAI,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;QAErC,OAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;YACvC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC9C,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,MAAM,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,uCAAa,GAAb,UAAc,EAAU;QAAxB,iBAQC;QAPC,IAAM,GAAG,GAAG,gFAAyB,GAAG,iBAAiB,GAAG,EAAE,CAAC;QAC/D,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,UAAC,QAAa;gBAC7D,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAClC,OAAO,CAAC,QAAQ,CAAC,CAAC;YACpB,CAAC,EAAE,MAAM,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED,iCAAO,GAAP,UAAQ,QAAgB;QACtB,OAAO,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,8EAAuB,GAAC,WAAW,GAAC,QAAQ,CAAC,CAAC;IACzF,CAAC;kFA9CU,eAAe;oHAAf,eAAe,WAAf,eAAe,mBAFd,MAAM;0BARpB;CAyDC;AA/C2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTe;AAIF;AAC8B;AAGd;;;;;;;;;;;;;;;;;;ICH7C,yEAAgC;IAC5B,yEAAwB;IAAA,8EAAmB;IAAA,4DAAK;IAChD,0EAAuB;IACnB,0EAA+B;IAC3B,uEAAM;IACF,yEAAiB;IACb,0EAA6B;IACzB,+EAA6B;IACzB,gFAMwC;IAJhC,uVAA0B;IAKlC,4DAAY;IAChB,4DAAW;IACf,4DAAM;IACN,2EAA6B;IACzB,gFAA6B;IACzB,iFAMwC;IAJhC,wVAA0B;IAKlC,4DAAY;IAChB,4DAAW;IACf,4DAAM;IACN,2EAA6B;IACzB,gFAA6B;IACzB,iFAM0C;IAJlC,4VAA4B;IAKpC,4DAAY;IAChB,4DAAW;IACf,4DAAM;IACV,4DAAM;IACV,4DAAO;IACX,4DAAM;IACV,4DAAM;IACV,4DAAM;;;IArC8B,0DAAoB;IAApB,oFAAoB;IAYpB,0DAAoB;IAApB,oFAAoB;IAYpB,0DAAsB;IAAtB,sFAAsB;;;IA+DtC,sEAAsD;IAClD,qEAIgC;IACpC,4DAAM;;;IAJM,0DAAmD;IAAnD,6LAAmD;;;;IAM3D,0EAG+C;IAC3C,0EAA4B;IAAA,uDAAyB;;IAAA,4DAAM;IAC/D,4DAAM;;;;;IAJD,iOAEyC;IACd,0DAAyB;IAAzB,8IAAyB;;;IAbjE,yEAAuC;IACnC,8HAMM;IACN,0NAOc;IAEd,0EAA8B;IAC1B,wEAA+E;IAC3E,2EAA+B;IAAA,uDAAsC;IAAA,4DAAO;IAAA,4DAAI;IACpF,2EAAsC;IAClC,uDACJ;IAAA,4DAAO;IACX,4DAAM;IACV,4DAAM;;;;IAvBI,0DAA6B;IAA7B,2FAA6B;IAiB5B,0DAA6C;IAA7C,0HAA6C;IACb,0DAAsC;IAAtC,kHAAsC;IAErE,0DACJ;IADI,6FACJ;;;;IAQR,sEAAK;IACD,mEAQgE;IAChE,uDACJ;IAAA,4DAAM;;;;IATC,0DAOwD;IAPxD,6jBAOwD;IAC3D,0DACJ;IADI,oFACJ;;;;IAKA,0EAGgE;IAC5D,uDACJ;IAAA,4DAAM;;;IAJD,gMAE0D;IAC3D,0DACJ;IADI,wIACJ;;;IAKA,0EAAkC;IAC9B,6EACqB;IACjB,sEAAyE;IAC7E,4DAAS;IACT,0EAAqB;IAMjB,wEAAiE;IAC7D,sEAAmE;IACnE,iEACJ;IAAA,4DAAI;IAMR,4DAAM;IACV,4DAAM;;;IAlByC,0DAA0B;IAA1B,0EAA0B;IAA3D,yFAAgC;IAQnC,0DAA6C;IAA7C,0HAA6C;IACF,0DAAiB;IAAjB,iEAAiB;IAArD,gFAAuB;;AD7JrE;IAyDI;;;;;;OAMG;IACH,4BAAmB,WAAwB,EAAS,MAAa,EACrD,gBAAkC,EAClC,mBAAuC,EACvC,kBAAqC;QAHjD,iBAYC;QAZkB,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAO;QACrD,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,wBAAmB,GAAnB,mBAAmB,CAAoB;QACvC,uBAAkB,GAAlB,kBAAkB,CAAmB;QA5DvC,SAAI,GAAC,6DAAI,CAAC;QAGpB,SAAS;QACF,qBAAgB,GAAG,KAAK,CAAC;QACzB,SAAI,GAAW,EAAE,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,eAAU,GAAG,+DAAU,CAAC;QACxB,SAAI,GAAa,EAAE,CAAC;QACpB,uBAAkB,GAAG,EAAE,CAAC;QACxB,uBAAkB,GAAG,EAAE,CAAC;QACxB,yBAAoB,GAAG,EAAE,CAAC;QAE1B,eAAU,GAAQ;YACrB,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAC;YACxB,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YACjC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YACjC,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC;YACzC,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC;SAC5C,CAAC;QAEK,eAAU,GAAQ;YACrB,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAC;YACxB,EAAC,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAC;YAC/B,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACnC,EAAC,IAAI,EAAE,YAAY,EAAE,KAAK,EAAE,YAAY,EAAC;YACzC,EAAC,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAC;SAChC,CAAC;QAEK,iBAAY,GAAQ;YACvB,EAAC,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,EAAE,EAAC;YACxB,EAAC,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAC;YACnC,EAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAC;YACjC,EAAC,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,UAAU,EAAC;SACxC,CAAC;QAEK,iBAAY,GAAG,EAAE,CAAC;QAClB,iBAAY,GAAG,EAAE,CAAC;QAClB,mBAAc,GAAG,EAAE,CAAC;QACpB,gBAAW,GAAG,EAAE,CAAC;QAKxB,UAAU;QACF,aAAQ,GAAG,EAAE,CAAC;QAgBlB,IAAI,CAAC,eAAe,GAAG,IAAI,0CAAO,EAAE,CAAC;QACrC,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAC,SAAS,CACxE,UAAC,IAAa;YACV,KAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QAC5B,CAAC,CACJ,CAAC;QACF,WAAW,CAAC,eAAe,EAAE,CAAC;IAClC,CAAC;IAED,iBAAiB;IACjB,wGAAwG;IAExG;;;;OAIG;IACH,yCAAY,GAAZ,UAAa,KAAK;QAEd,IAAM,GAAG,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;QAE7C,kBAAkB;QAClB,IAAM,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU,CAAC;;YACzC,OAAO,QAAC,CAAC,SAAS,0CAAE,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC;mBAC9C,QAAC,CAAC,QAAQ,0CAAE,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC,IAAI,CAAC,GAAG;mBACrD,QAAC,CAAC,QAAQ,0CAAE,WAAW,GAAG,OAAO,CAAC,GAAG,CAAC,MAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC;QACjE,CAAC,CAAC,CAAC;QAEH,kBAAkB;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,gEAAgE;QAChE,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,0CAAa,GAAb,UAAc,IAAI;QACd,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,UAAU,EAAE,CAAC;IACnE,CAAC;IAED;;;;OAIG;IACH,yCAAY,GAAZ,UAAa,KAAK;QACd,IAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACxC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,yCAAY,GAAZ,UAAa,KAAK;QACd,IAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACxC,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC;QACjC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,MAAM,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC;QACxF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACH,2CAAc,GAAd,UAAe,KAAK;QAChB,IAAM,MAAM,GAAG,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;QACxC,IAAI,CAAC,oBAAoB,GAAG,MAAM,CAAC;QACnC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB,EAAE,MAAM,CAAC,CAAC;QACtF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC1B,CAAC;IAED;;;;;;OAMG;IACH,uCAAU,GAAV,UAAW,UAAU,EAAE,UAAU,EAAE,YAAY;QAC3C,gCAAgC;QAChC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;QACtC,UAAU,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;QACtC,YAAY,GAAG,YAAY,CAAC,WAAW,EAAE,CAAC;QAE1C,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,aAAG;YAC3B,IAAM,kBAAkB,GAAG,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YAC5F,IAAM,oBAAoB,GAAG,GAAG,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;YACrG,IAAM,oBAAoB,GAAG,GAAG,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;YACpG,OAAO,kBAAkB,IAAI,oBAAoB,IAAI,oBAAoB,CAAC;QAC9E,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kBAAkB;IAClB,wGAAwG;IACxG;;OAEG;IACH,qCAAQ,GAAR;QAAA,iBAsBC;QArBG,0BAA0B;QAC1B,IAAI,CAAC,kBAAkB,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAS,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CAAC,gBAAM;YACjF,uGAAuG;YACvG,IAAI,MAAM,CAAC,MAAM,CAAC,SAAS,KAAK,QAAQ,EAAE;gBACtC,UAAU,CAAC;oBACP,KAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,0DAAS,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CACtF,kBAAQ;wBACJ,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;wBACrB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC;wBAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;oBAC1B,CAAC,CAAC,CAAC;gBACX,CAAC,EAAE,GAAG,CAAC,CAAC;aACX;iBAAM;gBACH,KAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,IAAI,CAAC,0DAAS,CAAC,KAAI,CAAC,eAAe,CAAC,CAAC,CAAC,SAAS,CACtF,kBAAQ;oBACJ,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;oBACrB,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,IAAI,CAAC;oBAC1B,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,IAAI,CAAC;gBAC1B,CAAC,CAAC,CAAC;aACV;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED;;OAEG;IACH,wCAAW,GAAX;QACI,qCAAqC;QACrC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;QAC5B,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC;IACpC,CAAC;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;IAChD,CAAC;wFA7MQ,kBAAkB;oHAAlB,kBAAkB;sEA4ChB,uEAAkB;;;;;YC9DjC,yEAA0C;YACtC,yEAA0B;YAEtB,6EAAoC;YAGhC,+GA8CM;YAIN,yEAAkB;YACd,yEAAiB;YACb,yEAA6B;YACzB,yEAAmE;YAC/D,2EAAyC;YAAA,oEACrC;YAAA,6EACqC;YAA7B,gMAA4B;YAChC,8EAAmB;YAAA,8DAAE;YAAA,4DAAS;YAC9B,8EAAmB;YAAA,8DAAE;YAAA,4DAAS;YAC9B,8EAAmB;YAAA,8DAAE;YAAA,4DAAS;YAC9B,8EAAoB;YAAA,+DAAG;YAAA,4DAAS;YACpC,4DAAS;YACT,mEAAM;YAAA,4DAAQ;YACtB,4DAAM;YACV,4DAAM;YAEN,2EAAiF;YAC7E,2EAA6E;YACzE,6EAAsD;YAClD,wEACA;YAAA,6EAGoC;YAH7B,4LAAyB,wFAGnB,wBAAoB,IAHD;YAAhC,4DAGoC;YACxC,4DAAQ;YACR,8EAC8B;YAAtB,2IAAS,eAAW,IAAC;YACzB,oEAAyE;YACzE,4EAAuC;YAAA,yFAA6B;YAAA,4DAAO;YAC/E,4DAAS;YACb,4DAAM;YACV,4DAAM;YACV,4DAAM;YAGN,qFAOmC;YAC/B,4FAAuE;YACnE,kIA0Bc;YAClB,4DAAuB;YACvB,uFAAqF;YACrF,4FAA4D;YACxD,iIAac;YAClB,4DAAuB;YACvB,4FAAyE;YACrE,iIAOc;YAClB,4DAAuB;YACvB,4FAAqE;YACjE,iIAuBc;YAClB,4DAAuB;YAC3B,4DAAgB;YACpB,4DAAM;YACV,4DAAU;YAEd,4DAAM;YAUV,4DAAM;;YA7LY,0DAAW;YAAX,uEAAW;YAwDW,0DAA4B;YAA5B,uFAA4B;YAc7B,2DAAyB;YAAzB,oFAAyB;YAejC,0DAAa;YAAb,0EAAa;YAQiC,0DAAa;YAAb,sEAAa;YA6BtB,0DAAa;YAAb,sEAAa;YACf,0DAAa;YAAb,sEAAa;YAgBC,0DAAY;YAAZ,qEAAY;YAUnC,0DAAY;YAAZ,qEAAY;;6BD3JrE;CAgOC;AA9M8B;;;;;;;;;;;;;;;;;;;;AEhBkB;AAEmB;;;AAEpE;IASE;;;;OAIG;IACH,0BAAoB,gBAAkC;QAAlC,qBAAgB,GAAhB,gBAAgB,CAAkB;QACpD,mBAAmB;QACnB,IAAI,CAAC,oBAAoB,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;QACpD,IAAI,CAAC,0BAA0B,GAAG,IAAI,iDAAe,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IAED;;;;;;OAMG;IACH,kCAAO,GAAP,UAAQ,KAA6B,EAAE,KAA0B;QAAjE,iBAMC;QALC,OAAO,IAAI,OAAO,CAAO,UAAC,OAAO,EAAE,MAAM;YACvC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC;gBAClC,OAAO,EAAE,CAAC;YACZ,CAAC,EAAE,MAAM,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;IACL,CAAC;IAED;;OAEG;IACH,mCAAQ,GAAR;QAAA,iBASC;QARC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,gFAAyB,GAAC,QAAQ,CAAC,CAAC,SAAS,CAC5E,UAAC,QAAa;gBACZ,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrB,KAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBAC1C,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC,EAAE,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAiB,GAAjB;QAAA,iBAUC;QATC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;YACjC,KAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,gFAAyB,GAAC,oBAAoB,CAAC,CAAC,SAAS,CACxF,UAAC,QAAa;gBACZ,KAAI,CAAC,IAAI,GAAG,QAAQ,CAAC;gBACrB,KAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;gBAChD,OAAO,CAAC,KAAI,CAAC,IAAI,CAAC,CAAC;YACrB,CAAC,EAAE,MAAM,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;IAEL,CAAC;oFAxDU,gBAAgB;qHAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;2BAPpB;CAkEC;AAzD4B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRgB;AACqB;AACb;AACA;AACY;AACmC;AACnD;AACG;AACV;AACU;AACU;AACyB;AAClB;AACV;AACI;AACE;AACX;AACK;AACI;;;AAG/D,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,kBAAkB;QACxB,SAAS,EAAE,kGAAwB;QACnC,OAAO,EAAE;YACL,eAAe,EAAE,+DAAe;SACnC;QACD,IAAI,EAAE,EAAC,SAAS,EAAE,kBAAkB,EAAC;QACrC,WAAW,EAAE,CAAC,mEAAS,CAAC;KAE3B;IACD;QACI,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,2EAAgB;QAC3B,OAAO,EAAE;YACL,eAAe,EAAE,+DAAe;SACnC;QACD,WAAW,EAAE,CAAC,mEAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,UAAU;QAChB,SAAS,EAAE,6EAAiB;QAC5B,OAAO,EAAE;YACL,eAAe,EAAE,+DAAe;YAAE,eAAe;SACpD;QACD,WAAW,EAAE,CAAC,mEAAS,CAAC;KAC3B;IACD;QACI,IAAI,EAAE,MAAM;QACZ,SAAS,EAAE,gFAAkB;QAC7B,OAAO,EAAE;YACL,eAAe,EAAE,+DAAe;YAAE,gBAAgB;SACrD;QACD,IAAI,EAAE,EAAC,KAAK,EAAE,CAAC,mEAAU,CAAC,EAAC;QAC3B,WAAW,EAAE,CAAC,mEAAS,CAAC;KAC3B;CACJ,CAAC;AAGF;IAAA;KAgBC;0EADY,WAAW;6GAAX,WAAW;iHAbX;gBACL,0DAAY;gBACZ,mEAAqB,CAAC,MAAM,CAAC;gBAC7B,kEAAS;gBACT,iEAAgB;gBAChB,wGAAmB;gBACnB,8DAAkB;gBAClB,iEAAc;gBACd,uDAAa;gBACb,wEAAkB;gBAClB,+DAAiB;aACpB;sBA1EL;CA6EC;AADuB;oIAAX,WAAW,mBAdL,6EAAiB,EAAE,kGAAwB,EAAE,gFAAkB,EAAE,2EAAgB,aAE5F,0DAAY,8DAEZ,kEAAS;QACT,iEAAgB;QAChB,wGAAmB;QACnB,8DAAkB;QAClB,iEAAc;QACd,uDAAa;QACb,wEAAkB;QAClB,+DAAiB","file":"src_app_main_projets_users_users_module_ts.js","sourcesContent":["import { EventEmitter, Directive, ElementRef, Input, Output, HostListener, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} node\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nfunction isElement(node) {\n    return !!(node && (node.nodeName || node.prop && node.attr && node.find));\n}\nclass FileLikeObject {\n    /**\n     * @param {?} fileOrInput\n     */\n    constructor(fileOrInput) {\n        this.rawFile = fileOrInput;\n        /** @type {?} */\n        let isInput = isElement(fileOrInput);\n        /** @type {?} */\n        let fakePathOrObject = isInput ? fileOrInput.value : fileOrInput;\n        /** @type {?} */\n        let postfix = typeof fakePathOrObject === 'string' ? 'FakePath' : 'Object';\n        /** @type {?} */\n        let method = '_createFrom' + postfix;\n        ((/** @type {?} */ (this)))[method](fakePathOrObject);\n    }\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    _createFromFakePath(path) {\n        this.lastModifiedDate = void 0;\n        this.size = void 0;\n        this.type = 'like/' + path.slice(path.lastIndexOf('.') + 1).toLowerCase();\n        this.name = path.slice(path.lastIndexOf('/') + path.lastIndexOf('\\\\') + 2);\n    }\n    /**\n     * @param {?} object\n     * @return {?}\n     */\n    _createFromObject(object) {\n        this.size = object.size;\n        this.type = object.type;\n        this.name = object.name;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileLikeObject.prototype.lastModifiedDate;\n    /** @type {?} */\n    FileLikeObject.prototype.size;\n    /** @type {?} */\n    FileLikeObject.prototype.type;\n    /** @type {?} */\n    FileLikeObject.prototype.name;\n    /** @type {?} */\n    FileLikeObject.prototype.rawFile;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileItem {\n    /**\n     * @param {?} uploader\n     * @param {?} some\n     * @param {?} options\n     */\n    constructor(uploader, some, options) {\n        this.url = '/';\n        this.headers = [];\n        this.withCredentials = true;\n        this.formData = [];\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.uploader = uploader;\n        this.some = some;\n        this.options = options;\n        this.file = new FileLikeObject(some);\n        this._file = some;\n        if (uploader.options) {\n            this.method = uploader.options.method || 'POST';\n            this.alias = uploader.options.itemAlias || 'file';\n        }\n        this.url = uploader.options.url;\n    }\n    /**\n     * @return {?}\n     */\n    upload() {\n        try {\n            this.uploader.uploadItem(this);\n        }\n        catch (e) {\n            this.uploader._onCompleteItem(this, '', 0, {});\n            this.uploader._onErrorItem(this, '', 0, {});\n        }\n    }\n    /**\n     * @return {?}\n     */\n    cancel() {\n        this.uploader.cancelItem(this);\n    }\n    /**\n     * @return {?}\n     */\n    remove() {\n        this.uploader.removeFromQueue(this);\n    }\n    /**\n     * @return {?}\n     */\n    onBeforeUpload() {\n        return void 0;\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildForm(form) {\n        return { form };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgress(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccess(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onError(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancel(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onComplete(response, status, headers) {\n        return { response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    _onBeforeUpload() {\n        this.isReady = true;\n        this.isUploading = true;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 0;\n        this.onBeforeUpload();\n    }\n    /**\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildForm(form) {\n        this.onBuildForm(form);\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgress(progress) {\n        this.progress = progress;\n        this.onProgress(progress);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccess(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = true;\n        this.isCancel = false;\n        this.isError = false;\n        this.progress = 100;\n        this.index = void 0;\n        this.onSuccess(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onError(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = true;\n        this.isSuccess = false;\n        this.isCancel = false;\n        this.isError = true;\n        this.progress = 0;\n        this.index = void 0;\n        this.onError(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancel(response, status, headers) {\n        this.isReady = false;\n        this.isUploading = false;\n        this.isUploaded = false;\n        this.isSuccess = false;\n        this.isCancel = true;\n        this.isError = false;\n        this.progress = 0;\n        this.index = void 0;\n        this.onCancel(response, status, headers);\n    }\n    /**\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onComplete(response, status, headers) {\n        this.onComplete(response, status, headers);\n        if (this.uploader.options.removeAfterUpload) {\n            this.remove();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _prepareToUploading() {\n        this.index = this.index || ++this.uploader._nextIndex;\n        this.isReady = true;\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileItem.prototype.file;\n    /** @type {?} */\n    FileItem.prototype._file;\n    /** @type {?} */\n    FileItem.prototype.alias;\n    /** @type {?} */\n    FileItem.prototype.url;\n    /** @type {?} */\n    FileItem.prototype.method;\n    /** @type {?} */\n    FileItem.prototype.headers;\n    /** @type {?} */\n    FileItem.prototype.withCredentials;\n    /** @type {?} */\n    FileItem.prototype.formData;\n    /** @type {?} */\n    FileItem.prototype.isReady;\n    /** @type {?} */\n    FileItem.prototype.isUploading;\n    /** @type {?} */\n    FileItem.prototype.isUploaded;\n    /** @type {?} */\n    FileItem.prototype.isSuccess;\n    /** @type {?} */\n    FileItem.prototype.isCancel;\n    /** @type {?} */\n    FileItem.prototype.isError;\n    /** @type {?} */\n    FileItem.prototype.progress;\n    /** @type {?} */\n    FileItem.prototype.index;\n    /** @type {?} */\n    FileItem.prototype._xhr;\n    /** @type {?} */\n    FileItem.prototype._form;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.uploader;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.some;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileItem.prototype.options;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileType {\n    /**\n     * @param {?} file\n     * @return {?}\n     */\n    static getMimeClass(file) {\n        /** @type {?} */\n        let mimeClass = 'application';\n        if (this.mime_psd.indexOf(file.type) !== -1) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('image.*')) {\n            mimeClass = 'image';\n        }\n        else if (file.type.match('video.*')) {\n            mimeClass = 'video';\n        }\n        else if (file.type.match('audio.*')) {\n            mimeClass = 'audio';\n        }\n        else if (file.type === 'application/pdf') {\n            mimeClass = 'pdf';\n        }\n        else if (this.mime_compress.indexOf(file.type) !== -1) {\n            mimeClass = 'compress';\n        }\n        else if (this.mime_doc.indexOf(file.type) !== -1) {\n            mimeClass = 'doc';\n        }\n        else if (this.mime_xsl.indexOf(file.type) !== -1) {\n            mimeClass = 'xls';\n        }\n        else if (this.mime_ppt.indexOf(file.type) !== -1) {\n            mimeClass = 'ppt';\n        }\n        if (mimeClass === 'application') {\n            mimeClass = this.fileTypeDetection(file.name);\n        }\n        return mimeClass;\n    }\n    /**\n     * @param {?} inputFilename\n     * @return {?}\n     */\n    static fileTypeDetection(inputFilename) {\n        /** @type {?} */\n        let types = {\n            'jpg': 'image',\n            'jpeg': 'image',\n            'tif': 'image',\n            'psd': 'image',\n            'bmp': 'image',\n            'png': 'image',\n            'nef': 'image',\n            'tiff': 'image',\n            'cr2': 'image',\n            'dwg': 'image',\n            'cdr': 'image',\n            'ai': 'image',\n            'indd': 'image',\n            'pin': 'image',\n            'cdp': 'image',\n            'skp': 'image',\n            'stp': 'image',\n            '3dm': 'image',\n            'mp3': 'audio',\n            'wav': 'audio',\n            'wma': 'audio',\n            'mod': 'audio',\n            'm4a': 'audio',\n            'compress': 'compress',\n            'zip': 'compress',\n            'rar': 'compress',\n            '7z': 'compress',\n            'lz': 'compress',\n            'z01': 'compress',\n            'bz2': 'compress',\n            'gz': 'compress',\n            'pdf': 'pdf',\n            'xls': 'xls',\n            'xlsx': 'xls',\n            'ods': 'xls',\n            'mp4': 'video',\n            'avi': 'video',\n            'wmv': 'video',\n            'mpg': 'video',\n            'mts': 'video',\n            'flv': 'video',\n            '3gp': 'video',\n            'vob': 'video',\n            'm4v': 'video',\n            'mpeg': 'video',\n            'm2ts': 'video',\n            'mov': 'video',\n            'doc': 'doc',\n            'docx': 'doc',\n            'eps': 'doc',\n            'txt': 'doc',\n            'odt': 'doc',\n            'rtf': 'doc',\n            'ppt': 'ppt',\n            'pptx': 'ppt',\n            'pps': 'ppt',\n            'ppsx': 'ppt',\n            'odp': 'ppt'\n        };\n        /** @type {?} */\n        let chunks = inputFilename.split('.');\n        if (chunks.length < 2) {\n            return 'application';\n        }\n        /** @type {?} */\n        let extension = chunks[chunks.length - 1].toLowerCase();\n        if (types[extension] === undefined) {\n            return 'application';\n        }\n        else {\n            return types[extension];\n        }\n    }\n}\n/*  MS office  */\nFileType.mime_doc = [\n    'application/msword',\n    'application/msword',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n    'application/vnd.openxmlformats-officedocument.wordprocessingml.template',\n    'application/vnd.ms-word.document.macroEnabled.12',\n    'application/vnd.ms-word.template.macroEnabled.12'\n];\nFileType.mime_xsl = [\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.ms-excel',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n    'application/vnd.openxmlformats-officedocument.spreadsheetml.template',\n    'application/vnd.ms-excel.sheet.macroEnabled.12',\n    'application/vnd.ms-excel.template.macroEnabled.12',\n    'application/vnd.ms-excel.addin.macroEnabled.12',\n    'application/vnd.ms-excel.sheet.binary.macroEnabled.12'\n];\nFileType.mime_ppt = [\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.ms-powerpoint',\n    'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n    'application/vnd.openxmlformats-officedocument.presentationml.template',\n    'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n    'application/vnd.ms-powerpoint.addin.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.presentation.macroEnabled.12',\n    'application/vnd.ms-powerpoint.slideshow.macroEnabled.12'\n];\n/* PSD */\nFileType.mime_psd = [\n    'image/photoshop',\n    'image/x-photoshop',\n    'image/psd',\n    'application/photoshop',\n    'application/psd',\n    'zz-application/zz-winassoc-psd'\n];\n/* Compressed files */\nFileType.mime_compress = [\n    'application/x-gtar',\n    'application/x-gcompress',\n    'application/compress',\n    'application/x-tar',\n    'application/x-rar-compressed',\n    'application/octet-stream',\n    'application/x-zip-compressed',\n    'application/zip-compressed',\n    'application/x-7z-compressed',\n    'application/gzip',\n    'application/x-bzip2'\n];\nif (false) {\n    /** @type {?} */\n    FileType.mime_doc;\n    /** @type {?} */\n    FileType.mime_xsl;\n    /** @type {?} */\n    FileType.mime_ppt;\n    /** @type {?} */\n    FileType.mime_psd;\n    /** @type {?} */\n    FileType.mime_compress;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isFile(value) {\n    return (File && value instanceof File);\n}\n/**\n * @record\n */\nfunction Headers() { }\nif (false) {\n    /** @type {?} */\n    Headers.prototype.name;\n    /** @type {?} */\n    Headers.prototype.value;\n}\n/**\n * @record\n */\nfunction FileUploaderOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedMimeType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.allowedFileType;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.autoUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.isHTML5;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.filters;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.headers;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.method;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authToken;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.maxFileSize;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.queueLimit;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.removeAfterUpload;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.url;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.disableMultipart;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.itemAlias;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.authTokenHeader;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.additionalParameter;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.parametersBeforeFiles;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunction;\n    /** @type {?|undefined} */\n    FileUploaderOptions.prototype.formatDataFunctionIsAsync;\n}\nclass FileUploader {\n    /**\n     * @param {?} options\n     */\n    constructor(options) {\n        this.isUploading = false;\n        this.queue = [];\n        this.progress = 0;\n        this._nextIndex = 0;\n        this.options = {\n            autoUpload: false,\n            isHTML5: true,\n            filters: [],\n            removeAfterUpload: false,\n            disableMultipart: false,\n            formatDataFunction: (/**\n             * @param {?} item\n             * @return {?}\n             */\n            (item) => item._file),\n            formatDataFunctionIsAsync: false\n        };\n        this.setOptions(options);\n        this.response = new EventEmitter();\n    }\n    /**\n     * @param {?} options\n     * @return {?}\n     */\n    setOptions(options) {\n        this.options = Object.assign(this.options, options);\n        this.authToken = this.options.authToken;\n        this.authTokenHeader = this.options.authTokenHeader || 'Authorization';\n        this.autoUpload = this.options.autoUpload;\n        this.options.filters.unshift({ name: 'queueLimit', fn: this._queueLimitFilter });\n        if (this.options.maxFileSize) {\n            this.options.filters.unshift({ name: 'fileSize', fn: this._fileSizeFilter });\n        }\n        if (this.options.allowedFileType) {\n            this.options.filters.unshift({ name: 'fileType', fn: this._fileTypeFilter });\n        }\n        if (this.options.allowedMimeType) {\n            this.options.filters.unshift({ name: 'mimeType', fn: this._mimeTypeFilter });\n        }\n        for (let i = 0; i < this.queue.length; i++) {\n            this.queue[i].url = this.options.url;\n        }\n    }\n    /**\n     * @param {?} files\n     * @param {?=} options\n     * @param {?=} filters\n     * @return {?}\n     */\n    addToQueue(files, options, filters) {\n        /** @type {?} */\n        let list = [];\n        for (let file of files) {\n            list.push(file);\n        }\n        /** @type {?} */\n        let arrayOfFilters = this._getFilters(filters);\n        /** @type {?} */\n        let count = this.queue.length;\n        /** @type {?} */\n        let addedFileItems = [];\n        list.map((/**\n         * @param {?} some\n         * @return {?}\n         */\n        (some) => {\n            if (!options) {\n                options = this.options;\n            }\n            /** @type {?} */\n            let temp = new FileLikeObject(some);\n            if (this._isValidFile(temp, arrayOfFilters, options)) {\n                /** @type {?} */\n                let fileItem = new FileItem(this, some, options);\n                addedFileItems.push(fileItem);\n                this.queue.push(fileItem);\n                this._onAfterAddingFile(fileItem);\n            }\n            else {\n                /** @type {?} */\n                let filter = arrayOfFilters[this._failFilterIndex];\n                this._onWhenAddingFileFailed(temp, filter, options);\n            }\n        }));\n        if (this.queue.length !== count) {\n            this._onAfterAddingAll(addedFileItems);\n            this.progress = this._getTotalProgress();\n        }\n        this._render();\n        if (this.options.autoUpload) {\n            this.uploadAll();\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    removeFromQueue(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        if (item.isUploading) {\n            item.cancel();\n        }\n        this.queue.splice(index, 1);\n        this.progress = this._getTotalProgress();\n    }\n    /**\n     * @return {?}\n     */\n    clearQueue() {\n        while (this.queue.length) {\n            this.queue[0].remove();\n        }\n        this.progress = 0;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    uploadItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let transport = this.options.isHTML5 ? '_xhrTransport' : '_iframeTransport';\n        item._prepareToUploading();\n        if (this.isUploading) {\n            return;\n        }\n        this.isUploading = true;\n        ((/** @type {?} */ (this)))[transport](item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    cancelItem(value) {\n        /** @type {?} */\n        let index = this.getIndexOfItem(value);\n        /** @type {?} */\n        let item = this.queue[index];\n        /** @type {?} */\n        let prop = this.options.isHTML5 ? item._xhr : item._form;\n        if (item && item.isUploading) {\n            prop.abort();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    uploadAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems().filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploading));\n        if (!items.length) {\n            return;\n        }\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._prepareToUploading()));\n        items[0].upload();\n    }\n    /**\n     * @return {?}\n     */\n    cancelAll() {\n        /** @type {?} */\n        let items = this.getNotUploadedItems();\n        items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item.cancel()));\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFile(value) {\n        return isFile(value);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    isFileLikeObject(value) {\n        return value instanceof FileLikeObject;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    getIndexOfItem(value) {\n        return typeof value === 'number' ? value : this.queue.indexOf(value);\n    }\n    /**\n     * @return {?}\n     */\n    getNotUploadedItems() {\n        return this.queue.filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => !item.isUploaded));\n    }\n    /**\n     * @return {?}\n     */\n    getReadyItems() {\n        return this.queue\n            .filter((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => (item.isReady && !item.isUploading)))\n            .sort((/**\n         * @param {?} item1\n         * @param {?} item2\n         * @return {?}\n         */\n        (item1, item2) => item1.index - item2.index));\n    }\n    /**\n     * @return {?}\n     */\n    destroy() {\n        return void 0;\n    }\n    /**\n     * @param {?} fileItems\n     * @return {?}\n     */\n    onAfterAddingAll(fileItems) {\n        return { fileItems };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} form\n     * @return {?}\n     */\n    onBuildItemForm(fileItem, form) {\n        return { fileItem, form };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onAfterAddingFile(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    onWhenAddingFileFailed(item, filter, options) {\n        return { item, filter, options };\n    }\n    /**\n     * @param {?} fileItem\n     * @return {?}\n     */\n    onBeforeUploadItem(fileItem) {\n        return { fileItem };\n    }\n    /**\n     * @param {?} fileItem\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressItem(fileItem, progress) {\n        return { fileItem, progress };\n    }\n    /**\n     * @param {?} progress\n     * @return {?}\n     */\n    onProgressAll(progress) {\n        return { progress };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onSuccessItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onErrorItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCancelItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    onCompleteItem(item, response, status, headers) {\n        return { item, response, status, headers };\n    }\n    /**\n     * @return {?}\n     */\n    onCompleteAll() {\n        return void 0;\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _mimeTypeFilter(item) {\n        return !(this.options.allowedMimeType && this.options.allowedMimeType.indexOf(item.type) === -1);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileSizeFilter(item) {\n        return !(this.options.maxFileSize && item.size > this.options.maxFileSize);\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _fileTypeFilter(item) {\n        return !(this.options.allowedFileType &&\n            this.options.allowedFileType.indexOf(FileType.getMimeClass(item)) === -1);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onErrorItem(item, response, status, headers) {\n        item._onError(response, status, headers);\n        this.onErrorItem(item, response, status, headers);\n    }\n    /**\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCompleteItem(item, response, status, headers) {\n        item._onComplete(response, status, headers);\n        this.onCompleteItem(item, response, status, headers);\n        /** @type {?} */\n        let nextItem = this.getReadyItems()[0];\n        this.isUploading = false;\n        if (nextItem) {\n            nextItem.upload();\n            return;\n        }\n        this.onCompleteAll();\n        this.progress = this._getTotalProgress();\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} parsedHeaders\n     * @return {?}\n     */\n    _headersGetter(parsedHeaders) {\n        return (/**\n         * @param {?} name\n         * @return {?}\n         */\n        (name) => {\n            if (name) {\n                return parsedHeaders[name.toLowerCase()] || void 0;\n            }\n            return parsedHeaders;\n        });\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _xhrTransport(item) {\n        /** @type {?} */\n        let that = this;\n        /** @type {?} */\n        let xhr = item._xhr = new XMLHttpRequest();\n        /** @type {?} */\n        let sendable;\n        this._onBeforeUploadItem(item);\n        if (typeof item._file.size !== 'number') {\n            throw new TypeError('The file specified is no longer valid');\n        }\n        if (!this.options.disableMultipart) {\n            sendable = new FormData();\n            this._onBuildItemForm(item, sendable);\n            /** @type {?} */\n            const appendFile = (/**\n             * @return {?}\n             */\n            () => sendable.append(item.alias, item._file, item.file.name));\n            if (!this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n            // For AWS, Additional Parameters must come BEFORE Files\n            if (this.options.additionalParameter !== undefined) {\n                Object.keys(this.options.additionalParameter).forEach((/**\n                 * @param {?} key\n                 * @return {?}\n                 */\n                (key) => {\n                    /** @type {?} */\n                    let paramVal = this.options.additionalParameter[key];\n                    // Allow an additional parameter to include the filename\n                    if (typeof paramVal === 'string' && paramVal.indexOf('{{file_name}}') >= 0) {\n                        paramVal = paramVal.replace('{{file_name}}', item.file.name);\n                    }\n                    sendable.append(key, paramVal);\n                }));\n            }\n            if (this.options.parametersBeforeFiles) {\n                appendFile();\n            }\n        }\n        else {\n            sendable = this.options.formatDataFunction(item);\n        }\n        xhr.upload.onprogress = (/**\n         * @param {?} event\n         * @return {?}\n         */\n        (event) => {\n            /** @type {?} */\n            let progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            this._onProgressItem(item, progress);\n        });\n        xhr.onload = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            /** @type {?} */\n            let gist = this._isSuccessCode(xhr.status) ? 'Success' : 'Error';\n            /** @type {?} */\n            let method = '_on' + gist + 'Item';\n            ((/** @type {?} */ (this)))[method](item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onerror = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onErrorItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.onabort = (/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            let headers = this._parseHeaders(xhr.getAllResponseHeaders());\n            /** @type {?} */\n            let response = this._transformResponse(xhr.response, headers);\n            this._onCancelItem(item, response, xhr.status, headers);\n            this._onCompleteItem(item, response, xhr.status, headers);\n        });\n        xhr.open(item.method, item.url, true);\n        xhr.withCredentials = item.withCredentials;\n        if (this.options.headers) {\n            for (let header of this.options.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (item.headers.length) {\n            for (let header of item.headers) {\n                xhr.setRequestHeader(header.name, header.value);\n            }\n        }\n        if (this.authToken) {\n            xhr.setRequestHeader(this.authTokenHeader, this.authToken);\n        }\n        xhr.onreadystatechange = (/**\n         * @return {?}\n         */\n        function () {\n            if (xhr.readyState == XMLHttpRequest.DONE) {\n                that.response.emit(xhr.responseText);\n            }\n        });\n        if (this.options.formatDataFunctionIsAsync) {\n            sendable.then((/**\n             * @param {?} result\n             * @return {?}\n             */\n            (result) => xhr.send(JSON.stringify(result))));\n        }\n        else {\n            xhr.send(sendable);\n        }\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?=} value\n     * @return {?}\n     */\n    _getTotalProgress(value = 0) {\n        if (this.options.removeAfterUpload) {\n            return value;\n        }\n        /** @type {?} */\n        let notUploaded = this.getNotUploadedItems().length;\n        /** @type {?} */\n        let uploaded = notUploaded ? this.queue.length - notUploaded : this.queue.length;\n        /** @type {?} */\n        let ratio = 100 / this.queue.length;\n        /** @type {?} */\n        let current = value * ratio / 100;\n        return Math.round(uploaded * ratio + current);\n    }\n    /**\n     * @protected\n     * @param {?} filters\n     * @return {?}\n     */\n    _getFilters(filters) {\n        if (!filters) {\n            return this.options.filters;\n        }\n        if (Array.isArray(filters)) {\n            return filters;\n        }\n        if (typeof filters === 'string') {\n            /** @type {?} */\n            let names = filters.match(/[^\\s,]+/g);\n            return this.options.filters\n                .filter((/**\n             * @param {?} filter\n             * @return {?}\n             */\n            (filter) => names.indexOf(filter.name) !== -1));\n        }\n        return this.options.filters;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _render() {\n        return void 0;\n    }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _queueLimitFilter() {\n        return this.options.queueLimit === undefined || this.queue.length < this.options.queueLimit;\n    }\n    /**\n     * @protected\n     * @param {?} file\n     * @param {?} filters\n     * @param {?} options\n     * @return {?}\n     */\n    _isValidFile(file, filters, options) {\n        this._failFilterIndex = -1;\n        return !filters.length ? true : filters.every((/**\n         * @param {?} filter\n         * @return {?}\n         */\n        (filter) => {\n            this._failFilterIndex++;\n            return filter.fn.call(this, file, options);\n        }));\n    }\n    /**\n     * @protected\n     * @param {?} status\n     * @return {?}\n     */\n    _isSuccessCode(status) {\n        return (status >= 200 && status < 300) || status === 304;\n    }\n    /**\n     * @protected\n     * @param {?} response\n     * @param {?} headers\n     * @return {?}\n     */\n    _transformResponse(response, headers) {\n        return response;\n    }\n    /**\n     * @protected\n     * @param {?} headers\n     * @return {?}\n     */\n    _parseHeaders(headers) {\n        /** @type {?} */\n        let parsed = {};\n        /** @type {?} */\n        let key;\n        /** @type {?} */\n        let val;\n        /** @type {?} */\n        let i;\n        if (!headers) {\n            return parsed;\n        }\n        headers.split('\\n').map((/**\n         * @param {?} line\n         * @return {?}\n         */\n        (line) => {\n            i = line.indexOf(':');\n            key = line.slice(0, i).trim().toLowerCase();\n            val = line.slice(i + 1).trim();\n            if (key) {\n                parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n            }\n        }));\n        return parsed;\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} filter\n     * @param {?} options\n     * @return {?}\n     */\n    _onWhenAddingFileFailed(item, filter, options) {\n        this.onWhenAddingFileFailed(item, filter, options);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onAfterAddingFile(item) {\n        this.onAfterAddingFile(item);\n    }\n    /**\n     * @protected\n     * @param {?} items\n     * @return {?}\n     */\n    _onAfterAddingAll(items) {\n        this.onAfterAddingAll(items);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @return {?}\n     */\n    _onBeforeUploadItem(item) {\n        item._onBeforeUpload();\n        this.onBeforeUploadItem(item);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} form\n     * @return {?}\n     */\n    _onBuildItemForm(item, form) {\n        item._onBuildForm(form);\n        this.onBuildItemForm(item, form);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} progress\n     * @return {?}\n     */\n    _onProgressItem(item, progress) {\n        /** @type {?} */\n        let total = this._getTotalProgress(progress);\n        this.progress = total;\n        item._onProgress(progress);\n        this.onProgressItem(item, progress);\n        this.onProgressAll(total);\n        this._render();\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onSuccessItem(item, response, status, headers) {\n        item._onSuccess(response, status, headers);\n        this.onSuccessItem(item, response, status, headers);\n    }\n    /**\n     * @protected\n     * @param {?} item\n     * @param {?} response\n     * @param {?} status\n     * @param {?} headers\n     * @return {?}\n     */\n    _onCancelItem(item, response, status, headers) {\n        item._onCancel(response, status, headers);\n        this.onCancelItem(item, response, status, headers);\n    }\n}\nif (false) {\n    /** @type {?} */\n    FileUploader.prototype.authToken;\n    /** @type {?} */\n    FileUploader.prototype.isUploading;\n    /** @type {?} */\n    FileUploader.prototype.queue;\n    /** @type {?} */\n    FileUploader.prototype.progress;\n    /** @type {?} */\n    FileUploader.prototype._nextIndex;\n    /** @type {?} */\n    FileUploader.prototype.autoUpload;\n    /** @type {?} */\n    FileUploader.prototype.authTokenHeader;\n    /** @type {?} */\n    FileUploader.prototype.response;\n    /** @type {?} */\n    FileUploader.prototype.options;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileUploader.prototype._failFilterIndex;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileSelectDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.onFileSelected = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @return {?}\n     */\n    isEmptyAfterSelection() {\n        return !!this.element.nativeElement.attributes.multiple;\n    }\n    /**\n     * @return {?}\n     */\n    onChange() {\n        /** @type {?} */\n        let files = this.element.nativeElement.files;\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this.uploader.addToQueue(files, options, filters);\n        this.onFileSelected.emit(files);\n        if (this.isEmptyAfterSelection()) {\n            this.element.nativeElement.value = '';\n        }\n    }\n}\nFileSelectDirective.ɵfac = function FileSelectDirective_Factory(t) { return new (t || FileSelectDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileSelectDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FileSelectDirective, selectors: [[\"\", \"ng2FileSelect\", \"\"]], hostBindings: function FileSelectDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function FileSelectDirective_change_HostBindingHandler() { return ctx.onChange(); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { onFileSelected: \"onFileSelected\" } });\n/** @nocollapse */\nFileSelectDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileSelectDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    onFileSelected: [{ type: Output }],\n    onChange: [{ type: HostListener, args: ['change',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileSelectDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileSelect]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { onFileSelected: [{\n            type: Output\n        }], \n    /**\n     * @return {?}\n     */\n    onChange: [{\n            type: HostListener,\n            args: ['change']\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileSelectDirective.prototype.uploader;\n    /** @type {?} */\n    FileSelectDirective.prototype.onFileSelected;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileSelectDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileDropDirective {\n    /**\n     * @param {?} element\n     */\n    constructor(element) {\n        this.fileOver = new EventEmitter();\n        this.onFileDrop = new EventEmitter();\n        this.element = element;\n    }\n    /**\n     * @return {?}\n     */\n    getOptions() {\n        return this.uploader.options;\n    }\n    /**\n     * @return {?}\n     */\n    getFilters() {\n        return {};\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!transfer) {\n            return;\n        }\n        /** @type {?} */\n        let options = this.getOptions();\n        /** @type {?} */\n        let filters = this.getFilters();\n        this._preventAndStop(event);\n        this.uploader.addToQueue(transfer.files, options, filters);\n        this.fileOver.emit(false);\n        this.onFileDrop.emit(transfer.files);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver(event) {\n        /** @type {?} */\n        let transfer = this._getTransfer(event);\n        if (!this._haveFiles(transfer.types)) {\n            return;\n        }\n        transfer.dropEffect = 'copy';\n        this._preventAndStop(event);\n        this.fileOver.emit(true);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave(event) {\n        if (((/** @type {?} */ (this))).element) {\n            if (event.currentTarget === ((/** @type {?} */ (this))).element[0]) {\n                return;\n            }\n        }\n        this._preventAndStop(event);\n        this.fileOver.emit(false);\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _getTransfer(event) {\n        return event.dataTransfer ? event.dataTransfer : event.originalEvent.dataTransfer; // jQuery fix;\n    }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _preventAndStop(event) {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n    /**\n     * @protected\n     * @param {?} types\n     * @return {?}\n     */\n    _haveFiles(types) {\n        if (!types) {\n            return false;\n        }\n        if (types.indexOf) {\n            return types.indexOf('Files') !== -1;\n        }\n        else if (types.contains) {\n            return types.contains('Files');\n        }\n        else {\n            return false;\n        }\n    }\n}\nFileDropDirective.ɵfac = function FileDropDirective_Factory(t) { return new (t || FileDropDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nFileDropDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FileDropDirective, selectors: [[\"\", \"ng2FileDrop\", \"\"]], hostBindings: function FileDropDirective_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"drop\", function FileDropDirective_drop_HostBindingHandler($event) { return ctx.onDrop($event); })(\"dragover\", function FileDropDirective_dragover_HostBindingHandler($event) { return ctx.onDragOver($event); })(\"dragleave\", function FileDropDirective_dragleave_HostBindingHandler($event) { return ctx.onDragLeave($event); });\n    } }, inputs: { uploader: \"uploader\" }, outputs: { fileOver: \"fileOver\", onFileDrop: \"onFileDrop\" } });\n/** @nocollapse */\nFileDropDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nFileDropDirective.propDecorators = {\n    uploader: [{ type: Input }],\n    fileOver: [{ type: Output }],\n    onFileDrop: [{ type: Output }],\n    onDrop: [{ type: HostListener, args: ['drop', ['$event'],] }],\n    onDragOver: [{ type: HostListener, args: ['dragover', ['$event'],] }],\n    onDragLeave: [{ type: HostListener, args: ['dragleave', ['$event'],] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileDropDirective, [{\n        type: Directive,\n        args: [{ selector: '[ng2FileDrop]' }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { fileOver: [{\n            type: Output\n        }], onFileDrop: [{\n            type: Output\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDrop: [{\n            type: HostListener,\n            args: ['drop', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragOver: [{\n            type: HostListener,\n            args: ['dragover', ['$event']]\n        }], \n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onDragLeave: [{\n            type: HostListener,\n            args: ['dragleave', ['$event']]\n        }], uploader: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    FileDropDirective.prototype.uploader;\n    /** @type {?} */\n    FileDropDirective.prototype.fileOver;\n    /** @type {?} */\n    FileDropDirective.prototype.onFileDrop;\n    /**\n     * @type {?}\n     * @protected\n     */\n    FileDropDirective.prototype.element;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass FileUploadModule {\n}\nFileUploadModule.ɵfac = function FileUploadModule_Factory(t) { return new (t || FileUploadModule)(); };\nFileUploadModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: FileUploadModule });\nFileUploadModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FileUploadModule, [{\n        type: NgModule,\n        args: [{\n                imports: [CommonModule],\n                declarations: [FileDropDirective, FileSelectDirective],\n                exports: [FileDropDirective, FileSelectDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(FileUploadModule, { declarations: function () { return [FileDropDirective, FileSelectDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [FileDropDirective, FileSelectDirective]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\nexport { FileDropDirective, FileItem, FileLikeObject, FileSelectDirective, FileUploadModule, FileUploader };\n\n//# sourceMappingURL=ng2-file-upload.js.map","export class CreateUserDTO{\n    public username: string;\n    public password: string;\n    public firstName: string;\n    public lastName: string;\n    public email: string;\n    public avatar: string;\n    public roles : string[] = []\n\n    constructor(username: string,\n                password: string,\n                firstName: string,\n                lastName: string,\n                email: string,\n                avatar: string,\n                roles: string[]) {\n        this.username = username;\n        this.password = password;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.email = email;\n        this.avatar = avatar;\n        this.roles = roles;\n    }\n}\n","export enum TypeRole{\n    ADMINISTARTION='ADMINISTARTION',\n    CHANTIER='CHANTIER'\n}\n","\nexport class UpdateInfosUserDTO{\n    public username: string;\n    public avatar: string;\n    public firstName: string;\n    public lastName: string;\n    public email: string;\n    public roles : string[] = []\n    accountNonLocked: boolean;\n    accountNonExpired: boolean;\n    credentialsNonExpired: boolean;\n\n\n    constructor(username: string,\n                avatar: string,\n                firstName: string,\n                lastName: string,\n                email: string,\n                roles: string[], accountNonLocked: boolean,\n                accountNonExpired: boolean, credentialsNonExpired: boolean) {\n        this.username = username;\n        this.avatar = avatar;\n        this.firstName = firstName;\n        this.lastName = lastName;\n        this.email = email;\n        this.roles = roles;\n        this.accountNonLocked = accountNonLocked;\n        this.accountNonExpired = accountNonExpired;\n        this.credentialsNonExpired = credentialsNonExpired;\n    }\n}\n","export class UpdatePwdUserRequestDTO{\n    public username: string ;\n    public oldPassword: string ;\n    public newPassword: string ;\n\n\n    constructor(username: string, oldPassword: string, newPassword: string) {\n        this.username = username;\n        this.oldPassword = oldPassword;\n        this.newPassword = newPassword;\n    }\n}\n","import {Component, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FileUploader} from \"ng2-file-upload\";\nimport {FlatpickrOptions} from \"ng2-flatpickr\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {AppUser} from \"../../../authentication/models/app-user\";\nimport {AppRole} from \"../../../authentication/models/app-role\";\nimport {RoleListService} from \"../role-list.service\";\nimport {Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AuthService} from \"../../../authentication/auth.service\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {TypeRole} from \"../../../authentication/models/type-role\";\nimport {Param} from \"../../../parametres/models/param\";\nimport {UpdateInfosUserDTO} from \"../../../authentication/models/update-infos-userDTO\";\nimport {NgForm} from \"@angular/forms\";\nimport {UpdatePwdUserRequestDTO} from \"../../../authentication/models/update-pwd-user-requestDTO\";\nimport Swal from \"sweetalert2\";\nimport {AccountSettingsService} from \"./account-settings.service\";\n\nconst URL = 'Users/Mac/Downloads/';\n\n@Component({\n    selector: 'app-account-settings',\n    templateUrl: './account-settings.component.html',\n    styleUrls: ['./account-settings.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class AccountSettingsComponent implements OnInit, OnDestroy {\n    // public\n    public contentHeader: object;\n\n    public uploader: FileUploader = new FileUploader({\n        url: URL,\n        isHTML5: true\n    });\n\n    public birthDateOptions: FlatpickrOptions = {\n        altInput: true\n    };\n    public passwordTextTypeOld = false;\n    public passwordTextTypeNew = false;\n    public passwordTextTypeRetype = false;\n    public avatarImage: string = \"/Users/mac/Apps/sr-manager/RESSOURCES/data/directory/images/6000.png\";\n\n    // private\n    private _unsubscribeAll: Subject<any>;\n    private currentUserSubscription: Subscription;\n    public currentUser: AppUser;\n    public roles: AppRole[];\n    //public rolesSelected: AppRole[] = [];\n\n    /**\n     * Constructor\n     *\n     * @param roleListService\n     * @param {AccountSettingsService} _accountSettingsService\n     * @param _router\n     * @param modalService\n     * @param authService\n     */\n    constructor(private roleListService: RoleListService,\n                private _accountSettingsService: AccountSettingsService,\n                private _router: Router,\n                private modalService: NgbModal,\n                private authService: AuthService) {\n\n        this._unsubscribeAll = new Subject();\n        this.currentUserSubscription = this.authService.currentUserSubject.subscribe(\n            (data: AppUser) => {\n                this.currentUser = data;\n               // this.avatarImage =  this.currentUser? 'assets/images/portrait/small/'+this.currentUser?.avatar:'assets/images/portrait/small/unknown.png';\n            }\n        );\n        authService.loadCurrentUser();\n\n\n    }\n\n    // Public Methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle Password Text Type Old\n     */\n    togglePasswordTextTypeOld() {\n        this.passwordTextTypeOld = !this.passwordTextTypeOld;\n    }\n\n    /**\n     * Toggle Password Text Type New\n     */\n    togglePasswordTextTypeNew() {\n        this.passwordTextTypeNew = !this.passwordTextTypeNew;\n    }\n\n    /**\n     * Toggle Password Text Type Retype\n     */\n    togglePasswordTextTypeRetype() {\n        this.passwordTextTypeRetype = !this.passwordTextTypeRetype;\n    }\n\n    /**\n     * Upload Image\n     *\n     * @param event\n     */\n    uploadImage(event: any) {\n\n        if (event.target.files && event.target.files[0]) {\n\n            console.log(event.target.files[0])\n\n            let reader = new FileReader();\n\n\n            reader.onload = (event: any) => {\n                this.avatarImage = event.target.result;\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    }\n\n    // Lifecycle Hooks\n    // -----------------------------------------------------------------------------------------------------\n\n\n    /**\n     * On init\n     */\n    ngOnInit() {\n\n        this.roleListService.onRolessChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n            this.roles = response;\n        });\n\n        // content header\n        this.contentHeader = {\n            headerTitle: 'Paramètres du compte utilisateur',\n            actionButton: false,\n            breadcrumb: {\n                type: '',\n                links: [\n                    {\n                        name: 'Home',\n                        isLink: true,\n                        link: '/'\n                    },\n\n                    {\n                        name: 'Paramètres du compte',\n                        isLink: false\n                    }\n                ]\n            }\n        };\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    roleName: string;\n    disableUploadImage: boolean = true;\n\n    onAddRole(modal: any) {\n        this.roleName = \"\";\n        this.modalService.open(modal, {\n            centered: true,\n            backdrop: false,\n            size: 'sm'\n        });\n    }\n\n    onSaveNewRole(modal: any) {\n        let appRole: AppRole = new AppRole(this.roleName, TypeRole.ADMINISTARTION);\n\n        this.roleListService.createRole(appRole).subscribe(\n            (data: Param) => {\n                this.roleListService.getAppRoles();\n                modal.close('Accept click');\n\n            }\n        );\n\n    }\n\n    updateInfosGenerales() {\n        let roles:string[]=[];\n        this.currentUser.appRoles.forEach(appRole => {\n            roles.push(appRole.roleName)\n        })\n        let updateInfoUserDto:UpdateInfosUserDTO=new UpdateInfosUserDTO(\n            this.currentUser.username,\n            this.currentUser.avatar,\n            this.currentUser.firstName,\n            this.currentUser.lastName,\n            this.currentUser.email,\n            roles,\n            this.currentUser.accountNonLocked,\n            this.currentUser.accountNonExpired,\n            this.currentUser.credentialsNonExpired\n        );\n\n        this._accountSettingsService.updateInfoUser(updateInfoUserDto).subscribe(\n            (data: Param) => {\n                this.showSwal('basic','success','Good job!','Infos utilisateur modifiées avec succés','btn btn-primary');\n            }\n        );\n    }\n\n\n\n    updatePwd(tDPassWordForm: NgForm) {\n        console.log(tDPassWordForm.value)\n        let updatePwdUserRequestDTO: UpdatePwdUserRequestDTO = new UpdatePwdUserRequestDTO(\n            this.currentUser.username,\n            tDPassWordForm.value.txtOldPwd,\n            tDPassWordForm.value.txtNewPwd,\n        );\n\n        this._accountSettingsService.updatePwdUser(updatePwdUserRequestDTO).subscribe(\n            data => {\n                if (data['result']) {\n                    this.showSwal('basic', 'success', 'Good job!', data['message'], 'btn btn-primary');\n                    this.authService.logout();\n                } else {\n                    this.showSwal('basic', 'error', 'Erreur!', data['message'], 'btn btn-danger');\n                }\n                //this._router.navigate(['/pages/authentication/login-v2']);\n            }\n        );\n    }\n\n    showSwal(type, icone, title: string, message: string, btn) {\n        Swal.fire({\n            icon: icone,\n            title: title,\n            titleText: message,\n            customClass: {\n                confirmButton: btn,\n            }\n        });\n    }\n\n\n}\n\n","<div class=\"content-wrapper p-0\">\n    <div class=\"content-body\">\n        <!-- content-header component -->\n        <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n        <!-- account setting page -->\n        <section id=\"page-account-settings\">\n            <div class=\"row nav-vertical nav-vertical-over d-flex\">\n                <div class=\"col-md-3 mb-2 mb-md-0\">\n\n                    <ul ngbNav #navVertical=\"ngbNav\" class=\"nav nav-pills flex-column nav-left\">\n\n                        <li class=\"nav-item\" ngbNavItem>\n                            <a ngbNavLink class=\"nav-link d-flex py-75\"\n                               id=\"account-pill-general\"\n                               data-toggle=\"pill\"\n                               href=\"#account-vertical-general\"\n                               aria-expanded=\"true\">\n                                <i data-feather=\"user\" class=\"font-medium-3 mr-1\"></i>\n                                <span class=\"font-weight-bold\">Général</span>\n                            </a>\n                            <ng-template ngbNavContent>\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <!-- header media -->\n                                        <div class=\"media\">\n                                            <a href=\"javascript:void(0);\" class=\"mr-25\">\n                                                <img [src]=\"avatarImage\" class=\"rounded mr-50\" alt=\"profile image\"\n                                                     height=\"76\" width=\"80\"/>\n                                            </a>\n                                            <!-- upload and reset button -->\n\n                                            <div class=\"media-body mt-75 ml-1\">\n                                                <button [disabled]=\"disableUploadImage\"\n                                                        (click)=\"file.click()\"\n                                                        for=\"account-upload\"\n                                                        [ngClass]=\"{'btn btn-sm mb-75 mr-75' :true,\n                                                        'btn-primary':!disableUploadImage,\n                                                        'btn-secondary':disableUploadImage}\"\n\n                                                        class=\"btn btn-sm btn-primary mb-75 mr-75\"\n                                                        rippleEffect>\n                                                    Upload\n                                                </button>\n                                                <input type=\"file\"\n                                                       #file\n                                                       id=\"account-upload\"\n                                                       hidden\n                                                       accept=\"image/*\"\n                                                       (change)=\"uploadImage($event)\"/>\n                                                <button disabled\n                                                        class=\"btn btn-sm btn-outline-secondary mb-75\" rippleEffect>\n                                                    Reset\n                                                </button>\n                                                <p>Images: JPG, GIF or PNG. Taille max 800kB</p>\n                                            </div>\n\n                                            <!--/ upload and reset button -->\n                                        </div>\n                                        <!--/ header media -->\n\n                                        <!-- form -->\n\n                                        <form class=\"form-horizontal\" (ngSubmit)=\"(TDInfoGeneraleForm.form.valid)\" #TDInfoGeneraleForm=\"ngForm\">\n\n                                            <div class=\"row\">\n\n                                                <div class=\"col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDFirstName\">Prénom</label>\n                                                        <input class=\"form-control input-md\"\n                                                               [class.error]=\"!TDFirstNameRef.valid && TDFirstNameRef.touched\"\n                                                               [(ngModel)]=\"currentUser.firstName\"\n                                                               #TDFirstNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDFirstName\"\n                                                               name=\"TDFirstName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Prénom\"/>\n\n                                                        <span *ngIf=\"!TDFirstNameRef.valid && TDFirstNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDFirstNameRef.errors.required\">\n                                                                 Le Prénom est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDLastName\">Nom</label>\n                                                        <input class=\"form-control input-md\"\n                                                               [class.error]=\"!TDLastNameRef.valid && TDLastNameRef.touched\"\n                                                               [(ngModel)]=\"currentUser.lastName\"\n                                                               #TDLastNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDLastName\"\n                                                               name=\"TDLastName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Prénom\"/>\n\n                                                        <span *ngIf=\"!TDLastNameRef.valid && TDLastNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDLastNameRef.errors.required\">\n                                                                 Le Nom est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDUserName\">Nom d'utilisateur</label>\n                                                        <input disabled class=\"form-control input-md\"\n                                                               [class.error]=\"!TDUserNameRef.valid && TDUserNameRef.touched\"\n                                                               [(ngModel)]=\"currentUser.username\"\n                                                               #TDUserNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDUserName\"\n                                                               name=\"TDUserName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Nom D'utilisateur\"/>\n\n                                                        <span *ngIf=\"!TDUserNameRef.valid && TDUserNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDUserNameRef.errors.required\">\n                                                                 Le Nom d'utilisateur est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n                                                        <input\n                                                                class=\"form-control input-md\"\n                                                                [class.error]=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\"\n                                                                [(ngModel)]=\"currentUser.email\"\n                                                                #TDMultiRuleEmailRef=\"ngModel\"\n                                                                required\n                                                                email\n                                                                id=\"TDMultiRuleEmail\"\n                                                                name=\"TDMultiRuleEmail\"\n                                                                type=\"text\"\n                                                                placeholder=\"Votre Email\"/>\n                                                        <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n                                                            <small class=\"form-text text-danger\">\n                                                               L'Email doit etre valide!\n                                                            </small>\n                                                        </span>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n\n                                            <div class=\"row\" *ngIf=\"false\" >\n                                                <div class=\"col-md-6 col-6\">\n                                                    <!--                                        <label>Les sous traitants </label>-->\n                                                    <fieldset class=\"form-group\">\n                                                        <label>LES ROLES</label>\n                                                        <ng-select\n                                                            #TDSubContractorRef=\"ngModel\"\n                                                            [items]=\"roles\"\n                                                            [multiple]=\"true\"\n                                                            [closeOnSelect]=\"true\"\n                                                            [searchable]=\"true\"\n                                                            bindLabel=\"roleName\"\n                                                            placeholder=\"Séléctionner au moins un Roles\"\n                                                            [(ngModel)]=\"currentUser.appRoles\"\n                                                            [ngModelOptions]=\"{standalone: true}\" #select\n                                                            [class.error]=\"currentUser.appRoles && currentUser.appRoles.length==0 && TDInfoGeneraleForm.submitted\">\n\n                                                            <ng-template ng-header-tmp>\n                                                                <button class=\"add-new-customer btn btn-flat-success cursor-pointer rounded-0 text-left p-50 w-100\"\n                                                                        (click)=\"onAddRole(modalNewRole); select.blur(); select.close()\">\n                                                                    <i data-feather=\"plus\"></i>\n                                                                    <span class=\"align-middle ml-25\">Ajouter un Role</span>\n                                                                </button>\n                                                            </ng-template>\n\n                                                        </ng-select>\n\n                                                        <span *ngIf=\"TDInfoGeneraleForm.submitted && currentUser.appRoles && currentUser.appRoles.length==0\"\n                                                              class=\"invalid-form\">\n                                                            <small class=\"form-text text-danger\"\n                                                                   *ngIf=\"currentUser.appRoles && currentUser.appRoles.length==0\">\n                                                                Vous devez choisir au moins un role!\n                                                            </small>\n                                                        </span>\n\n                                                    </fieldset>\n\n                                                </div>\n\n                                            </div>\n\n\n                                            <button type=\"submit\"\n                                                    [disabled]=\"!TDInfoGeneraleForm.form.valid\"\n                                                    [ngClass]=\"{'btn mr-1 mt-1' :true,'btn-primary':TDInfoGeneraleForm.form.valid,'btn-secondary':!TDInfoGeneraleForm.form.valid}\"\n                                                    (click)=\"updateInfosGenerales()\"\n                                                    rippleEffect>\n                                                Enregistrer\n                                            </button>\n\n                                            <button type=\"reset\" class=\"btn btn-outline-secondary mt-1\"\n                                                    [routerLink]=\"['']\" rippleEffect>\n                                                Fermer\n                                            </button>\n\n                                        </form>\n\n                                        <!--/ form -->\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </li>\n\n                        <li class=\"nav-item\" ngbNavItem>\n                            <a ngbNavLink\n                               class=\"nav-link d-flex py-75\"\n                               id=\"account-pill-password\"\n                               data-toggle=\"pill\"\n                               href=\"#account-vertical-password\"\n                               aria-expanded=\"false\">\n                                <i data-feather=\"lock\" class=\"font-medium-3 mr-1\"></i>\n                                <span class=\"font-weight-bold\">Changer le mot de passe</span>\n                            </a>\n                            <ng-template ngbNavContent>\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <!-- form -->\n\n                                        <form class=\"form-horizontal\" (ngSubmit)=\"(TDPassWordForm.form.valid)\" #TDPassWordForm=\"ngForm\">\n\n                                            <div class=\"row\">\n                                                <div class=\"col-12 col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label for=\"txtOldPwd\">Ancien mot de passe</label>\n                                                        <div class=\"input-group form-password-toggle input-group-merge\">\n\n                                                            <input [type]=\"passwordTextTypeOld ? 'text' : 'password'\"\n                                                                   class=\"form-control input-md\"\n                                                                   [class.error]=\"!txtOldPwdRef.valid && txtOldPwdRef.touched\"\n                                                                   ngModel\n                                                                   #txtOldPwdRef=\"ngModel\"\n                                                                   required\n                                                                   id=\"txtOldPwd\"\n                                                                   name=\"txtOldPwd\"\n                                                                   placeholder=\"Ancien mot de passe\"/>\n\n\n                                                            <div class=\"input-group-append\">\n                                                                <span class=\"input-group-text cursor-pointer\">\n                                                                    <i class=\"feather font-small-4\"\n                                                                       [ngClass]=\"{'icon-eye-off': passwordTextTypeOld,\n                                                                              'icon-eye': !passwordTextTypeOld}\"\n                                                                       (click)=\"togglePasswordTextTypeOld()\">\n\n                                                                    </i>\n                                                                </span>\n                                                            </div>\n\n                                                        </div>\n\n                                                        <span *ngIf=\"!txtOldPwdRef.valid && txtOldPwdRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"txtOldPwdRef.errors.required\">\n                                                                 L'ancien mot de passe est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"row\">\n\n                                                <div class=\"col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"txtNewPwd\">Nouveau mot de passe</label>\n                                                        <div class=\"input-group form-password-toggle input-group-merge\">\n\n                                                            <input [type]=\"passwordTextTypeNew ? 'text' : 'password'\"\n                                                                   name=\"txtNewPwd\"\n                                                                   class=\"form-control\"\n                                                                   [class.error]=\"txtNewPwdRef.invalid && txtNewPwdRef.touched\"\n                                                                   placeholder=\"Nouveau mot de passe\"\n                                                                   ngModel\n                                                                   #txtNewPwdRef=\"ngModel\"\n                                                                   required\n                                                                   minlength=\"6\"\n                                                                   pattern=\"(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{6,}\"\n                                                                   id=\"txtNewPwd\"/>\n\n                                                            <div class=\"input-group-append\">\n                                                                 <span class=\"input-group-text cursor-pointer\">\n                                                                     <i class=\"feather font-small-4\"\n                                                                        [ngClass]=\"{'icon-eye-off': passwordTextTypeNew,\n                                                                                        'icon-eye': !passwordTextTypeNew }\"\n                                                                        (click)=\"togglePasswordTextTypeNew()\">\n\n                                                                     </i>\n                                                                 </span>\n                                                            </div>\n\n                                                        </div>\n\n                                                        <div *ngIf=\"txtNewPwdRef.invalid && txtNewPwdRef.touched\"\n                                                             class=\"form-text text-danger\">\n                                                            <small *ngIf=\"txtNewPwdRef.errors.required\">\n                                                                Mot de passe obligatoire. </small>\n                                                            <small *ngIf=\"txtNewPwdRef.errors.pattern\">\n                                                                Doit contenir au moins un chiffre et une lettre majuscule et minuscule,\n                                                                et au moins 6 caractères ou plus.\n                                                            </small>\n                                                        </div>\n\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-sm-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"txtConfPwd\">Re-taper le nouveau mot de passe</label>\n                                                        <div class=\"input-group form-password-toggle input-group-merge\">\n\n                                                            <input  [type]=\"passwordTextTypeNew ? 'text' : 'password'\"\n                                                                    class=\"form-control\"\n                                                                    [class.error]=\"txtConfPwdRef.invalid && txtConfPwdRef.touched\"\n                                                                    placeholder=\"Re-taper le nouveau mot de passe\"\n                                                                    minlength=\"6\"\n                                                                    name=\"txtConfPwd\"\n                                                                    required\n                                                                    ngModel\n                                                                    #txtConfPwdRef=\"ngModel\"\n                                                                    pattern=\"{{ txtNewPwdRef.value }}\"\n                                                                    id=\"txtConfPwd\"/>\n\n                                                            <div class=\"input-group-append\">\n                                                                 <span class=\"input-group-text cursor-pointer\">\n                                                                     <i class=\"feather font-small-4\"\n                                                                        [ngClass]=\"{'icon-eye-off': passwordTextTypeNew,\n                                                                                        'icon-eye': !passwordTextTypeNew }\"\n                                                                        (click)=\"togglePasswordTextTypeNew()\">\n\n                                                                     </i>\n                                                                 </span>\n                                                            </div>\n\n                                                        </div>\n                                                        <div\n                                                                *ngIf=\"txtConfPwdRef.invalid && txtConfPwdRef.touched\"\n                                                                class=\"form-text text-danger\">\n                                                            <small *ngIf=\"txtConfPwdRef.errors.required\">\n                                                                Vous devez Confirmer le mot de passe.\n                                                            </small>\n                                                            <small *ngIf=\"txtConfPwdRef.errors.pattern\">\n                                                                Le mot de passe\n                                                                et la confirmation du mot de passe ne correspondent pas.\n                                                            </small>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n\n\n                                            <button type=\"submit\"\n                                                    [disabled]=\"!TDPassWordForm.form.valid\"\n                                                    [ngClass]=\"{'btn mr-1 mt-1' :true,'btn-primary':TDPassWordForm.form.valid,'btn-secondary':!TDPassWordForm.form.valid}\"\n                                                    (click)=\"updatePwd(TDPassWordForm)\"\n                                                    rippleEffect>\n                                                Enregistrer\n                                            </button>\n\n                                            <button type=\"reset\" class=\"btn btn-outline-secondary mt-1\"\n                                                    [routerLink]=\"['']\" rippleEffect>\n                                                Fermer\n                                            </button>\n\n                                        </form>\n\n\n                                        <!--/ form -->\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </li>\n\n\n                    </ul>\n\n                </div>\n                <div [ngbNavOutlet]=\"navVertical\" class=\"col-12 col-md-9\"></div>\n            </div>\n        </section>\n        <!--/ account setting page -->\n    </div>\n</div>\n\n<!-- Modal new City -->\n<ng-template #modalNewRole let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title text-bold text-primary\"\n            id=\"idmodalNewCity\">\n            Ajouter un role utilisateur\n        </h4>\n\n    </div>\n    <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n        <h5 class=\"text-bold text-success\">\n            Intitule du Role :\n        </h5>\n        <form #newRoleForm=\"ngForm\" (ngSubmit)=\"(newRoleForm.form.valid)\">\n            <div class=\"form-group\">\n\n                <input id=\"roleName\"\n                       [(ngModel)]=\"roleName\"\n                       #txtRoleName=\"ngModel\"\n                       required\n                       name=\"roleName\"\n                       class=\"form-control\"\n                       [class.error]=\"!txtRoleName.valid && newRoleForm.submitted\">\n\n                <span *ngIf=\"newRoleForm.submitted && newRoleForm.errors\"\n                      class=\"invalid-form\">\n                        <small class=\"form-text text-danger\"\n                               *ngIf=\"(newRoleForm.errors && newRoleForm.errors.required )\">\n                                Le nom du role est obligatoire!\n                        </small>\n                </span>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n\n        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                (click)=\"modal.dismiss('Cross click')\" rippleEffect>\n            Annuler\n        </button>\n\n        <button type=\"submit\" [disabled]=\"!roleName\"\n                class=\"btn {{roleName ? 'btn-success' : 'btn-secondary'}}\"\n                (click)=\"onSaveNewRole(modal)\" rippleEffect>\n            Enregistrer\n        </button>\n\n    </div>\n</ng-template>\n<!--  / Modal -->\n\n\n\n","import {Injectable} from '@angular/core';\nimport {UpdateInfosUserDTO} from \"../../../authentication/models/update-infos-userDTO\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {UpdatePwdUserRequestDTO} from \"../../../authentication/models/update-pwd-user-requestDTO\";\nimport {SrManagerService} from \"../../sr-manager.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AccountSettingsService {\n\n  constructor(private srManagerService: SrManagerService) { }\n\n\n  updateInfoUser(updateInfoUserDto: UpdateInfosUserDTO) {\n    return this.srManagerService.postRessource(environment.authCmdHost+'/updateInfosUser',updateInfoUserDto);\n  }\n\n\n  updatePwdUser(updatePwdUserRequestDTO: UpdatePwdUserRequestDTO) {\n    return this.srManagerService.postRessource(environment.authCmdHost+'/updatePwdUser',updatePwdUserRequestDTO);\n  }\n}\n","import {HttpClient} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, RouterStateSnapshot} from '@angular/router';\n\nimport {BehaviorSubject, Observable} from 'rxjs';\nimport {SrManagerService} from \"../sr-manager.service\";\nimport {environment} from \"../../../../environments/environment\";\nimport {AppRole} from \"../../authentication/models/app-role\";\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RoleListService {\n    rows: any;\n    onSettingsChanged: BehaviorSubject<any>;\n    onRolessChanged: BehaviorSubject<any>;\n    private appRoles: AppRole[];\n\n    /**\n     * Constructor\n     *\n     * @param {HttpClient} _httpClient\n     */\n    constructor(private srManagerService: SrManagerService) {\n        // Set the defaults\n        this.onSettingsChanged = new BehaviorSubject({});\n        this.onRolessChanged = new BehaviorSubject({});\n    }\n\n    /**\n     * Resolver\n     *\n     * @param {ActivatedRouteSnapshot} route\n     * @param {RouterStateSnapshot} state\n     * @returns {Observable<any> | Promise<any> | any}\n     */\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n        return new Promise<void>((resolve, reject) => {\n            Promise.all([this.getAppRoles()]).then(() => {\n                resolve();\n            }, reject);\n        });\n    }\n\n    /**\n     * Get rows\n     */\n    /*getDataTableRows(): Promise<any[]> {\n        return new Promise((resolve, reject) => {\n            this._httpClient.get('api/account-settings-data').subscribe((response: any) => {\n                this.rows = response;\n                this.onSettingsChanged.next(this.rows);\n                resolve(this.rows);\n            }, reject);\n        });\n    }*/\n\n    getAppRoles(): Promise<any[]> {\n        return new Promise((resolve, reject) => {\n            this.srManagerService.getResources(environment.authQueryHost + '/appRoles').subscribe((response: any) => {\n                this.appRoles = response;\n                this.onRolessChanged.next(this.appRoles);\n                resolve(this.appRoles);\n            }, reject);\n        });\n    }\n\n    createRole(appRole: AppRole) {\n        return this.srManagerService.postRessource(environment.authCmdHost+'/createRole',appRole);\n\n    }\n\n}\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {Subject, Subscription} from \"rxjs\";\nimport {AppUser} from \"../../../authentication/models/app-user\";\nimport {AppRole} from \"../../../authentication/models/app-role\";\nimport {RoleListService} from \"../role-list.service\";\nimport {Router} from \"@angular/router\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {AuthService} from \"../../../authentication/auth.service\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {TypeRole} from \"../../../authentication/models/type-role\";\nimport {Param} from \"../../../parametres/models/param\";\nimport Swal from \"sweetalert2\";\nimport {CreateUserDTO} from \"../../../authentication/models/create-userDTO\";\nimport {UserAddService} from \"./user-add.service\";\n\n@Component({\n  selector: 'app-user-add',\n  templateUrl: './user-add.component.html',\n  styleUrls: ['./user-add.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class UserAddComponent implements OnInit {\n// public\n  public contentHeader: object;\n\n\n  // private\n  private _unsubscribeAll: Subject<any>;\n  private currentUserSubscription: Subscription;\n  public accountUser: AppUser;\n  public userCreated: AppUser;\n  public roles: AppRole[];\n  //public rolesSelected: AppRole[] = [];\n\n  public avatarImage: string='assets/images/portrait/small/unknown.png';\n\n  roleName: string;\n  disableUploadImage: boolean = true;\n\n\n  /**\n   * Constructor\n   *\n   * @param _accountSettingsService\n   * @param _roleListService\n   * @param userEditService\n   * @param _router\n   * @param modalService\n   * @param authService\n   */\n  constructor(private _roleListService: RoleListService,\n              private userAddService: UserAddService,\n              private _router: Router,\n              private modalService: NgbModal,\n              private authService: AuthService) {\n    this._unsubscribeAll = new Subject();\n    this.userCreated=new AppUser();\n\n    this.currentUserSubscription = this.authService.currentUserSubject.subscribe(\n        (data: AppUser) => {\n          this.accountUser = data;\n        }\n    );\n    authService.loadCurrentUser();\n  }\n\n\n  /**\n   * On init\n   */\n  ngOnInit() {\n\n    this._roleListService.onRolessChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n      this.roles = response;\n    });\n\n\n\n    // content header\n    this.contentHeader = {\n      headerTitle: 'Paramètres du compte utilisateur',\n      actionButton: false,\n      breadcrumb: {\n        type: '',\n        links: [\n          {\n            name: 'Home',\n            isLink: true,\n            link: '/'\n          },\n\n          {\n            name: 'Paramètres du compte',\n            isLink: false\n          }\n        ]\n      }\n    };\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n\n  /**\n   * Upload Image\n   *\n   * @param event\n   */\n  uploadImage(event: any) {\n\n    if (event.target.files && event.target.files[0]) {\n\n      console.log(event.target.files[0])\n\n      let reader = new FileReader();\n\n\n      reader.onload = (event: any) => {\n        this.avatarImage = event.target.result;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n\n\n  onAddRole(modal: any) {\n    this.roleName = \"\";\n    this.modalService.open(modal, {\n      centered: true,\n      backdrop: false,\n      size: 'sm'\n    });\n  }\n\n  onSaveNewRole(modal: any) {\n    let appRole: AppRole = new AppRole(this.roleName,TypeRole.ADMINISTARTION);\n\n    this._roleListService.createRole(appRole).subscribe(\n        (data: Param) => {\n          this._roleListService.getAppRoles();\n          modal.close('Accept click');\n\n        }\n    );\n\n  }\n\n  createUser() {\n    let roles:string[]=[];\n    this.userCreated.appRoles.forEach(appRole => {\n      roles.push(appRole.roleName)\n    })\n    /*\n    username: string,\n                password: string,\n                firstName: string,\n                lastName: string,\n                email: string,\n                avatar: string,\n                roles: string[]\n     */\n    let createUserDTO:CreateUserDTO=new CreateUserDTO(\n        this.userCreated.username,\n        this.userCreated.username+'@srmanager',\n        this.userCreated.firstName,\n        this.userCreated.lastName,\n        this.userCreated.email,\n        'unknown.png',\n        roles,\n    );\n\n    this.userAddService.createUser(createUserDTO).subscribe(\n        (data: Param) => {\n          this.showSwal('basic','success','Good job!','Utilisateur crée avec succés','btn btn-primary');\n        }\n    );\n  }\n\n\n  showSwal(type, icone,title:string,message: string,btn) {\n    Swal.fire({\n      icon: icone,\n      title: title,\n      titleText: message,\n      customClass: {\n        confirmButton: btn,\n      }\n    });\n  }\n\n}\n","<div class=\"content-wrapper p-0\">\n    <div class=\"content-body\">\n        <!-- content-header component -->\n        <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n        <!-- account setting page -->\n        <section id=\"page-account-settings\">\n            <div class=\"row nav-vertical nav-vertical-over d-flex\">\n                <div class=\"col-md-3 mb-2 mb-md-0\">\n\n                    <ul ngbNav #navVertical=\"ngbNav\" class=\"nav nav-pills flex-column nav-left\">\n\n                        <li class=\"nav-item\" ngbNavItem>\n                            <a ngbNavLink class=\"nav-link d-flex py-75\"\n                               id=\"account-pill-general\"\n                               data-toggle=\"pill\"\n                               href=\"#account-vertical-general\"\n                               aria-expanded=\"true\">\n                                <i data-feather=\"user\" class=\"font-medium-3 mr-1\"></i>\n                                <span class=\"font-weight-bold\">Général</span>\n                            </a>\n                            <ng-template ngbNavContent>\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <!-- header media -->\n                                        <div class=\"media\">\n                                            <a href=\"javascript:void(0);\" class=\"mr-25\">\n                                                <img [src]=\"avatarImage\" class=\"rounded mr-50\" alt=\"profile image\"\n                                                     height=\"76\" width=\"80\"/>\n                                            </a>\n                                            <!-- upload and reset button -->\n\n                                            <div class=\"media-body mt-75 ml-1\">\n                                                <button [disabled]=\"disableUploadImage\"\n                                                        (click)=\"file.click()\"\n                                                        for=\"account-upload\"\n                                                        [ngClass]=\"{'btn btn-sm mb-75 mr-75' :true,\n                                                        'btn-primary':!disableUploadImage,\n                                                        'btn-secondary':disableUploadImage}\"\n\n                                                        class=\"btn btn-sm btn-primary mb-75 mr-75\"\n                                                        rippleEffect>\n                                                    Upload\n                                                </button>\n                                                <input type=\"file\" #file\n                                                       id=\"account-upload\"\n                                                       hidden\n                                                       accept=\"image/*\"\n                                                       (change)=\"uploadImage($event)\"/>\n                                                <button disabled\n                                                        class=\"btn btn-sm btn-outline-secondary mb-75\" rippleEffect>\n                                                    Reset\n                                                </button>\n                                                <p>Images: JPG, GIF or PNG. Taille max 800kB</p>\n                                            </div>\n\n                                            <!--/ upload and reset button -->\n                                        </div>\n                                        <!--/ header media -->\n\n                                        <!-- form -->\n\n                                        <form class=\"form-horizontal\" (ngSubmit)=\"(TDInfoGeneraleForm.form.valid)\" #TDInfoGeneraleForm=\"ngForm\">\n\n                                            <div class=\"row\">\n\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDFirstName\">Prénom</label>\n                                                        <input class=\"form-control input-md\"\n                                                               [class.error]=\"!TDFirstNameRef.valid && TDFirstNameRef.touched\"\n                                                               [(ngModel)]=\"userCreated.firstName\"\n                                                               #TDFirstNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDFirstName\"\n                                                               name=\"TDFirstName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Prénom\"/>\n\n                                                        <span *ngIf=\"!TDFirstNameRef.valid && TDFirstNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDFirstNameRef.errors.required\">\n                                                                 Le Prénom est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDLastName\">Nom</label>\n                                                        <input class=\"form-control input-md\"\n                                                               [class.error]=\"!TDLastNameRef.valid && TDLastNameRef.touched\"\n                                                               [(ngModel)]=\"userCreated.lastName\"\n                                                               #TDLastNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDLastName\"\n                                                               name=\"TDLastName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Prénom\"/>\n\n                                                        <span *ngIf=\"!TDLastNameRef.valid && TDLastNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDLastNameRef.errors.required\">\n                                                                 Le Nom est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDUserName\">Nom d'utilisateur</label>\n                                                        <input  class=\"form-control input-md\"\n                                                               [class.error]=\"!TDUserNameRef.valid && TDUserNameRef.touched\"\n                                                               [(ngModel)]=\"userCreated.username\"\n                                                               #TDUserNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDUserName\"\n                                                               name=\"TDUserName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Nom D'utilisateur\"/>\n\n                                                        <span *ngIf=\"!TDUserNameRef.valid && TDUserNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDUserNameRef.errors.required\">\n                                                                 Le Nom d'utilisateur est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n                                                        <input\n                                                                class=\"form-control input-md\"\n                                                                [class.error]=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\"\n                                                                [(ngModel)]=\"userCreated.email\"\n                                                                #TDMultiRuleEmailRef=\"ngModel\"\n                                                                required\n                                                                email\n                                                                id=\"TDMultiRuleEmail\"\n                                                                name=\"TDMultiRuleEmail\"\n                                                                type=\"text\"\n                                                                placeholder=\"Votre Email\"/>\n                                                        <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n                                                            <small class=\"form-text text-danger\">\n                                                               L'Email doit etre valide!\n                                                            </small>\n                                                        </span>\n                                                    </div>\n                                                </div>\n\n                                                <div *ngIf=\"!authService.isAdmin(userCreated)\" class=\"col-sm-6 col-md-6\" >\n                                                    <fieldset class=\"form-group\">\n                                                        <label>LES ROLES</label>\n                                                        <ng-select\n                                                            #TDSubContractorRef=\"ngModel\"\n                                                            [items]=\"roles\"\n                                                            [multiple]=\"true\"\n                                                            [closeOnSelect]=\"true\"\n                                                            [searchable]=\"true\"\n                                                            bindLabel=\"roleName\"\n                                                            placeholder=\"Séléctionner au moins un Roles\"\n                                                            [(ngModel)]=\"userCreated.appRoles\"\n                                                            [ngModelOptions]=\"{standalone: true}\" #select\n                                                            [class.error]=\"userCreated.appRoles && userCreated.appRoles.length==0 && TDInfoGeneraleForm.submitted\">\n\n                                                            <ng-template ng-header-tmp>\n                                                                <button class=\"add-new-customer btn btn-flat-success cursor-pointer rounded-0 text-left p-50 w-100\"\n                                                                        (click)=\"onAddRole(modalNewRole); select.blur(); select.close()\">\n                                                                    <i data-feather=\"plus\"></i>\n                                                                    <span class=\"align-middle ml-25\">Ajouter un Role</span>\n                                                                </button>\n                                                            </ng-template>\n\n                                                        </ng-select>\n\n                                                        <span *ngIf=\"TDInfoGeneraleForm.submitted && userCreated.appRoles && userCreated.appRoles.length==0\"\n                                                              class=\"invalid-form\">\n                                                            <small class=\"form-text text-danger\"\n                                                                   *ngIf=\"userCreated.appRoles && userCreated.appRoles.length==0\">\n                                                                Vous devez choisir au moins un role!\n                                                            </small>\n                                                        </span>\n\n\n                                                    </fieldset>\n\n                                                </div>\n\n                                            </div>\n\n                                            <button type=\"submit\"\n                                                    [disabled]=\"!TDInfoGeneraleForm.form.valid\"\n                                                    [ngClass]=\"{'btn mr-1 mt-1' :true,'btn-primary':TDInfoGeneraleForm.form.valid,'btn-secondary':!TDInfoGeneraleForm.form.valid}\"\n                                                    (click)=\"createUser()\"\n                                                    rippleEffect>\n                                                Enregistrer\n                                            </button>\n\n                                            <button type=\"reset\" class=\"btn btn-outline-secondary  mr-1 mt-1\" rippleEffect\n                                                    [routerLink]=\"['/projets/users/list']\">\n                                                Fermer\n                                            </button>\n\n\n                                        </form>\n\n                                        <!--/ form -->\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </li>\n\n\n                    </ul>\n\n                </div>\n                <div [ngbNavOutlet]=\"navVertical\" class=\"col-12 col-md-9\"></div>\n            </div>\n        </section>\n        <!--/ account setting page -->\n    </div>\n</div>\n\n<!-- Modal new City -->\n<ng-template #modalNewRole let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title text-bold text-primary\"\n            id=\"idmodalNewCity\">\n            Ajouter un role utilisateur\n        </h4>\n\n    </div>\n    <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n        <h5 class=\"text-bold text-success\">\n            Intitule du Role :\n        </h5>\n        <form #newRoleForm=\"ngForm\" (ngSubmit)=\"(newRoleForm.form.valid)\">\n            <div class=\"form-group\">\n\n                <input id=\"roleName\"\n                       [(ngModel)]=\"roleName\"\n                       #txtRoleName=\"ngModel\"\n                       required\n                       name=\"roleName\"\n                       class=\"form-control\"\n                       [class.error]=\"!txtRoleName.valid && newRoleForm.submitted\">\n\n                <span *ngIf=\"newRoleForm.submitted && newRoleForm.errors\"\n                      class=\"invalid-form\">\n                        <small class=\"form-text text-danger\"\n                               *ngIf=\"(newRoleForm.errors && newRoleForm.errors.required )\">\n                                Le nom du role est obligatoire!\n                        </small>\n                </span>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n\n        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                (click)=\"modal.dismiss('Cross click')\" rippleEffect>\n            Annuler\n        </button>\n\n        <button type=\"submit\" [disabled]=\"!roleName\"\n                class=\"btn {{roleName ? 'btn-success' : 'btn-secondary'}}\"\n                (click)=\"onSaveNewRole(modal)\" rippleEffect>\n            Enregistrer\n        </button>\n\n    </div>\n</ng-template>\n<!--  / Modal -->\n\n\n\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject} from \"rxjs\";\nimport {CreateUserDTO} from \"../../../authentication/models/create-userDTO\";\nimport {environment} from \"../../../../../environments/environment\";\nimport {SrManagerService} from \"../../sr-manager.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserAddService {\n  onUserChanged: BehaviorSubject<any>;\n\n  constructor(private srManagerService:SrManagerService) {\n    this.onUserChanged = new BehaviorSubject({});\n\n  }\n\n  createUser(createUserDTO: CreateUserDTO) {\n    return this.srManagerService.postRessource(environment.authCmdHost+'/createUser',createUserDTO);\n  }\n\n}\n","import {Component, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\n\nimport {Subject, Subscription} from 'rxjs';\nimport {FlatpickrOptions} from 'ng2-flatpickr';\n\nimport {RoleListService} from 'app/main/projets/users/role-list.service';\nimport {AuthService} from \"../../../authentication/auth.service\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {AppRole} from \"../../../authentication/models/app-role\";\nimport {NgForm} from \"@angular/forms\";\nimport {Param} from \"../../../parametres/models/param\";\nimport {NgbModal} from \"@ng-bootstrap/ng-bootstrap\";\nimport {FileUploader} from \"ng2-file-upload\";\nimport {UpdateInfosUserDTO} from \"../../../authentication/models/update-infos-userDTO\";\nimport {UpdatePwdUserRequestDTO} from \"../../../authentication/models/update-pwd-user-requestDTO\";\nimport Swal from \"sweetalert2\";\nimport {AppUser} from \"../../../authentication/models/app-user\";\nimport {TypeRole} from \"../../../authentication/models/type-role\";\nimport {AccountSettingsService} from \"../account-settings/account-settings.service\";\nimport {UserEditService} from \"./user-edit.service\";\nimport {SrLog} from \"../models/SrLog\";\nimport {ColumnMode, DatatableComponent} from \"@swimlane/ngx-datatable\";\nimport {SrResponseMessage} from \"../../models/SrResponseMessage\";\n\nconst URL = 'Users/Mac/Downloads/';\n\n@Component({\n    selector: 'app-user-edit',\n    templateUrl: './user-edit.component.html',\n    styleUrls: ['./user-edit.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UserEditComponent implements OnInit, OnDestroy {\n\n    // public\n    public contentHeader: any;\n    public uploader: FileUploader = new FileUploader({\n        url: URL,\n        isHTML5: true\n    });\n\n    public birthDateOptions: FlatpickrOptions = {\n        altInput: true\n    };\n    public passwordTextTypeOld = false;\n    public passwordTextTypeNew = false;\n    public passwordTextTypeRetype = false;\n    public avatarImage: string;\n\n    // private\n    private _unsubscribeAll: Subject<any>;\n    public accountUser: AppUser;\n    public userEditter: AppUser;\n    public roles: AppRole[];\n    public srLogs: SrLog[];\n    public currentUserSubscription:Subscription;\n    //public rolesSelected: AppRole[] = [];\n\n    /**\n     * Constructor\n     *\n     * @param _accountSettingsService\n     * @param _roleListService\n     * @param userEditService\n     * @param _router\n     * @param modalService\n     * @param authService\n     */\n    constructor(private _accountSettingsService: AccountSettingsService,\n                private _roleListService: RoleListService,\n                private userEditService: UserEditService,\n                private modalService: NgbModal,\n                public authService: AuthService) {\n        this._unsubscribeAll = new Subject();\n\n        this.currentUserSubscription = this.authService.currentUserSubject.subscribe(\n            (data: AppUser) => {\n                this.accountUser = data;\n                /* this.accountUser?.roles.forEach(role => {\n                     let appRole: AppRole = new AppRole(role,null);\n                     this.rolesSelected?.push(appRole)\n                 })*/\n            }\n        );\n        authService.loadCurrentUser();\n    }\n\n    // Public Methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * Toggle Password Text Type Old\n     */\n    togglePasswordTextTypeOld() {\n        this.passwordTextTypeOld = !this.passwordTextTypeOld;\n    }\n\n    /**\n     * Toggle Password Text Type New\n     */\n    togglePasswordTextTypeNew() {\n        this.passwordTextTypeNew = !this.passwordTextTypeNew;\n    }\n\n    /**\n     * Toggle Password Text Type Retype\n     */\n    togglePasswordTextTypeRetype() {\n        this.passwordTextTypeRetype = !this.passwordTextTypeRetype;\n    }\n\n    /**\n     * Upload Image\n     *\n     * @param event\n     */\n    uploadImage(event: any) {\n\n        if (event.target.files && event.target.files[0]) {\n\n            console.log(event.target.files[0])\n\n            let reader = new FileReader();\n\n\n            reader.onload = (event: any) => {\n                this.avatarImage = event.target.result;\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        }\n    }\n\n    // Lifecycle Hooks\n    // -----------------------------------------------------------------------------------------------------\n\n\n    /**\n     * On init\n     */\n    ngOnInit() {\n\n       /* this.logListService.onLogListChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(\n            response => {\n                this.srLogs = response;\n                this.tempData = response;\n\n            });\n*/\n        this._roleListService.onRolessChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n            this.roles = response;\n        });\n        this.userEditService.onUserChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(response => {\n            this.userEditter = response;\n            this.avatarImage = 'assets/images/portrait/small/' + this.userEditter?.avatar;\n\n        });\n\n        // content header\n        this.contentHeader = {\n            headerTitle: 'Paramètres du compte utilisateur',\n            actionButton: false,\n            breadcrumb: {\n                type: '',\n                links: [\n                    {\n                        name: 'Home',\n                        isLink: true,\n                        link: '/'\n                    },\n\n                    {\n                        name: 'Paramètres du compte',\n                        isLink: false\n                    }\n                ]\n            }\n        };\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    roleName: string;\n    disableUploadImage: boolean = true;\n    public selectedOption = 10;\n    public searchValue = '';\n    private tempData = [];\n    public ColumnMode = ColumnMode;\n\n    // Decorator\n    @ViewChild(DatatableComponent) table: DatatableComponent;\n\n    /**\n     * filterUpdate\n     *\n     * @param event\n     */\n    filterUpdate(event) {\n\n        const val = event.target.value.toLowerCase();\n\n        // Filter Our Data\n        const temp = this.tempData.filter(function (d) {\n            return d.firstName?.toLowerCase().indexOf(val) !== -1\n                || d.lastName?.toLowerCase().indexOf(val) !== -1 || !val\n                || d.fullName?.toLowerCase().indexOf(val) !== -1 || !val;\n        });\n\n        // Update The Rows\n        this.srLogs = temp;\n        // Whenever The Filter Changes, Always Go Back To The First Page\n        this.table.offset = 0;\n    }\n\n    onAddRole(modal: any) {\n        this.roleName = \"\";\n        this.modalService.open(modal, {\n            centered: true,\n            backdrop: false,\n            size: 'sm'\n        });\n    }\n\n    onSaveNewRole(modal: any) {\n        let appRole: AppRole = new AppRole(this.roleName, TypeRole.ADMINISTARTION);\n\n        this._roleListService.createRole(appRole).subscribe(\n            (data: Param) => {\n                this._roleListService.getAppRoles();\n                modal.close('Accept click');\n\n            }\n        );\n\n    }\n\n    updateInfosGenerales() {\n        let roles: string[] = [];\n        this.userEditter.appRoles.forEach(appRole => {\n            roles.push(appRole.roleName)\n        })\n        let updateInfoUserDto: UpdateInfosUserDTO = new UpdateInfosUserDTO(\n            this.userEditter.username,\n            this.userEditter.avatar,\n            this.userEditter.firstName,\n            this.userEditter.lastName,\n            this.userEditter.email,\n            roles,\n            this.userEditter.accountNonLocked,\n            this.userEditter.accountNonExpired,\n            this.userEditter.credentialsNonExpired\n        );\n\n        this._accountSettingsService.updateInfoUser(updateInfoUserDto).subscribe(\n            (data: Param) => {\n                this.showSwal('basic', 'success', 'Good job!', 'Infos utilisateur modifiées avec succés', 'btn btn-primary');\n            }\n        );\n    }\n\n\n    updatePwd(tDPassWordForm: NgForm) {\n        console.log(tDPassWordForm.value)\n        let updatePwdUserRequestDTO: UpdatePwdUserRequestDTO = new UpdatePwdUserRequestDTO(\n            this.userEditter.username,\n            tDPassWordForm.value.txtOldPwd,\n            tDPassWordForm.value.txtNewPwd,\n        );\n\n        this._accountSettingsService.updatePwdUser(updatePwdUserRequestDTO).subscribe(\n            data => {\n                if (data['result']) {\n                    this.showSwal('basic', 'success', 'Good job!', data['message'], 'btn btn-primary');\n                    this.authService.logout();\n                } else {\n                    this.showSwal('basic', 'error', 'Erreur!', data['message'], 'btn btn-danger');\n                }\n                //this._router.navigate(['/pages/authentication/login-v2']);\n            }\n        );\n    }\n\n    showSwal(type, icone, title: string, message: string, btn) {\n        Swal.fire({\n            icon: icone,\n            title: title,\n            titleText: message,\n            customClass: {\n                confirmButton: btn,\n            }\n        });\n    }\n\n    onInitPwd() {\n        this.initPwd(this.userEditter.username, this.userEditService);\n    }\n\n    initPwd(username: string, userEditService: UserEditService) {\n        Swal.fire({\n            title: 'Etes-vous sûr?',\n            text: \"Vous ne pourrez pas revenir en arrière!\",\n            icon: 'warning',\n            showCancelButton: true,\n            confirmButtonColor: '#7367F0',\n            cancelButtonColor: '#E42728',\n            confirmButtonText: 'Oui, Initialiser le PWD!',\n            customClass: {\n                confirmButton: 'btn btn-primary',\n                cancelButton: 'btn btn-danger ml-1'\n            }\n        }).then(function (result) {\n            if (result.value) {\n\n               var newPwd:string;\n                userEditService.initPwd(username).subscribe(\n                    (data:SrResponseMessage) => {\n                        newPwd=data.message;\n                        console.log(\"Nouveau Mot de passe est :\" +newPwd)\n                    }\n                );\n\n                Swal.fire({\n                    icon: 'success',\n                    title: 'Mot de passe initialisé!',\n                    text: \"Veuillez consulter votre email professionnel ...@rouandi.ma\",\n                    customClass: {\n                        confirmButton: 'btn btn-success',\n                    }\n                });\n            }\n        });\n    }\n\n}\n","<div class=\"content-wrapper p-0\">\n    <div class=\"content-body\">\n        <!-- content-header component -->\n        <app-content-header [contentHeader]=\"contentHeader\"></app-content-header>\n\n        <!-- account setting page -->\n        <section id=\"page-account-settings\">\n            <div class=\"row nav-vertical nav-vertical-over d-flex\">\n                <div class=\"col-md-2 mb-2 mb-md-0\">\n\n                    <ul ngbNav #navVertical=\"ngbNav\" class=\"nav nav-pills flex-column nav-left\">\n\n                        <li class=\"nav-item\" ngbNavItem>\n                            <a ngbNavLink class=\"nav-link d-flex py-75\"\n                               id=\"account-pill-general\"\n                               data-toggle=\"pill\"\n                               href=\"#account-vertical-general\"\n                               aria-expanded=\"true\">\n                                <i data-feather=\"user\" class=\"font-medium-3 mr-1\"></i>\n                                <span class=\"font-weight-bold\">Général</span>\n                            </a>\n                            <ng-template ngbNavContent>\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <!-- header media -->\n                                        <div class=\"media\">\n                                            <a href=\"javascript:void(0);\" class=\"mr-25\">\n                                                <img [src]=\"avatarImage\" class=\"rounded mr-50\" alt=\"profile image\"\n                                                     height=\"76\" width=\"80\"/>\n                                            </a>\n                                            <!-- upload and reset button -->\n\n                                            <div class=\"media-body mt-75 ml-1\">\n                                                <button [disabled]=\"disableUploadImage\"\n                                                        (click)=\"file.click()\"\n                                                        for=\"account-upload\"\n                                                        [ngClass]=\"{'btn btn-sm mb-75 mr-75' :true,\n                                                        'btn-primary':!disableUploadImage,\n                                                        'btn-secondary':disableUploadImage}\"\n\n                                                        class=\"btn btn-sm btn-primary mb-75 mr-75\"\n                                                        rippleEffect>\n                                                    Upload\n                                                </button>\n                                                <input type=\"file\"\n                                                       #file\n                                                       id=\"account-upload\"\n                                                       hidden\n                                                       accept=\"image/*\"\n                                                       (change)=\"uploadImage($event)\"/>\n                                                <button disabled\n                                                        class=\"btn btn-sm btn-outline-secondary mb-75\" rippleEffect>\n                                                    Reset\n                                                </button>\n                                                <p>Images: JPG, GIF or PNG. Taille max 800kB</p>\n                                            </div>\n\n                                            <!--/ upload and reset button -->\n                                        </div>\n                                        <!--/ header media -->\n\n                                        <!-- form -->\n\n                                        <form class=\"form-horizontal\" (ngSubmit)=\"(TDInfoGeneraleForm.form.valid)\" #TDInfoGeneraleForm=\"ngForm\">\n\n                                            <div class=\"row\">\n\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDFirstName\">Prénom</label>\n                                                        <input class=\"form-control input-md\"\n                                                               [class.error]=\"!TDFirstNameRef.valid && TDFirstNameRef.touched\"\n                                                               [(ngModel)]=\"userEditter.firstName\"\n                                                               #TDFirstNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDFirstName\"\n                                                               name=\"TDFirstName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Prénom\"/>\n\n                                                        <span *ngIf=\"!TDFirstNameRef.valid && TDFirstNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDFirstNameRef.errors.required\">\n                                                                 Le Prénom est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDLastName\">Nom</label>\n                                                        <input class=\"form-control input-md\"\n                                                               [class.error]=\"!TDLastNameRef.valid && TDLastNameRef.touched\"\n                                                               [(ngModel)]=\"userEditter.lastName\"\n                                                               #TDLastNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDLastName\"\n                                                               name=\"TDLastName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Prénom\"/>\n\n                                                        <span *ngIf=\"!TDLastNameRef.valid && TDLastNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDLastNameRef.errors.required\">\n                                                                 Le Nom est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDUserName\">Nom d'utilisateur</label>\n                                                        <input disabled class=\"form-control input-md\"\n                                                               [class.error]=\"!TDUserNameRef.valid && TDUserNameRef.touched\"\n                                                               [(ngModel)]=\"userEditter.username\"\n                                                               #TDUserNameRef=\"ngModel\"\n                                                               required\n                                                               id=\"TDUserName\"\n                                                               name=\"TDUserName\"\n                                                               type=\"text\"\n                                                               placeholder=\"Nom D'utilisateur\"/>\n\n                                                        <span *ngIf=\"!TDUserNameRef.valid && TDUserNameRef.touched\"\n                                                              class=\"invalid-form\">\n                                                             <small class=\"form-text text-danger\"\n                                                                    *ngIf=\"TDUserNameRef.errors.required\">\n                                                                 Le Nom d'utilisateur est obligatoire!\n                                                             </small>\n                                                        </span>\n\n                                                    </div>\n                                                </div>\n                                                <div class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"form-control-label\" for=\"TDMultiRuleEmail\">Email</label>\n                                                        <input\n                                                                class=\"form-control input-md\"\n                                                                [class.error]=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\"\n                                                                [(ngModel)]=\"userEditter.email\"\n                                                                #TDMultiRuleEmailRef=\"ngModel\"\n                                                                required\n                                                                email\n                                                                id=\"TDMultiRuleEmail\"\n                                                                name=\"TDMultiRuleEmail\"\n                                                                type=\"text\"\n                                                                placeholder=\"Votre Email\"/>\n                                                        <span *ngIf=\"!TDMultiRuleEmailRef.valid && TDMultiRuleEmailRef.touched\" class=\"invalid-form\">\n                                                            <small class=\"form-text text-danger\">\n                                                               L'Email doit etre valide!\n                                                            </small>\n                                                        </span>\n                                                    </div>\n                                                </div>\n\n                                                <div *ngIf=\"!authService.isAdmin(userEditter)\" class=\"col-sm-6 col-md-6\" >\n                                                    <fieldset class=\"form-group\">\n                                                        <label>LES ROLES</label>\n                                                        <ng-select\n                                                            #TDSubContractorRef=\"ngModel\"\n                                                            [items]=\"roles\"\n                                                            [multiple]=\"true\"\n                                                            [closeOnSelect]=\"true\"\n                                                            [searchable]=\"true\"\n                                                            bindLabel=\"roleName\"\n                                                            placeholder=\"Séléctionner au moins un Roles\"\n                                                            [(ngModel)]=\"userEditter.appRoles\"\n                                                            [ngModelOptions]=\"{standalone: true}\" #select\n                                                            [class.error]=\"userEditter.appRoles && userEditter.appRoles.length==0 && TDInfoGeneraleForm.submitted\">\n\n                                                            <ng-template ng-header-tmp>\n                                                                <button class=\"add-new-customer btn btn-flat-success cursor-pointer rounded-0 text-left p-50 w-100\"\n                                                                        (click)=\"onAddRole(modalNewRole); select.blur(); select.close()\">\n                                                                    <i data-feather=\"plus\"></i>\n                                                                    <span class=\"align-middle ml-25\">Ajouter un Role</span>\n                                                                </button>\n                                                            </ng-template>\n\n                                                        </ng-select>\n\n                                                        <span *ngIf=\"TDInfoGeneraleForm.submitted && userEditter.appRoles && userEditter.appRoles.length==0\"\n                                                              class=\"invalid-form\">\n                                                            <small class=\"form-text text-danger\"\n                                                                   *ngIf=\"userEditter.appRoles && userEditter.appRoles.length==0\">\n                                                                Vous devez choisir au moins un role!\n                                                            </small>\n                                                        </span>\n\n\n                                                    </fieldset>\n\n                                                </div>\n                                                <div  *ngIf=\"!authService.isAdmin(userEditter)\" class=\"col-sm-6 col-md-6\">\n                                                    <div class=\"form-group\">\n                                                        <label class=\"d-block mb-1\">Options</label>\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\n                                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"email-cb\"\n                                                                   [ngModelOptions]=\"{standalone: true}\"\n                                                                   [(ngModel)]=\"userEditter.accountNonLocked\"/>\n                                                            <label class=\"custom-control-label\" for=\"email-cb\">Compte activé</label>\n                                                        </div>\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\n                                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"message\"\n                                                                   [ngModelOptions]=\"{standalone: true}\"\n                                                                   [(ngModel)]=\"userEditter.accountNonExpired\"/>\n                                                            <label class=\"custom-control-label\" for=\"message\">Compte non expiré</label>\n                                                        </div>\n                                                        <div class=\"custom-control custom-checkbox custom-control-inline\">\n                                                            <input type=\"checkbox\" class=\"custom-control-input\" id=\"phone\"\n                                                                   [ngModelOptions]=\"{standalone: true}\"\n                                                                   [(ngModel)]=\"userEditter.credentialsNonExpired\"/>\n                                                            <label class=\"custom-control-label\" for=\"phone\">Mot de passe non expiré</label>\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                            </div>\n\n                                            <button type=\"submit\"\n                                                    [disabled]=\"!TDInfoGeneraleForm.form.valid\"\n                                                    [ngClass]=\"{'btn mr-1 mt-1' :true,'btn-primary':TDInfoGeneraleForm.form.valid,'btn-secondary':!TDInfoGeneraleForm.form.valid}\"\n                                                    (click)=\"updateInfosGenerales()\"\n                                                    rippleEffect>\n                                                Enregistrer\n                                            </button>\n\n                                            <button type=\"reset\" class=\"btn btn-outline-secondary  mr-1 mt-1\" rippleEffect\n                                                    [routerLink]=\"['/projets/users/list']\">\n                                                Fermer\n                                            </button>\n                                            <button type=\"button\" class=\"btn btn-flat-danger mt-1\" rippleEffect\n                                                    (click)=\"onInitPwd()\">\n                                                Initialiser le mot de passe\n                                            </button>\n\n                                        </form>\n\n                                        <!--/ form -->\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </li>\n\n                        <li *ngIf=\"authService.isAdmin(accountUser)\" class=\"nav-item\" ngbNavItem>\n                            <a ngbNavLink class=\"nav-link d-flex py-75\"\n                               id=\"account-pill-journal\"\n                               data-toggle=\"pill\"\n                               href=\"#account-vertical-journal\"\n                               aria-expanded=\"true\">\n                                <i data-feather=\"list\" class=\"font-medium-3 mr-1\"></i>\n                                <span class=\"font-weight-bold\">Journal</span>\n                            </a>\n                            <ng-template ngbNavContent>\n                                <div class=\"card\">\n                                    <div class=\"card-body\">\n                                        <div class=\"row\">\n                                            <div class=\"col-md-6 col-12\">\n                                                <div class=\"d-flex justify-content-between align-items-center m-1\">\n                                                    <label class=\"d-flex align-items-center\">Afficher\n                                                        <select class=\"form-control mx-25\"\n                                                                [(ngModel)]=\"selectedOption\">\n                                                            <option value=\"10\">10</option>\n                                                            <option value=\"25\">25</option>\n                                                            <option value=\"50\">50</option>\n                                                            <option value=\"100\">100</option>\n                                                        </select>\n                                                        lignes</label>\n                                                </div>\n                                            </div>\n\n                                            <div class=\"col-md-6 col-12 d-flex justify-content-start justify-content-md-end\">\n                                                <div class=\"d-flex align-items-center justify-content-end pr-1 pb-1 pb-md-0\">\n                                                    <label class=\"d-flex align-items-center ml-1 ml-md-0\">\n                                                        Recherche:\n                                                        <input [(ngModel)]=\"searchValue\" name=\"searchValue\"\n                                                               type=\"search\"\n                                                               class=\"form-control ml-25\"\n                                                               (keyup)=\"filterUpdate($event)\"/>\n                                                    </label>\n\n                                                </div>\n                                            </div>\n                                        </div>\n\n\n                                        <ngx-datatable [rows]=\"srLogs\"\n                                                       [rowHeight]=\"50\" class=\"bootstrap core-bootstrap\"\n                                                       [limit]=\"selectedOption\" [columnMode]=\"ColumnMode.force\"\n                                                       [headerHeight]=\"50\" [footerHeight]=\"50\" [scrollbarH]=\"true\">\n\n\n                                            <ngx-datatable-column name=\"Date\" prop=\"dateCreation\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"Heure\" prop=\"timeCreation\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"Projet\" prop=\"projetName\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"Operation\" prop=\"event\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"Classe\" prop=\"classeName\"></ngx-datatable-column>\n                                            <ngx-datatable-column name=\"Id Object\" prop=\"objectId\"></ngx-datatable-column>\n\n                                        </ngx-datatable>\n                                    </div>\n                                </div>\n                            </ng-template>\n                        </li>\n\n\n                    </ul>\n\n                </div>\n                <div [ngbNavOutlet]=\"navVertical\" class=\"col-12 col-md-10\"></div>\n            </div>\n        </section>\n        <!--/ account setting page -->\n    </div>\n</div>\n\n<!-- Modal new City -->\n<ng-template #modalNewRole let-modal>\n    <div class=\"modal-header\">\n        <h4 class=\"modal-title text-bold text-primary\"\n            id=\"idmodalNewCity\">\n            Ajouter un role utilisateur\n        </h4>\n\n    </div>\n    <div class=\"modal-body\" tabindex=\"0\" ngbAutofocus>\n        <h5 class=\"text-bold text-success\">\n            Intitule du Role :\n        </h5>\n        <form #newRoleForm=\"ngForm\" (ngSubmit)=\"(newRoleForm.form.valid)\">\n            <div class=\"form-group\">\n\n                <input id=\"roleName\"\n                       [(ngModel)]=\"roleName\"\n                       #txtRoleName=\"ngModel\"\n                       required\n                       name=\"roleName\"\n                       class=\"form-control\"\n                       [class.error]=\"!txtRoleName.valid && newRoleForm.submitted\">\n\n                <span *ngIf=\"newRoleForm.submitted && newRoleForm.errors\"\n                      class=\"invalid-form\">\n                        <small class=\"form-text text-danger\"\n                               *ngIf=\"(newRoleForm.errors && newRoleForm.errors.required )\">\n                                Le nom du role est obligatoire!\n                        </small>\n                </span>\n            </div>\n        </form>\n    </div>\n    <div class=\"modal-footer\">\n\n        <button type=\"button\" class=\"btn btn-outline-secondary\"\n                (click)=\"modal.dismiss('Cross click')\" rippleEffect>\n            Annuler\n        </button>\n\n        <button type=\"submit\" [disabled]=\"!roleName\"\n                class=\"btn {{roleName ? 'btn-success' : 'btn-secondary'}}\"\n                (click)=\"onSaveNewRole(modal)\" rippleEffect>\n            Enregistrer\n        </button>\n\n    </div>\n</ng-template>\n<!--  / Modal -->\n\n\n\n","import {Injectable} from '@angular/core';\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {AppUser} from \"../../../authentication/models/app-user\";\nimport {SrManagerService} from \"../../sr-manager.service\";\nimport {ActivatedRouteSnapshot, RouterStateSnapshot} from \"@angular/router\";\nimport {environment} from \"../../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserEditService {\n\n  onUserChanged: BehaviorSubject<any>;\n  private appUser: AppUser[];\n  private id: string;\n\n\n  /**\n   *\n   * @param srManagerService\n   */\n  constructor(private srManagerService: SrManagerService) {\n    // Set the defaults\n    this.onUserChanged = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    this.id = (route.paramMap.get('id'));\n\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getOneUseById(this.id)]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n\n  getOneUseById(id: string): Promise<any[]> {\n    const url = environment.authQueryHost + '/getOneUseById/' + id;\n    return new Promise((resolve, reject) => {\n      this.srManagerService.getResource(url).subscribe((response: any) => {\n        this.onUserChanged.next(response);\n        resolve(response);\n      }, reject);\n    });\n  }\n\n  initPwd(username: string) {\n    return this.srManagerService.getResource(environment.authCmdHost+'/initPwd/'+username);\n  }\n}\n","import {Component, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {Subject, Subscription} from \"rxjs\";\nimport {UsersListService} from \"./users-list.service\";\nimport {CoreSidebarService} from \"../../../../../@core/components/core-sidebar/core-sidebar.service\";\nimport {CoreConfigService} from \"../../../../../@core/services/config.service\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {ColumnMode, DatatableComponent} from \"@swimlane/ngx-datatable\";\nimport {AuthService} from \"../../../authentication/auth.service\";\nimport {AppUser} from \"../../../authentication/models/app-user\";\nimport {Role} from \"../../../authentication/models/role\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n    selector: 'app-users-list',\n    templateUrl: './users-list.component.html',\n    styleUrls: ['./users-list.component.scss'],\n    encapsulation: ViewEncapsulation.None\n})\nexport class UsersListComponent implements OnInit {\n    readonly  Role=Role;\n\n\n    // Public\n    public sidebarToggleRef = false;\n    public rows:AppUser[]=[];\n    public selectedOption = 10;\n    public ColumnMode = ColumnMode;\n    public temp:AppUser[] = [];\n    public previousRoleFilter = '';\n    public previousPlanFilter = '';\n    public previousStatusFilter = '';\n\n    public selectRole: any = [\n        {name: 'All', value: ''},\n        {name: 'Admin', value: 'Admin'},\n        {name: 'Author', value: 'Author'},\n        {name: 'Editor', value: 'Editor'},\n        {name: 'Maintainer', value: 'Maintainer'},\n        {name: 'Subscriber', value: 'Subscriber'}\n    ];\n\n    public selectPlan: any = [\n        {name: 'All', value: ''},\n        {name: 'Basic', value: 'Basic'},\n        {name: 'Company', value: 'Company'},\n        {name: 'Enterprise', value: 'Enterprise'},\n        {name: 'Team', value: 'Team'}\n    ];\n\n    public selectStatus: any = [\n        {name: 'All', value: ''},\n        {name: 'Pending', value: 'Pending'},\n        {name: 'Active', value: 'Active'},\n        {name: 'Inactive', value: 'Inactive'}\n    ];\n\n    public selectedRole = [];\n    public selectedPlan = [];\n    public selectedStatus = [];\n    public searchValue = '';\n\n    // Decorator\n    @ViewChild(DatatableComponent) table: DatatableComponent;\n\n    // Private\n    private tempData = [];\n    private _unsubscribeAll: Subject<any>;\n    private currentUserSubscription: Subscription;\n    public accountUser: AppUser;\n    /**\n     * Constructor\n     *\n     * @param {CoreConfigService} _coreConfigService\n     * @param {UserListService} _userListService\n     * @param {CoreSidebarService} _coreSidebarService\n     */\n    constructor(public authService: AuthService,private router:Router,\n        private _userListService: UsersListService,\n        private _coreSidebarService: CoreSidebarService,\n        private _coreConfigService: CoreConfigService\n    ) {\n        this._unsubscribeAll = new Subject();\n        this.currentUserSubscription = this.authService.currentUserSubject.subscribe(\n            (data: AppUser) => {\n                this.accountUser = data;\n            }\n        );\n        authService.loadCurrentUser();\n    }\n\n    // Public Methods\n    // -----------------------------------------------------------------------------------------------------\n\n    /**\n     * filterUpdate\n     *\n     * @param event\n     */\n    filterUpdate(event) {\n\n        const val = event.target.value.toLowerCase();\n\n        // Filter Our Data\n        const temp = this.tempData.filter(function (d) {\n            return d.firstName?.toLowerCase().indexOf(val) !== -1\n                || d.lastName?.toLowerCase().indexOf(val) !== -1 || !val\n                || d.fullName?.toLowerCase().indexOf(val) !== -1 || !val;\n        });\n\n        // Update The Rows\n        this.rows = temp;\n        // Whenever The Filter Changes, Always Go Back To The First Page\n        this.table.offset = 0;\n    }\n\n    /**\n     * Toggle the sidebar\n     *\n     * @param name\n     */\n    toggleSidebar(name): void {\n        this._coreSidebarService.getSidebarRegistry(name).toggleOpen();\n    }\n\n    /**\n     * Filter By Roles\n     *\n     * @param event\n     */\n    filterByRole(event) {\n        const filter = event ? event.value : '';\n        this.previousRoleFilter = filter;\n        this.temp = this.filterRows(filter, this.previousPlanFilter, this.previousStatusFilter);\n        this.rows = this.temp;\n    }\n\n    /**\n     * Filter By Plan\n     *\n     * @param event\n     */\n    filterByPlan(event) {\n        const filter = event ? event.value : '';\n        this.previousPlanFilter = filter;\n        this.temp = this.filterRows(this.previousRoleFilter, filter, this.previousStatusFilter);\n        this.rows = this.temp;\n    }\n\n    /**\n     * Filter By Status\n     *\n     * @param event\n     */\n    filterByStatus(event) {\n        const filter = event ? event.value : '';\n        this.previousStatusFilter = filter;\n        this.temp = this.filterRows(this.previousRoleFilter, this.previousPlanFilter, filter);\n        this.rows = this.temp;\n    }\n\n    /**\n     * Filter Rows\n     *\n     * @param roleFilter\n     * @param planFilter\n     * @param statusFilter\n     */\n    filterRows(roleFilter, planFilter, statusFilter): any[] {\n        // Reset search on select change\n        this.searchValue = '';\n\n        roleFilter = roleFilter.toLowerCase();\n        planFilter = planFilter.toLowerCase();\n        statusFilter = statusFilter.toLowerCase();\n\n        return this.tempData.filter(row => {\n            const isPartialNameMatch = row.role.toLowerCase().indexOf(roleFilter) !== -1 || !roleFilter;\n            const isPartialGenderMatch = row.currentPlan.toLowerCase().indexOf(planFilter) !== -1 || !planFilter;\n            const isPartialStatusMatch = row.status.toLowerCase().indexOf(statusFilter) !== -1 || !statusFilter;\n            return isPartialNameMatch && isPartialGenderMatch && isPartialStatusMatch;\n        });\n    }\n\n    // Lifecycle Hooks\n    // -----------------------------------------------------------------------------------------------------\n    /**\n     * On init\n     */\n    ngOnInit(): void {\n        // Subscribe config change\n        this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n            //! If we have zoomIn route Transition then load datatable after 450ms(Transition will finish in 400ms)\n            if (config.layout.animation === 'zoomIn') {\n                setTimeout(() => {\n                    this._userListService.onAllUserListChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(\n                        response => {\n                            this.rows = response;\n                            this.tempData = this.rows;\n                            console.log(this.rows)\n                        });\n                }, 450);\n            } else {\n                this._userListService.onAllUserListChanged.pipe(takeUntil(this._unsubscribeAll)).subscribe(\n                    response => {\n                        this.rows = response;\n                        this.tempData = this.rows;\n                        console.log(this.rows)\n                    });\n            }\n        });\n    }\n\n    /**\n     * On destroy\n     */\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    onAddUser() {\n        this.router.navigate(['/projets/users/add'])\n    }\n}\n","<div class=\"content-wrapper container-xl\">\n    <div class=\"content-body\">\n        <!-- User List -->\n        <section class=\"users-list-wrapper\">\n            <!-- users filter start -->\n\n            <div *ngIf=\"false\" class=\"card\">\n                <h5 class=\"card-header\">Filtre de recherche</h5>\n                <div class=\"card-body\">\n                    <div class=\"users-list-filter\">\n                        <form>\n                            <div class=\"row\">\n                                <div class=\"col-12 col-md-4\">\n                                    <fieldset class=\"form-group\">\n                                        <ng-select\n                                                [items]=\"selectRole\"\n                                                [(ngModel)]=\"selectedRole\"\n                                                name=\"selectedRole\"\n                                                bindLabel=\"name\"\n                                                placeholder=\"Select Role\"\n                                                (change)=\"filterByRole($event)\">\n                                        </ng-select>\n                                    </fieldset>\n                                </div>\n                                <div class=\"col-12 col-md-4\">\n                                    <fieldset class=\"form-group\">\n                                        <ng-select\n                                                [items]=\"selectPlan\"\n                                                [(ngModel)]=\"selectedPlan\"\n                                                name=\"selectedPlan\"\n                                                bindLabel=\"name\"\n                                                placeholder=\"Select Plan\"\n                                                (change)=\"filterByPlan($event)\">\n                                        </ng-select>\n                                    </fieldset>\n                                </div>\n                                <div class=\"col-12 col-md-4\">\n                                    <fieldset class=\"form-group\">\n                                        <ng-select\n                                                [items]=\"selectStatus\"\n                                                [(ngModel)]=\"selectedStatus\"\n                                                name=\"selectedStatus\"\n                                                bindLabel=\"name\"\n                                                placeholder=\"Select Status\"\n                                                (change)=\"filterByStatus($event)\">\n                                        </ng-select>\n                                    </fieldset>\n                                </div>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n            <!-- users filter end -->\n\n            <div class=\"card\">\n                <div class=\"row\">\n                    <div class=\"col-md-6 col-12\">\n                        <div class=\"d-flex justify-content-between align-items-center m-1\">\n                            <label class=\"d-flex align-items-center\">Afficher\n                                <select class=\"form-control mx-25\"\n                                        [(ngModel)]=\"selectedOption\">\n                                    <option value=\"10\">10</option>\n                                    <option value=\"25\">25</option>\n                                    <option value=\"50\">50</option>\n                                    <option value=\"100\">100</option>\n                                </select>\n                                lignes</label>\n                        </div>\n                    </div>\n\n                    <div class=\"col-md-6 col-12 d-flex justify-content-start justify-content-md-end\">\n                        <div class=\"d-flex align-items-center justify-content-end pr-1 pb-1 pb-md-0\">\n                            <label class=\"d-flex align-items-center ml-1 ml-md-0\">\n                                Recherche:\n                                <input [(ngModel)]=\"searchValue\" name=\"searchValue\"\n                                    type=\"search\"\n                                    class=\"form-control ml-25\"\n                                    (keyup)=\"filterUpdate($event)\"/>\n                            </label>\n                            <button class=\"btn btn-primary ml-1\" rippleEffect\n                                    (click)=\"onAddUser()\">\n                                <i data-feather=\"plus\" class=\"d-sm-none d-inline-block mr-0 mr-sm-1\"></i>\n                                <span class=\"d-none d-sm-inline-block\">Ajouter un nouvel utilisateur</span>\n                            </button>\n                        </div>\n                    </div>\n                </div>\n\n\n                <ngx-datatable [rows]=\"rows\"\n                               [rowHeight]=\"50\"\n                               class=\"bootstrap core-bootstrap\"\n                               [limit]=\"selectedOption\"\n                               [columnMode]=\"ColumnMode.force\"\n                               [headerHeight]=\"50\"\n                               [footerHeight]=\"50\"\n                               [scrollbarH]=\"true\">\n                    <ngx-datatable-column name=\"Utilisateur\" prop=\"fullName\" [width]=\"200\">\n                        <ng-template let-row=\"row\" let-fullName=\"value\" ngx-datatable-cell-template>\n                            <div class=\"d-flex align-items-center\">\n                                <div *ngIf=\"row.avatar.length > 0; else customAvatar\">\n                                    <img class=\"rounded-circle mr-1\"\n                                            src=\"assets/images/portrait/small/{{ row.avatar }}\"\n                                            height=\"32\"\n                                            width=\"32\"\n                                            alt=\"datatable-avatar\"/>\n                                </div>\n                                <ng-template #customAvatar>\n                                    <div class=\"avatar mr-1 ml-0\"\n                                         [ngClass]=\"{ 'bg-light-success': row.status == 'active',\n                                     'bg-light-secondary': row.status == 'inactive',\n                                     'bg-light-warning': row.status == 'pending'}\">\n                                        <div class=\"avatar-content\">{{ fullName | initials }}</div>\n                                    </div>\n                                </ng-template>\n\n                                <div class=\"cell-line-height\">\n                                    <a routerLink=\"/projets/users/edit/{{ row.id }}\" class=\"font-medium-1 d-block\">\n                                        <span class=\"font-weight-bold\">{{ row.firstName }} {{ row.lastName }}</span></a>\n                                    <span class=\"text-muted font-small-2\">\n                                        @{{ row.username }}\n                                    </span>\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Email\" prop=\"email\" [width]=\"200\"></ngx-datatable-column>\n                    <ngx-datatable-column name=\"Role\" prop=\"role\" [width]=\"100\">\n                        <ng-template let-role=\"value\" ngx-datatable-cell-template>\n                            <div>\n                                <i class=\"feather font-medium-3\"\n                                   [ngClass]=\"{\n                                                'icon-layers text-danger': role==Role.ADMIN,\n                                                'icon-settings text-success': role ==Role.CAISSIER || role == Role.RESP_ST ,\n                                                'icon-check text-info': role == Role.DAF || role == Role.DGA||role == Role.RESP_METREE\n                                                                            || role == Role.CDG ||role == Role.CHEF_ZONE,\n                                                'icon-edit-2 text-warning': role == Role.COND_CH || role == Role.TECH_CH\n                                                                            || role == Role.CHEF_CH || role == Role.COMPT_CH ,\n                                                'icon-eye text-primary': role == Role.PDG}\"></i>\n                                {{ role }}\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Status\" prop=\"accountNonLocked\" [width]=\"50\">\n                        <ng-template let-accountNonLocked=\"value\" ngx-datatable-cell-template>\n                            <div class=\"badge badge-pill\"\n                                 [ngClass]=\"{\n                                              'badge-light-success': accountNonLocked == 1,\n                                              'badge-light-danger': accountNonLocked == 0}\">\n                                {{ accountNonLocked == 1?'Activé':'Desactivé' }}\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                    <ngx-datatable-column name=\"Actions\" [width]=\"40\" [sortable]=\"false\">\n                        <ng-template ngx-datatable-cell-template let-row=\"row\">\n                            <div ngbDropdown container=\"body\">\n                                <button ngbDropdownToggle type=\"button\" class=\"btn icon-btn btn-sm hide-arrow\"\n                                        rippleEffect>\n                                    <span [data-feather]=\"'more-vertical'\" [class]=\"'cursor-pointer'\"></span>\n                                </button>\n                                <div ngbDropdownMenu>\n                                    <!--<a routerLink=\"/apps/user/user-view/{{ row.id }}\" ngbDropdownItem>\n                                        <span [data-feather]=\"'file-text'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Details\n                                    </a>-->\n\n                                    <a routerLink=\"/projets/users/edit/{{ row.id }}\" ngbDropdownItem>\n                                        <span [data-feather]=\"'edit'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Edit\n                                    </a>\n\n                                  <!--  <a href=\"javascript:;\" ngbDropdownItem>\n                                        <span [data-feather]=\"'trash'\" [size]=\"16\" [class]=\"'mr-50'\"></span>\n                                        Delete\n                                    </a>-->\n                                </div>\n                            </div>\n                        </ng-template>\n                    </ngx-datatable-column>\n                </ngx-datatable>\n            </div>\n        </section>\n        <!--/ User List -->\n    </div>\n\n    <!-- New User Sidebar -->\n    <!--<core-sidebar\n            class=\"modal modal-slide-in sidebar-todo-modal fade\"\n            name=\"new-user-sidebar\"\n            overlayClass=\"modal-backdrop\">\n        <app-new-user-sidebar></app-new-user-sidebar>\n    </core-sidebar>-->\n    <!--/ New User Sidebar -->\n</div>\n","import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from \"@angular/router\";\nimport {BehaviorSubject, Observable} from \"rxjs\";\nimport {SrManagerService} from \"../../sr-manager.service\";\nimport {environment} from \"../../../../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UsersListService implements Resolve<any> {\n\n  public rows: any;\n  public onAllUserListChanged: BehaviorSubject<any>;\n  public onAllActivatedUsersChanged: BehaviorSubject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param srManagerService\n   */\n  constructor(private srManagerService: SrManagerService) {\n    // Set the defaults\n    this.onAllUserListChanged = new BehaviorSubject({});\n    this.onAllActivatedUsersChanged = new BehaviorSubject({});\n  }\n\n  /**\n   * Resolver\n   *\n   * @param {ActivatedRouteSnapshot} route\n   * @param {RouterStateSnapshot} state\n   * @returns {Observable<any> | Promise<any> | any}\n   */\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\n    return new Promise<void>((resolve, reject) => {\n      Promise.all([this.getUsers()]).then(() => {\n        resolve();\n      }, reject);\n    });\n  }\n\n  /**\n   * Get rows\n   */\n  getUsers(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      this.srManagerService.getResources(environment.authQueryHost+'/users').subscribe(\n          (response: any) => {\n            this.rows = response;\n            this.onAllUserListChanged.next(this.rows);\n            resolve(this.rows);\n          }, reject);\n    });\n  }\n\n  allActivatedUsers(): Promise<any[]> {\n    return new Promise((resolve, reject) => {\n      this.srManagerService.getResources(environment.authQueryHost+'/allActivatedUsers').subscribe(\n          (response: any) => {\n            this.rows = response;\n            this.onAllActivatedUsersChanged.next(this.rows);\n            resolve(this.rows);\n          }, reject);\n    });\n\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {UserEditComponent} from \"./user-edit/user-edit.component\";\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {NgbModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {CoreCommonModule} from \"../../../../@core/common.module\";\nimport {ContentHeaderModule} from \"../../../layout/components/content-header/content-header.module\";\nimport {Ng2FlatpickrModule} from \"ng2-flatpickr\";\nimport {NgSelectModule} from \"@ng-select/ng-select\";\nimport {BlockUIModule} from \"ng-block-ui\";\nimport {RoleListService} from \"./role-list.service\";\nimport {UserEditService} from \"./user-edit/user-edit.service\";\nimport {AccountSettingsComponent} from './account-settings/account-settings.component';\nimport {UsersListComponent} from './users-list/users-list.component';\nimport {NgxDatatableModule} from \"@swimlane/ngx-datatable\";\nimport {CoreSidebarModule} from \"../../../../@core/components\";\nimport {UsersListService} from \"./users-list/users-list.service\";\nimport {Role} from \"../../authentication/models/role\";\nimport {AuthGuard} from \"../../authentication/auth.guards\";\nimport {UserAddComponent} from './user-add/user-add.component';\n\n\nconst routes: Routes = [\n    {\n        path: 'account-settings',\n        component: AccountSettingsComponent,\n        resolve: {\n            roleListService: RoleListService,\n        },\n        data: {animation: 'account-settings'},\n        canActivate: [AuthGuard]\n\n    },\n    {\n        path: 'add',\n        component: UserAddComponent,\n        resolve: {\n            roleListService: RoleListService\n        },\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'edit/:id',\n        component: UserEditComponent,\n        resolve: {\n            roleListService: RoleListService, UserEditService\n        },\n        canActivate: [AuthGuard]\n    },\n    {\n        path: 'list',\n        component: UsersListComponent,\n        resolve: {\n            roleListService: RoleListService, UsersListService\n        },\n        data: {roles: [Role.ADMIN]},\n        canActivate: [AuthGuard]\n    }\n];\n\n\n@NgModule({\n    declarations: [UserEditComponent, AccountSettingsComponent, UsersListComponent, UserAddComponent],\n    imports: [\n        CommonModule,\n        RouterModule.forChild(routes),\n        NgbModule,\n        CoreCommonModule,\n        ContentHeaderModule,\n        Ng2FlatpickrModule,\n        NgSelectModule,\n        BlockUIModule,\n        NgxDatatableModule,\n        CoreSidebarModule\n    ]\n})\nexport class UsersModule {\n}\n"],"sourceRoot":"webpack:///"}