{"version":3,"sources":["./src/app/main/authentication/authentication.module.ts","./src/app/main/authentication/login/login.component.ts","./src/app/main/authentication/login/login.component.html"],"names":[],"mappings":"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","file":"src_app_main_authentication_authentication_module_ts.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {LoginComponent} from \"./login/login.component\";\nimport {NgbAlertModule} from \"@ng-bootstrap/ng-bootstrap\";\nimport {ReactiveFormsModule} from \"@angular/forms\";\n\n\nconst routes: Routes = [\n\n  {\n    path: 'login',\n    component: LoginComponent,\n  }\n];\n\n\n@NgModule({\n  declarations: [\n    LoginComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgbAlertModule,\n    ReactiveFormsModule,\n\n  ]\n})\nexport class AuthenticationModule { }\n","import {Component, OnInit, ViewEncapsulation} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Subject, Subscription} from \"rxjs\";\nimport {CoreConfigService} from \"../../../../@core/services/config.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {takeUntil} from \"rxjs/operators\";\nimport {AuthService} from \"../auth.service\";\nimport {CoreConfig} from \"../../../../@core/types\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n  encapsulation: ViewEncapsulation.None\n\n})\nexport class LoginComponent implements OnInit {\n//  Public\n  public coreConfig: CoreConfig;\n  public loginForm: FormGroup;\n  public loading = false;\n  public submitted = false;\n  public returnUrl: string;\n  public error = '';\n  public passwordTextType: boolean;\n  erreurStatusSubscription: Subscription;\n  erreurStatus: boolean = false;\n\n  // Private\n  private _unsubscribeAll: Subject<any>;\n\n  /**\n   * Constructor\n   *\n   * @param {CoreConfigService} _coreConfigService\n   * @param _formBuilder\n   * @param _route\n   * @param _router\n   * @param authService\n   */\n  constructor(\n      private _coreConfigService: CoreConfigService,\n      private _formBuilder: FormBuilder,\n      private _route: ActivatedRoute,\n      private _router: Router,\n      private authService: AuthService) {\n\n    // redirect to home if already logged in\n    if (this.authService.currentUser) {\n      this._router.navigate(['/']);\n    }\n\n    this._unsubscribeAll = new Subject();\n\n    // Configure the layout\n    this._coreConfigService.config = {\n      layout: {\n        navbar: {\n          hidden: true\n        },\n        menu: {\n          hidden: true\n        },\n        footer: {\n          hidden: true\n        },\n        customizer: false,\n        enableLocalStorage: false\n      }\n    };\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  /**\n   * Toggle password\n   */\n  togglePasswordTextType() {\n    this.passwordTextType = !this.passwordTextType;\n  }\n\n  onSubmit() {\n    this.submitted = true;\n\n    // stop here if form is invalid\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    // Login\n    this.loading = true;\n\n    /*this._authenticationService\n        .login(this.f.username.value, this.f.password.value)\n        .pipe(first())\n        .subscribe(\n            data => {\n              this._router.navigate([this.returnUrl]);\n\n              //this._router.navigate(['/']);\n            },\n            error => {\n              this.error = error;\n              this.loading = false;\n            }\n        );*/\n\n    if (this.loginForm.valid) {\n\n        const formValue = this.loginForm.value;\n        this.authService.signIn(formValue['username'], formValue['password']);\n\n      /*const formValue = this.loginForm.value;\n      this.authService.signIn(formValue['username'], formValue['password'])\n          .pipe(first())\n          .subscribe(\n              data => {\n                //this._router.navigate([this.returnUrl]);\n\n                this._router.navigate(['/']);\n              },\n              error => {\n                //console.log('error :'+error)\n                this.error = error;\n                this.loading = false;\n              }\n          );*/\n    }\n\n\n  }\n\n  // Lifecycle Hooks\n  // -----------------------------------------------------------------------------------------------------\n\n  /**\n   * On init\n   */\n  ngOnInit(): void {\n    this.loginForm = this._formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required]\n    });\n\n    this.erreurStatusSubscription = this.authService.erreurStatusSubject.subscribe(\n        (erreur: boolean) => {\n\n          console.log(erreur)\n          this.erreurStatus = erreur;\n          this.loading=!this.erreurStatus;\n        }\n    );\n\n    // get return url from route parameters or default to '/'\n    this.returnUrl = this._route.snapshot.queryParams['returnUrl'] || '/';\n    //console.log(this.returnUrl);\n    // Subscribe to config changes\n    this._coreConfigService.config.pipe(takeUntil(this._unsubscribeAll)).subscribe(config => {\n      this.coreConfig = config;\n    });\n  }\n\n  /**\n   * On destroy\n   */\n  ngOnDestroy(): void {\n    // Unsubscribe from all subscriptions\n    this._unsubscribeAll.next();\n    this._unsubscribeAll.complete();\n  }\n\n}\n","<div class=\"auth-wrapper auth-v2\">\n    <div class=\"auth-inner row m-0\">\n        <!-- Brand logo--><a class=\"brand-logo\" href=\"javascript:void(0);\">\n        <img src=\"{{ coreConfig.app.appLogoFullColors }}\" alt=\"brand-logo\" height=\"200\"/>\n        <!--<h1 class=\"brand-text text-primary ml-1\">\n            {{ coreConfig.app.appName }}\n        </h1>-->\n    </a>\n        <!-- /Brand logo-->\n        <!-- Left Text-->\n        <div class=\"d-none d-lg-flex col-lg-8 align-items-center p-5\">\n            <div class=\"w-80 h-50 d-lg-flex align-items-center justify-content-center px-5\">\n                <img class=\"img-fluid img-login\"\n                     [src]=\"coreConfig.layout['skin'] === 'dark'\n              ? 'assets/images/pages/login-v2-dark.svg'\n              : 'assets/images/pages/sr-bg.png'\"\n                     alt=\"Login V2\"/>\n            </div>\n        </div>\n        <!-- /Left Text-->\n        <!-- Login-->\n        <div class=\"d-flex col-lg-4 align-items-center auth-bg px-2 p-lg-5\">\n            <div class=\"col-12 col-sm-8 col-md-6 col-lg-12 px-xl-2 mx-auto\">\n                <h2 class=\"card-title font-weight-bold mb-1\">Bienvenue à {{ coreConfig.app.appName }}! 👋</h2>\n                <p class=\"card-text mb-2\">Veuillez vous connecter à votre compte </p>\n\n                <!--<ngb-alert [type]=\"'primary'\" [dismissible]=\"false\">\n                  <div class=\"alert-body font-small-2\">\n                    <p>\n                      <small class=\"mr-50\"><span class=\"font-weight-bold\">Admin:</span> admin@demo.com | admin</small>\n                    </p>\n                    <p>\n                      <small class=\"mr-50\"><span class=\"font-weight-bold\">Client:</span> client@demo.com | client</small>\n                    </p>\n                  </div>\n                  <span\n                    class=\"feather icon-help-circle auth-help-icon font-medium-3\"\n                    placement=\"left\"\n                    ngbTooltip=\"This is just for role based JWT authorization demo purpose\"\n                  ></span>\n                </ngb-alert>-->\n\n                <ngb-alert [type]=\"'danger'\" [dismissible]=\"false\" *ngIf=\"erreurStatus\">\n                    <div class=\"alert-body\">\n                        <p>Nom d'utilisateur ou mot de passe incorrecte!!</p>\n                    </div>\n                </ngb-alert>\n\n                <form class=\"auth-login-form mt-2\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                    <div class=\"form-group\">\n                        <label class=\"form-label\" for=\"username\">Nom d'utilisateur</label>\n                        <input id=\"username\"\n                               type=\"text\"\n                               formControlName=\"username\"\n                               class=\"form-control\"\n                               [ngClass]=\"{ 'is-invalid': submitted && f.username.errors }\"\n                               placeholder=\"\"\n                               aria-describedby=\"login-username\"\n                               autofocus=\"\"\n                               tabindex=\"1\"\n                        />\n                        <div *ngIf=\"submitted && f.username.errors\" class=\"invalid-feedback\">\n                            <div *ngIf=\"f.username.errors.required\">Le nom d'utilisateur est Obligatoire</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"d-flex justify-content-between\">\n                            <label for=\"password\">Mot de passe</label>\n                            <!--<a routerLink=\"/pages/authentication/forgot-password-v2\">\n                                <small>Mot de passe oublié?</small>\n                            </a>-->\n                        </div>\n                        <div class=\"input-group input-group-merge form-password-toggle\">\n                            <input [type]=\"passwordTextType ? 'text' : 'password'\"\n                                   id=\"password\"\n                                   formControlName=\"password\"\n                                   class=\"form-control form-control-merge\"\n                                   [ngClass]=\"{ 'is-invalid error': submitted && f.password.errors }\"\n                                   placeholder=\"\"\n                                   aria-describedby=\"login-password\"\n                                   tabindex=\"2\"/>\n                            <div class=\"input-group-append\">\n                                <span class=\"input-group-text cursor-pointer\">\n                                    <i class=\"feather font-small-4\"\n                                       [ngClass]=\"{'icon-eye-off': passwordTextType,'icon-eye': !passwordTextType }\"\n                                       (click)=\"togglePasswordTextType()\">\n                                    </i>\n                                </span>\n                            </div>\n                        </div>\n                        <div *ngIf=\"submitted && f.password.errors\"\n                             class=\"invalid-feedback\"\n                             [ngClass]=\"{ 'd-block': submitted && f.password.errors }\">\n                            <div *ngIf=\"f.password.errors.required\">Password obligatoire</div>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <div class=\"custom-control custom-checkbox\">\n                            <input class=\"custom-control-input\" id=\"remember-me\" type=\"checkbox\" tabindex=\"3\"/>\n                            <label class=\"custom-control-label\" for=\"remember-me\"> Se souvenir de moi sur cet appareil</label>\n                        </div>\n                    </div>\n                    <button [disabled]=\"loading\"\n                            class=\"btn btn-primary btn-block\" tabindex=\"4\" rippleEffect>\n                        <span *ngIf=\"loading\" class=\"spinner-border spinner-border-sm mr-1\"></span>\n                        Se connecter\n                    </button>\n                </form>\n                <p *ngIf=\"false\" class=\"text-center mt-2\">\n                    <span>Nouveau sur notre plateforme?</span>\n                    <a routerLink=\"/pages/authentication/register-v2\"><span>&nbsp;Créer un compte</span></a>\n                </p>\n                <!--<div class=\"divider my-2\">\n                    <div class=\"divider-text\">or</div>\n                </div>\n                <div class=\"auth-footer-btn d-flex justify-content-center\">\n                    <a class=\"btn btn-facebook\" href=\"javascript:void(0)\"><i data-feather=\"facebook\"></i></a>\n                    <a class=\"btn btn-twitter white\" href=\"javascript:void(0)\"><i data-feather=\"twitter\"></i></a>\n                    <a class=\"btn btn-google\" href=\"javascript:void(0)\"><i data-feather=\"mail\"></i></a>\n                    <a class=\"btn btn-github\" href=\"javascript:void(0)\"><i data-feather=\"github\"></i></a>\n                </div>-->\n            </div>\n        </div>\n        <!-- /Login-->\n    </div>\n</div>\n"],"sourceRoot":"webpack:///"}