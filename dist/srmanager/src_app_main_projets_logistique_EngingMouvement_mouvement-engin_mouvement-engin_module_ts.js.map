{"version":3,"sources":["./src/app/main/projets/logistique/EngingMouvement/mouvement-engin/engin-mouvement-list/engin-mouvement-list.component.ts","./src/app/main/projets/logistique/EngingMouvement/mouvement-engin/engin-mouvement-list/engin-mouvement-list.component.html","./src/app/main/projets/logistique/EngingMouvement/mouvement-engin/mouvement-engin.module.ts","./src/app/main/projets/logistique/EngingMouvement/mouvement-engin/mouvement-engin.service.ts"],"names":[],"mappings":"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","file":"src_app_main_projets_logistique_EngingMouvement_mouvement-engin_mouvement-engin_module_ts.js","sourcesContent":["import { EnginRouteDTO } from './../../dto/EnginRouteDTO';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport { takeUntil } from 'rxjs/operators';\nimport { MouvementEnginService } from './../mouvement-engin.service';\nimport { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { EnginRoute } from '../../models/EnginRoute';\nimport Swal from 'sweetalert2';\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-engin-mouvement-list',\n  templateUrl: './engin-mouvement-list.component.html',\n  styleUrls: ['./engin-mouvement-list.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class EnginMouvementListComponent implements OnInit {\n  private _unsubscribeAll: Subject<any>;\n  public ColumnMode = ColumnMode;\n  filteredRoutes: EnginRoute[] = [];\n  enginRoutes: EnginRoute[] = [];\n  filterType: string = \"\";\n  filterDate?: string;\n  filterEnginName: string = \"\";\n  selectedRow: any = null;\n\n  hours: number[] = Array.from({ length: 24 }, (_, i) => i); // 0-23\n  minutes: number[] = Array.from({ length: 60 }, (_, i) => i); // 0-59\n  seconds: number[] = Array.from({ length: 60 }, (_, i) => i); // 0-59\n  \n  selectedTime = { hours: 0, minutes: 0, seconds: 0 };\n  \n\n\n  constructor(\n    private mouvementEnginService:MouvementEnginService,\n    private toastr: ToastrService,\n\n  ) { \n    this._unsubscribeAll = new Subject();\n\n  }\n\n  ngOnInit(): void {\n    this.loadEnginRoutes();\n  }\n\n  loadEnginRoutes(): void {\n    this.mouvementEnginService.onEnginListChanged\n      .pipe(takeUntil(this._unsubscribeAll))\n      .subscribe(\n        (routes) => {\n          this.enginRoutes = Array.isArray(routes)\n            ? routes.map((route) => ({\n                ...route,\n                isEditing: false,\n              }))\n            : [];\n          this.filteredRoutes = this.enginRoutes;\n          this.filterData(this.filterType);\n        },\n        (error) => {\n          console.error(\"Error loading routes:\", error);\n        }\n      );\n\n    this.mouvementEnginService.getAllEnginRoutes();\n  }\n\n  filterData(filterType: string = \"\"): void {\n    this.filterType = filterType;\n\n    this.filteredRoutes = this.enginRoutes.filter((route) => {\n      const matchesDate = this.filterDate\n        ? new Date(route.date!).toISOString().split(\"T\")[0] === this.filterDate\n        : true;\n\n      const matcheEnginName = this.filterEnginName\n        ? route.enginGpsLocation?.name\n            ?.toLowerCase()\n            .includes(this.filterEnginName.toLowerCase())\n        : true;\n\n      // Apply filter based on type only if filterType is set\n      // const matchesType = this.filterType\n      //   ? route.vehiculeGpsLocation?.groupName === this.filterType\n      //   : true;\n\n      return matchesDate && matcheEnginName;\n    });\n  }\n\n  //update Rendement \n  updateRendement(row: any): void {\n    const formattedTime = `${this.selectedTime.hours.toString().padStart(2, '0')}:` +\n                          `${this.selectedTime.minutes.toString().padStart(2, '0')}:` +\n                          `${this.selectedTime.seconds.toString().padStart(2, '0')}`;\n    \n    Swal.fire({\n        title: \"Êtes-vous sûr?\",\n        text: \"Voulez-vous vraiment mettre à jour le rendement?\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonText: \"Oui, mettre à jour\",\n        cancelButtonText: \"Non, annuler\",\n    }).then((result) => {\n        if (result.isConfirmed) {\n            const updateDto: EnginRouteDTO = {\n                id: row.id,\n                rendement: formattedTime,\n            };\n\n            this.mouvementEnginService.updateRendement(updateDto)\n                .then(() => {\n                    this.toastr.success(\"Le rendement a été mis à jour avec succès!\", \"Succès\");\n                    Object.assign(row, updateDto); \n                    this.selectedRow = null;\n                })\n                .catch((error) => {\n                    this.toastr.error(\"Erreur lors de la mise à jour du rendement.\", \"Erreur\");\n                    console.error(error);\n                });\n        } else if (result.dismiss === Swal.DismissReason.cancel) {\n            this.toastr.info(\"La mise à jour a été annulée.\", \"Info\");\n        }\n    });\n}\ncancelEdit(): void {\n  this.selectedRow = null;\n}\neditRow(row: any): void {\n    const [hours, minutes, seconds] = row.rendement.split(':').map(Number);\n    this.selectedRow = { ...row };\n    this.selectedTime = { hours, minutes, seconds };\n}\n}\n","<div class=\"card\">\n    <h5 class=\"card-header\">Filter de Recherche</h5>\n    <div class=\"card-body\">\n        <div class=\"users-list-filter\">\n            <form>\n                <div class=\"row\">\n                    <!-- Search by Date -->\n                    <div class=\"col-12 col-md-4\">\n                        <fieldset class=\"form-group\">\n                            <input type=\"date\" class=\"form-control\" [(ngModel)]=\"filterDate\" name=\"filterDate\"\n                                placeholder=\"Rechercher Avec la date \" (change)=\"filterData()\" />\n                        </fieldset>\n                    </div>\n                    <!-- Search by Engin Name -->\n                    <div class=\"col-12 col-md-4\">\n                        <fieldset class=\"form-group\">\n                            <input type=\"text\" class=\"form-control\" [(ngModel)]=\"filterEnginName\"\n                                name=\"filterVehiculeName\" placeholder=\"Rechercher avec Nom Vehicule\"\n                                (keyup)=\"filterData()\" />\n                        </fieldset>\n                    </div>\n\n                </div>\n            </form>\n        </div>\n    </div>\n</div>\n<div class=\"card\">\n    <!-- Table displaying filtered data -->\n    <ngx-datatable [rows]=\"filteredRoutes\" [rowHeight]=\"50\" class=\"bootstrap core-bootstrap\" [limit]=\"20\"\n        [columnMode]=\"ColumnMode.force\" [headerHeight]=\"50\" [footerHeight]=\"50\" [scrollbarH]=\"true\">\n\n        <ngx-datatable-column name=\"Date\" prop=\"date\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                {{ row.date | date: 'dd/MM/yyyy' }}\n            </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Engin\" prop=\"enginGpsLocation.name\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                {{ row.enginGpsLocation?.name }}\n            </ng-template>\n        </ngx-datatable-column>\n      \n        <ngx-datatable-column name=\"Km parcouru\" prop=\"routeLength\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <strong  style=\"color: forestgreen; \">\n                {{ row.routeLength }} km\n            </strong>\n            </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Durée de conduite\" prop=\"drivesDuration\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                {{ row.drivesDuration }}\n            </ng-template>\n        </ngx-datatable-column>\n\n        <ngx-datatable-column name=\"Ralentis Moteur\" prop=\"engineIdle\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                {{ row.engineIdle }}\n            </ng-template>\n        </ngx-datatable-column>\n        \n       \n        <ngx-datatable-column name=\"Rendement\" prop=\"rendement\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                <div  *ngIf=\"selectedRow?.id === row.id; else viewMode\" class=\"d-flex align-items-center\">\n                    <select [(ngModel)]=\"selectedTime.hours\" class=\"form-control mr-1\">\n                        <option *ngFor=\"let hour of hours\" [value]=\"hour\">{{ hour }}</option>\n                    </select>\n                    \n                    <select [(ngModel)]=\"selectedTime.minutes\" class=\"form-control mr-1\">\n                        <option *ngFor=\"let minute of minutes\" [value]=\"minute\">{{ minute }}</option>\n                    </select>\n                    \n                    <select [(ngModel)]=\"selectedTime.seconds\" class=\"form-control mr-1\">\n                        <option *ngFor=\"let second of seconds\" [value]=\"second\">{{ second }}</option>\n                    </select>\n                    \n                    <div class=\"d-flex flex-column ml-2\">\n                        <i\n                            class=\"fa fa-check text-success\"\n                            style=\"cursor: pointer; font-size: 1.2rem; margin-bottom: 5px;\"\n                            (click)=\"updateRendement(row)\"\n                        ></i>\n                        <i\n                            class=\"fa fa-times text-secondary\"\n                            style=\"cursor: pointer; font-size: 1.2rem;\"\n                            (click)=\"cancelEdit()\"\n                        ></i>\n                    </div>\n                </div>\n                <ng-template #viewMode>\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                        <strong\n                            (click)=\"editRow(row)\"\n                            style=\"color: rgb(137, 48, 48); cursor: pointer;\"\n                        >\n                            {{ row.rendement }}\n                        </strong>\n                    </div>\n                </ng-template>\n            </ng-template>\n        </ngx-datatable-column>\n        <ngx-datatable-column name=\"Nombre D'heures\" prop=\"nbrH\" [width]=\"150\">\n            <ng-template let-row=\"row\" ngx-datatable-cell-template>\n                {{ row.nbrH }} H\n            </ng-template>\n        </ngx-datatable-column>\n        \n\n        <ngx-datatable-column name=\"Actions\" [width]=\"40\" [sortable]=\"false\">\n            <ng-template ngx-datatable-cell-template let-row=\"row\">\n                <div ngbDropdown container=\"body\">\n                    <button ngbDropdownToggle type=\"button\" class=\"btn icon-btn btn-sm hide-arrow\" rippleEffect>\n                        <span [data-feather]=\"'more-vertical'\" class=\"cursor-pointer\"></span>\n                    </button>\n                    <div ngbDropdownMenu>\n                        <a (click)=\"openModalsViewImputations(imputationModal, row)\" ngbDropdownItem>\n                            <span data-feather=\"edit\" class=\"mr-50\"></span> Imputation Engin\n                        </a>\n                    </div>\n                </div>\n            </ng-template>\n        </ngx-datatable-column>\n\n    </ngx-datatable>\n</div>\n\n<!--Imputation Engin-->\n<ng-template #imputationModal let-modal>\n    <div class=\"modal-dialog modal-xl\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\">Imputation Enging {{row.enginGpsLocation?.name}}</h5>\n                <button type=\"button\" class=\"btn btn-close btn-lg\" aria-label=\"Close\" (click)=\"modal.dismiss()\">\n                    <span aria-hidden=\"true\" style=\"font-size: 1.5rem;\">&times;</span>\n                </button>\n            </div>\n\n            <div class=\"modal-body\">\n                <div class=\"table-responsive\">\n                    <table class=\"table table-bordered table-hover\">\n                        <thead>\n                            <tr>\n                                <th>Affaire</th>\n                                <th>% Imputation</th>\n                                <th>Observation</th>\n                                <th>Client</th>\n                                <th>Lot</th>\n                                <th>Soustraitant</th>\n                                <th>Cost</th>\n                                <th>Action</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            <tr *ngFor=\"let imputation of imputations\">\n                                <td>{{ imputation.affaireCode }}</td>\n                                <td>{{ imputation.fillingPercentage | number:'1.2-2' }}%</td>\n                                <td>{{ imputation.observation }}</td>\n                                <td>{{ imputation.client?.name }}</td>\n                                <td>{{ imputation.lot?.name }}</td>\n                                <td>{{ imputation.subContractorFullName }}</td>\n                                <td>{{ imputation.costImputation | number:'1.2-2' }} MAD</td>\n                                <td>\n                                    <div ngbDropdown class=\"dropdown\">\n                                        <button ngbDropdownToggle class=\"btn btn-light\" type=\"button\">&#x22EE;</button>\n                                        <div ngbDropdownMenu>\n                                            <a class=\"dropdown-item\"\n                                                (click)=\"openEditImputationModal(imputation)\">Edit</a>\n                                            <a class=\"dropdown-item text-danger\"\n                                                (click)=\"removeImputation(imputation)\">Delete</a>\n                                        </div>\n                                    </div>\n                                </td>\n                            </tr>\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n\n            <div class=\"modal-footer\" style=\"background-color: #f8f9fa; border-top: 1px solid #dee2e6; padding: 1rem;\">\n                <div class=\"d-flex justify-content-between align-items-center w-100\">\n                    <button type=\"button\" class=\"btn btn-success\" (click)=\"openAddImputationModal()\">\n                        + Add Imputation\n                    </button>\n                    <div class=\"total-cost\"\n                        style=\"background-color: #e2f0d9; border-radius: 5px; padding: 10px; font-weight: bold;\">\n                        <span style=\"color: #28a745;\">Total Cost:</span>\n                        <span style=\"color: #333;\">{{ getTotalCostImputation() | number:'1.2-2' }} MAD</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</ng-template>\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { EnginMouvementListComponent } from \"./engin-mouvement-list/engin-mouvement-list.component\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { ChartsModule } from \"ng2-charts\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgSelectModule } from \"@ng-select/ng-select\";\nimport { NgxDatatableModule } from \"@swimlane/ngx-datatable\";\nimport { CoreCommonModule } from \"@core/common.module\";\nimport { NgbDropdownModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { DatePickerI18nModule } from \"app/main/forms/form-elements/date-time-picker/date-picker-i18n/date-picker-i18n.module\";\nimport { CorePipesModule } from \"@core/pipes/pipes.module\";\n\nconst routes: Routes = [\n  {\n    path: \"engin-mouvement\",\n    component: EnginMouvementListComponent,\n  },\n];\n\n@NgModule({\n  declarations: [EnginMouvementListComponent],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    ChartsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgSelectModule,\n    NgxDatatableModule,\n    CoreCommonModule,\n    NgbDropdownModule,\n    DatePickerI18nModule,\n    CorePipesModule\n  ],\n})\nexport class MouvementEnginModule {}\n","import { SrManagerService } from 'app/main/projets/sr-manager.service';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'environments/environment';\nimport { map } from 'rxjs/operators';\nimport { EnginRoute } from '../models/EnginRoute';\nimport { BehaviorSubject } from 'rxjs';\nimport { EnginRouteDTO } from '../dto/EnginRouteDTO';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MouvementEnginService {\n  onEnginListChanged:BehaviorSubject<any[]>;\n  constructor(private srManagerService:SrManagerService) {\n      // @ts-ignore\n    this.onEnginListChanged= new BehaviorSubject<any[]>();\n   }\n\n  getAllEnginRoutes(): Promise<any[]> {\n    let url = environment.EnginRteapi + \"/getAllEnginRoutes\";\n\n    return new Promise((resolve, reject) => {\n      this.srManagerService\n        .getResource(url)\n        .pipe(\n          map((routes: EnginRoute[]) =>\n            routes.sort(\n              (a, b) =>\n                new Date(b.date!).getTime() - new Date(a.date!).getTime()\n            )\n          )\n        )\n        .subscribe((response: any[]) => {\n          this.onEnginListChanged.next(response);\n          resolve(response);\n        }, reject);\n    });\n  }\n  updateRendement(dto: EnginRouteDTO): Promise<any> {\n    const url = environment.EnginRteapi + \"/updateRendement\";\n\n    return new Promise((resolve, reject) => {\n      this.srManagerService.putRessource(url, dto).subscribe(\n        (response: any) => {\n          this.onEnginListChanged.next(response);\n          resolve(response);\n        },\n        (error) => {\n          reject(error);\n        }\n      );\n    });\n  }\n}\n\n"],"sourceRoot":"webpack:///"}